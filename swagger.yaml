openapi: 3.0.1
info:
  title: Furya - Cosmwasm
  description: "A REST interface for state queries, legacy transactions"
  version: "2.7"
servers:
- url: /
paths:
  /ibc/apps/interchain_accounts/controller/v1/owners/{owner}/connections/{connection_id}:
    get:
      tags:
      - Query
      summary: InterchainAccount returns the interchain account address for a given
        owner address on a given connection
      operationId: InterchainAccount
      parameters:
      - name: owner
        in: path
        required: true
        schema:
          type: string
      - name: connection_id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  address:
                    type: string
                description: QueryInterchainAccountResponse the response type for
                  the Query/InterchainAccount RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
  /ibc/apps/interchain_accounts/controller/v1/params:
    get:
      tags:
      - Query
      summary: Params queries all parameters of the ICA controller submodule.
      operationId: ICAController
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  params:
                    type: object
                    properties:
                      controller_enabled:
                        type: boolean
                        description: controller_enabled enables or disables the controller
                          submodule.
                    description: params defines the parameters of the module.
                description: QueryParamsResponse is the response type for the Query/Params
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
  /ibc/apps/interchain_accounts/host/v1/params:
    get:
      tags:
      - Query
      summary: Params queries all parameters of the ICA host submodule.
      operationId: ICAHost
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  params:
                    type: object
                    properties:
                      host_enabled:
                        type: boolean
                        description: host_enabled enables or disables the host submodule.
                      allow_messages:
                        type: array
                        description: allow_messages defines a list of sdk message
                          typeURLs allowed to be executed on a host chain.
                        items:
                          type: string
                    description: params defines the parameters of the module.
                description: QueryParamsResponse is the response type for the Query/Params
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
  /cosmos/auth/v1beta1/account_info/{address}:
    get:
      tags:
      - Query
      summary: AccountInfo queries account info which is common to all account types.
      description: "Since: cosmos-sdk 0.47"
      operationId: AccountInfo
      parameters:
      - name: address
        in: path
        description: address is the account address string.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  info:
                    type: object
                    properties:
                      address:
                        type: string
                      pub_key:
                        type: object
                        properties:
                          type_url:
                            type: string
                            description: |-
                              A URL/resource name that uniquely identifies the type of the serialized
                              protocol buffer message. This string must contain at least
                              one "/" character. The last segment of the URL's path must represent
                              the fully qualified name of the type (as in
                              `path/google.protobuf.Duration`). The name should be in a canonical form
                              (e.g., leading "." is not accepted).

                              In practice, teams usually precompile into the binary all types that they
                              expect it to use in the context of Any. However, for URLs which use the
                              scheme `http`, `https`, or no scheme, one can optionally set up a type
                              server that maps type URLs to message definitions as follows:

                              * If no scheme is provided, `https` is assumed.
                              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                value in binary format, or produce an error.
                              * Applications are allowed to cache lookup results based on the
                                URL, or have them precompiled into a binary to avoid any
                                lookup. Therefore, binary compatibility needs to be preserved
                                on changes to types. (Use versioned type names to manage
                                breaking changes.)

                              Note: this functionality is not currently available in the official
                              protobuf release, and it is not used for type URLs beginning with
                              type.googleapis.com.

                              Schemes other than `http`, `https` (or the empty scheme) might be
                              used with implementation specific semantics.
                          value:
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            description: Must be a valid serialized protocol buffer
                              of the above specified type.
                            format: byte
                        description: |-
                          `Any` contains an arbitrary serialized protocol buffer message along with a
                          URL that describes the type of the serialized message.

                          Protobuf library provides support to pack/unpack Any values in the form
                          of utility functions or additional generated methods of the Any type.

                          Example 1: Pack and unpack a message in C++.

                              Foo foo = ...;
                              Any any;
                              any.PackFrom(foo);
                              ...
                              if (any.UnpackTo(&foo)) {
                                ...
                              }

                          Example 2: Pack and unpack a message in Java.

                              Foo foo = ...;
                              Any any = Any.pack(foo);
                              ...
                              if (any.is(Foo.class)) {
                                foo = any.unpack(Foo.class);
                              }

                           Example 3: Pack and unpack a message in Python.

                              foo = Foo(...)
                              any = Any()
                              any.Pack(foo)
                              ...
                              if any.Is(Foo.DESCRIPTOR):
                                any.Unpack(foo)
                                ...

                           Example 4: Pack and unpack a message in Go

                               foo := &pb.Foo{...}
                               any, err := ptypes.MarshalAny(foo)
                               ...
                               foo := &pb.Foo{}
                               if err := ptypes.UnmarshalAny(any, foo); err != nil {
                                 ...
                               }

                          The pack methods provided by protobuf library will by default use
                          'type.googleapis.com/full.type.name' as the type URL and the unpack
                          methods only use the fully qualified type name after the last '/'
                          in the type URL, for example "foo.bar.com/x/y.z" will yield type
                          name "y.z".


                          JSON
                          ====
                          The JSON representation of an `Any` value uses the regular
                          representation of the deserialized, embedded message, with an
                          additional field `@type` which contains the type URL. Example:

                              package google.profile;
                              message Person {
                                string first_name = 1;
                                string last_name = 2;
                              }

                              {
                                "@type": "type.googleapis.com/google.profile.Person",
                                "firstName": <string>,
                                "lastName": <string>
                              }

                          If the embedded message type is well-known and has a custom JSON
                          representation, that representation will be embedded adding a field
                          `value` which holds the custom JSON in addition to the `@type`
                          field. Example (for message [google.protobuf.Duration][]):

                              {
                                "@type": "type.googleapis.com/google.protobuf.Duration",
                                "value": "1.212s"
                              }
                      account_number:
                        type: string
                        format: uint64
                      sequence:
                        type: string
                        format: uint64
                    description: info is the account info which is represented by
                      BaseAccount.
                description: |-
                  QueryAccountInfoResponse is the Query/AccountInfo response type.

                  Since: cosmos-sdk 0.47
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/auth/v1beta1/accounts:
    get:
      tags:
      - Query
      summary: Accounts returns all the existing accounts.
      description: |-
        When called from another module, this query might consume a high amount of
        gas if the pagination field is incorrectly set.

        Since: cosmos-sdk 0.43
      operationId: Accounts
      parameters:
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  accounts:
                    title: accounts are the existing accounts
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
                description: |-
                  QueryAccountsResponse is the response type for the Query/Accounts RPC method.

                  Since: cosmos-sdk 0.43
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/auth/v1beta1/accounts/{address}:
    get:
      tags:
      - Query
      summary: Account returns account details based on address.
      operationId: Account
      parameters:
      - name: address
        in: path
        description: address defines the address to query for.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  account:
                    type: object
                    properties:
                      type_url:
                        type: string
                        description: |-
                          A URL/resource name that uniquely identifies the type of the serialized
                          protocol buffer message. This string must contain at least
                          one "/" character. The last segment of the URL's path must represent
                          the fully qualified name of the type (as in
                          `path/google.protobuf.Duration`). The name should be in a canonical form
                          (e.g., leading "." is not accepted).

                          In practice, teams usually precompile into the binary all types that they
                          expect it to use in the context of Any. However, for URLs which use the
                          scheme `http`, `https`, or no scheme, one can optionally set up a type
                          server that maps type URLs to message definitions as follows:

                          * If no scheme is provided, `https` is assumed.
                          * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                            value in binary format, or produce an error.
                          * Applications are allowed to cache lookup results based on the
                            URL, or have them precompiled into a binary to avoid any
                            lookup. Therefore, binary compatibility needs to be preserved
                            on changes to types. (Use versioned type names to manage
                            breaking changes.)

                          Note: this functionality is not currently available in the official
                          protobuf release, and it is not used for type URLs beginning with
                          type.googleapis.com.

                          Schemes other than `http`, `https` (or the empty scheme) might be
                          used with implementation specific semantics.
                      value:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: Must be a valid serialized protocol buffer of
                          the above specified type.
                        format: byte
                    description: |-
                      `Any` contains an arbitrary serialized protocol buffer message along with a
                      URL that describes the type of the serialized message.

                      Protobuf library provides support to pack/unpack Any values in the form
                      of utility functions or additional generated methods of the Any type.

                      Example 1: Pack and unpack a message in C++.

                          Foo foo = ...;
                          Any any;
                          any.PackFrom(foo);
                          ...
                          if (any.UnpackTo(&foo)) {
                            ...
                          }

                      Example 2: Pack and unpack a message in Java.

                          Foo foo = ...;
                          Any any = Any.pack(foo);
                          ...
                          if (any.is(Foo.class)) {
                            foo = any.unpack(Foo.class);
                          }

                       Example 3: Pack and unpack a message in Python.

                          foo = Foo(...)
                          any = Any()
                          any.Pack(foo)
                          ...
                          if any.Is(Foo.DESCRIPTOR):
                            any.Unpack(foo)
                            ...

                       Example 4: Pack and unpack a message in Go

                           foo := &pb.Foo{...}
                           any, err := ptypes.MarshalAny(foo)
                           ...
                           foo := &pb.Foo{}
                           if err := ptypes.UnmarshalAny(any, foo); err != nil {
                             ...
                           }

                      The pack methods provided by protobuf library will by default use
                      'type.googleapis.com/full.type.name' as the type URL and the unpack
                      methods only use the fully qualified type name after the last '/'
                      in the type URL, for example "foo.bar.com/x/y.z" will yield type
                      name "y.z".


                      JSON
                      ====
                      The JSON representation of an `Any` value uses the regular
                      representation of the deserialized, embedded message, with an
                      additional field `@type` which contains the type URL. Example:

                          package google.profile;
                          message Person {
                            string first_name = 1;
                            string last_name = 2;
                          }

                          {
                            "@type": "type.googleapis.com/google.profile.Person",
                            "firstName": <string>,
                            "lastName": <string>
                          }

                      If the embedded message type is well-known and has a custom JSON
                      representation, that representation will be embedded adding a field
                      `value` which holds the custom JSON in addition to the `@type`
                      field. Example (for message [google.protobuf.Duration][]):

                          {
                            "@type": "type.googleapis.com/google.protobuf.Duration",
                            "value": "1.212s"
                          }
                description: QueryAccountResponse is the response type for the Query/Account
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/auth/v1beta1/address_by_id/{id}:
    get:
      tags:
      - Query
      summary: AccountAddressByID returns account address based on account number.
      description: "Since: cosmos-sdk 0.46.2"
      operationId: AccountAddressByID
      parameters:
      - name: id
        in: path
        description: |-
          Deprecated, use account_id instead

          id is the account number of the address to be queried. This field
          should have been an uint64 (like all account numbers), and will be
          updated to uint64 in a future version of the auth query.
        required: true
        schema:
          type: string
          format: int64
      - name: account_id
        in: query
        description: |-
          account_id is the account number of the address to be queried.

          Since: cosmos-sdk 0.47
        schema:
          type: string
          format: uint64
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                title: QueryAccountAddressByIDResponse is the response type for AccountAddressByID
                  rpc method
                type: object
                properties:
                  account_address:
                    type: string
                description: "Since: cosmos-sdk 0.46.2"
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/auth/v1beta1/bech32:
    get:
      tags:
      - Query
      summary: Bech32Prefix queries bech32Prefix
      description: "Since: cosmos-sdk 0.46"
      operationId: Bech32Prefix
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  bech32_prefix:
                    type: string
                description: |-
                  Bech32PrefixResponse is the response type for Bech32Prefix rpc method.

                  Since: cosmos-sdk 0.46
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/auth/v1beta1/bech32/{address_bytes}:
    get:
      tags:
      - Query
      summary: AddressBytesToString converts Account Address bytes to string
      description: "Since: cosmos-sdk 0.46"
      operationId: AddressBytesToString
      parameters:
      - name: address_bytes
        in: path
        required: true
        schema:
          type: string
          format: byte
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  address_string:
                    type: string
                description: |-
                  AddressBytesToStringResponse is the response type for AddressString rpc method.

                  Since: cosmos-sdk 0.46
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/auth/v1beta1/bech32/{address_string}:
    get:
      tags:
      - Query
      summary: AddressStringToBytes converts Address string to bytes
      description: "Since: cosmos-sdk 0.46"
      operationId: AddressStringToBytes
      parameters:
      - name: address_string
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  address_bytes:
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    format: byte
                description: |-
                  AddressStringToBytesResponse is the response type for AddressBytes rpc method.

                  Since: cosmos-sdk 0.46
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/auth/v1beta1/module_accounts:
    get:
      tags:
      - Query
      summary: ModuleAccounts returns all the existing module accounts.
      description: "Since: cosmos-sdk 0.46"
      operationId: ModuleAccounts
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  accounts:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                description: |-
                  QueryModuleAccountsResponse is the response type for the Query/ModuleAccounts RPC method.

                  Since: cosmos-sdk 0.46
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/auth/v1beta1/module_accounts/{name}:
    get:
      tags:
      - Query
      summary: ModuleAccountByName returns the module account info by module name
      operationId: ModuleAccountByName
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  account:
                    type: object
                    properties:
                      type_url:
                        type: string
                        description: |-
                          A URL/resource name that uniquely identifies the type of the serialized
                          protocol buffer message. This string must contain at least
                          one "/" character. The last segment of the URL's path must represent
                          the fully qualified name of the type (as in
                          `path/google.protobuf.Duration`). The name should be in a canonical form
                          (e.g., leading "." is not accepted).

                          In practice, teams usually precompile into the binary all types that they
                          expect it to use in the context of Any. However, for URLs which use the
                          scheme `http`, `https`, or no scheme, one can optionally set up a type
                          server that maps type URLs to message definitions as follows:

                          * If no scheme is provided, `https` is assumed.
                          * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                            value in binary format, or produce an error.
                          * Applications are allowed to cache lookup results based on the
                            URL, or have them precompiled into a binary to avoid any
                            lookup. Therefore, binary compatibility needs to be preserved
                            on changes to types. (Use versioned type names to manage
                            breaking changes.)

                          Note: this functionality is not currently available in the official
                          protobuf release, and it is not used for type URLs beginning with
                          type.googleapis.com.

                          Schemes other than `http`, `https` (or the empty scheme) might be
                          used with implementation specific semantics.
                      value:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: Must be a valid serialized protocol buffer of
                          the above specified type.
                        format: byte
                    description: |-
                      `Any` contains an arbitrary serialized protocol buffer message along with a
                      URL that describes the type of the serialized message.

                      Protobuf library provides support to pack/unpack Any values in the form
                      of utility functions or additional generated methods of the Any type.

                      Example 1: Pack and unpack a message in C++.

                          Foo foo = ...;
                          Any any;
                          any.PackFrom(foo);
                          ...
                          if (any.UnpackTo(&foo)) {
                            ...
                          }

                      Example 2: Pack and unpack a message in Java.

                          Foo foo = ...;
                          Any any = Any.pack(foo);
                          ...
                          if (any.is(Foo.class)) {
                            foo = any.unpack(Foo.class);
                          }

                       Example 3: Pack and unpack a message in Python.

                          foo = Foo(...)
                          any = Any()
                          any.Pack(foo)
                          ...
                          if any.Is(Foo.DESCRIPTOR):
                            any.Unpack(foo)
                            ...

                       Example 4: Pack and unpack a message in Go

                           foo := &pb.Foo{...}
                           any, err := ptypes.MarshalAny(foo)
                           ...
                           foo := &pb.Foo{}
                           if err := ptypes.UnmarshalAny(any, foo); err != nil {
                             ...
                           }

                      The pack methods provided by protobuf library will by default use
                      'type.googleapis.com/full.type.name' as the type URL and the unpack
                      methods only use the fully qualified type name after the last '/'
                      in the type URL, for example "foo.bar.com/x/y.z" will yield type
                      name "y.z".


                      JSON
                      ====
                      The JSON representation of an `Any` value uses the regular
                      representation of the deserialized, embedded message, with an
                      additional field `@type` which contains the type URL. Example:

                          package google.profile;
                          message Person {
                            string first_name = 1;
                            string last_name = 2;
                          }

                          {
                            "@type": "type.googleapis.com/google.profile.Person",
                            "firstName": <string>,
                            "lastName": <string>
                          }

                      If the embedded message type is well-known and has a custom JSON
                      representation, that representation will be embedded adding a field
                      `value` which holds the custom JSON in addition to the `@type`
                      field. Example (for message [google.protobuf.Duration][]):

                          {
                            "@type": "type.googleapis.com/google.protobuf.Duration",
                            "value": "1.212s"
                          }
                description: QueryModuleAccountByNameResponse is the response type
                  for the Query/ModuleAccountByName RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/auth/v1beta1/params:
    get:
      tags:
      - Query
      summary: Params queries all parameters.
      operationId: AuthParams
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  params:
                    type: object
                    properties:
                      max_memo_characters:
                        type: string
                        format: uint64
                      tx_sig_limit:
                        type: string
                        format: uint64
                      tx_size_cost_per_byte:
                        type: string
                        format: uint64
                      sig_verify_cost_ed25519:
                        type: string
                        format: uint64
                      sig_verify_cost_secp256k1:
                        type: string
                        format: uint64
                    description: params defines the parameters of the module.
                description: QueryParamsResponse is the response type for the Query/Params
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/authz/v1beta1/grants:
    get:
      tags:
      - Query
      summary: "Returns list of `Authorization`, granted to the grantee by the granter."
      operationId: Grants
      parameters:
      - name: granter
        in: query
        schema:
          type: string
      - name: grantee
        in: query
        schema:
          type: string
      - name: msg_type_url
        in: query
        description: "Optional, msg_type_url, when set, will query only grants matching\
          \ given msg type."
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  grants:
                    type: array
                    description: authorizations is a list of grants granted for grantee
                      by granter.
                    items:
                      type: object
                      properties:
                        authorization:
                          type: object
                          properties:
                            type_url:
                              type: string
                              description: |-
                                A URL/resource name that uniquely identifies the type of the serialized
                                protocol buffer message. This string must contain at least
                                one "/" character. The last segment of the URL's path must represent
                                the fully qualified name of the type (as in
                                `path/google.protobuf.Duration`). The name should be in a canonical form
                                (e.g., leading "." is not accepted).

                                In practice, teams usually precompile into the binary all types that they
                                expect it to use in the context of Any. However, for URLs which use the
                                scheme `http`, `https`, or no scheme, one can optionally set up a type
                                server that maps type URLs to message definitions as follows:

                                * If no scheme is provided, `https` is assumed.
                                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                  value in binary format, or produce an error.
                                * Applications are allowed to cache lookup results based on the
                                  URL, or have them precompiled into a binary to avoid any
                                  lookup. Therefore, binary compatibility needs to be preserved
                                  on changes to types. (Use versioned type names to manage
                                  breaking changes.)

                                Note: this functionality is not currently available in the official
                                protobuf release, and it is not used for type URLs beginning with
                                type.googleapis.com.

                                Schemes other than `http`, `https` (or the empty scheme) might be
                                used with implementation specific semantics.
                            value:
                              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                              type: string
                              description: Must be a valid serialized protocol buffer
                                of the above specified type.
                              format: byte
                          description: |-
                            `Any` contains an arbitrary serialized protocol buffer message along with a
                            URL that describes the type of the serialized message.

                            Protobuf library provides support to pack/unpack Any values in the form
                            of utility functions or additional generated methods of the Any type.

                            Example 1: Pack and unpack a message in C++.

                                Foo foo = ...;
                                Any any;
                                any.PackFrom(foo);
                                ...
                                if (any.UnpackTo(&foo)) {
                                  ...
                                }

                            Example 2: Pack and unpack a message in Java.

                                Foo foo = ...;
                                Any any = Any.pack(foo);
                                ...
                                if (any.is(Foo.class)) {
                                  foo = any.unpack(Foo.class);
                                }

                             Example 3: Pack and unpack a message in Python.

                                foo = Foo(...)
                                any = Any()
                                any.Pack(foo)
                                ...
                                if any.Is(Foo.DESCRIPTOR):
                                  any.Unpack(foo)
                                  ...

                             Example 4: Pack and unpack a message in Go

                                 foo := &pb.Foo{...}
                                 any, err := ptypes.MarshalAny(foo)
                                 ...
                                 foo := &pb.Foo{}
                                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                                   ...
                                 }

                            The pack methods provided by protobuf library will by default use
                            'type.googleapis.com/full.type.name' as the type URL and the unpack
                            methods only use the fully qualified type name after the last '/'
                            in the type URL, for example "foo.bar.com/x/y.z" will yield type
                            name "y.z".


                            JSON
                            ====
                            The JSON representation of an `Any` value uses the regular
                            representation of the deserialized, embedded message, with an
                            additional field `@type` which contains the type URL. Example:

                                package google.profile;
                                message Person {
                                  string first_name = 1;
                                  string last_name = 2;
                                }

                                {
                                  "@type": "type.googleapis.com/google.profile.Person",
                                  "firstName": <string>,
                                  "lastName": <string>
                                }

                            If the embedded message type is well-known and has a custom JSON
                            representation, that representation will be embedded adding a field
                            `value` which holds the custom JSON in addition to the `@type`
                            field. Example (for message [google.protobuf.Duration][]):

                                {
                                  "@type": "type.googleapis.com/google.protobuf.Duration",
                                  "value": "1.212s"
                                }
                        expiration:
                          title: |-
                            time when the grant will expire and will be pruned. If null, then the grant
                            doesn't have a time expiration (other conditions  in `authorization`
                            may apply to invalidate the grant)
                          type: string
                          format: date-time
                      description: |-
                        Grant gives permissions to execute
                        the provide method with expiration time.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines an pagination for the response.
                description: QueryGrantsResponse is the response type for the Query/Authorizations
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/authz/v1beta1/grants/grantee/{grantee}:
    get:
      tags:
      - Query
      summary: GranteeGrants returns a list of `GrantAuthorization` by grantee.
      description: "Since: cosmos-sdk 0.46"
      operationId: GranteeGrants
      parameters:
      - name: grantee
        in: path
        required: true
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  grants:
                    type: array
                    description: grants is a list of grants granted to the grantee.
                    items:
                      title: |-
                        GrantAuthorization extends a grant with both the addresses of the grantee and granter.
                        It is used in genesis.proto and query.proto
                      type: object
                      properties:
                        granter:
                          type: string
                        grantee:
                          type: string
                        authorization:
                          type: object
                          properties:
                            type_url:
                              type: string
                              description: |-
                                A URL/resource name that uniquely identifies the type of the serialized
                                protocol buffer message. This string must contain at least
                                one "/" character. The last segment of the URL's path must represent
                                the fully qualified name of the type (as in
                                `path/google.protobuf.Duration`). The name should be in a canonical form
                                (e.g., leading "." is not accepted).

                                In practice, teams usually precompile into the binary all types that they
                                expect it to use in the context of Any. However, for URLs which use the
                                scheme `http`, `https`, or no scheme, one can optionally set up a type
                                server that maps type URLs to message definitions as follows:

                                * If no scheme is provided, `https` is assumed.
                                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                  value in binary format, or produce an error.
                                * Applications are allowed to cache lookup results based on the
                                  URL, or have them precompiled into a binary to avoid any
                                  lookup. Therefore, binary compatibility needs to be preserved
                                  on changes to types. (Use versioned type names to manage
                                  breaking changes.)

                                Note: this functionality is not currently available in the official
                                protobuf release, and it is not used for type URLs beginning with
                                type.googleapis.com.

                                Schemes other than `http`, `https` (or the empty scheme) might be
                                used with implementation specific semantics.
                            value:
                              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                              type: string
                              description: Must be a valid serialized protocol buffer
                                of the above specified type.
                              format: byte
                          description: |-
                            `Any` contains an arbitrary serialized protocol buffer message along with a
                            URL that describes the type of the serialized message.

                            Protobuf library provides support to pack/unpack Any values in the form
                            of utility functions or additional generated methods of the Any type.

                            Example 1: Pack and unpack a message in C++.

                                Foo foo = ...;
                                Any any;
                                any.PackFrom(foo);
                                ...
                                if (any.UnpackTo(&foo)) {
                                  ...
                                }

                            Example 2: Pack and unpack a message in Java.

                                Foo foo = ...;
                                Any any = Any.pack(foo);
                                ...
                                if (any.is(Foo.class)) {
                                  foo = any.unpack(Foo.class);
                                }

                             Example 3: Pack and unpack a message in Python.

                                foo = Foo(...)
                                any = Any()
                                any.Pack(foo)
                                ...
                                if any.Is(Foo.DESCRIPTOR):
                                  any.Unpack(foo)
                                  ...

                             Example 4: Pack and unpack a message in Go

                                 foo := &pb.Foo{...}
                                 any, err := ptypes.MarshalAny(foo)
                                 ...
                                 foo := &pb.Foo{}
                                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                                   ...
                                 }

                            The pack methods provided by protobuf library will by default use
                            'type.googleapis.com/full.type.name' as the type URL and the unpack
                            methods only use the fully qualified type name after the last '/'
                            in the type URL, for example "foo.bar.com/x/y.z" will yield type
                            name "y.z".


                            JSON
                            ====
                            The JSON representation of an `Any` value uses the regular
                            representation of the deserialized, embedded message, with an
                            additional field `@type` which contains the type URL. Example:

                                package google.profile;
                                message Person {
                                  string first_name = 1;
                                  string last_name = 2;
                                }

                                {
                                  "@type": "type.googleapis.com/google.profile.Person",
                                  "firstName": <string>,
                                  "lastName": <string>
                                }

                            If the embedded message type is well-known and has a custom JSON
                            representation, that representation will be embedded adding a field
                            `value` which holds the custom JSON in addition to the `@type`
                            field. Example (for message [google.protobuf.Duration][]):

                                {
                                  "@type": "type.googleapis.com/google.protobuf.Duration",
                                  "value": "1.212s"
                                }
                        expiration:
                          type: string
                          format: date-time
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines an pagination for the response.
                description: QueryGranteeGrantsResponse is the response type for the
                  Query/GranteeGrants RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/authz/v1beta1/grants/granter/{granter}:
    get:
      tags:
      - Query
      summary: "GranterGrants returns list of `GrantAuthorization`, granted by granter."
      description: "Since: cosmos-sdk 0.46"
      operationId: GranterGrants
      parameters:
      - name: granter
        in: path
        required: true
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  grants:
                    type: array
                    description: grants is a list of grants granted by the granter.
                    items:
                      title: |-
                        GrantAuthorization extends a grant with both the addresses of the grantee and granter.
                        It is used in genesis.proto and query.proto
                      type: object
                      properties:
                        granter:
                          type: string
                        grantee:
                          type: string
                        authorization:
                          type: object
                          properties:
                            type_url:
                              type: string
                              description: |-
                                A URL/resource name that uniquely identifies the type of the serialized
                                protocol buffer message. This string must contain at least
                                one "/" character. The last segment of the URL's path must represent
                                the fully qualified name of the type (as in
                                `path/google.protobuf.Duration`). The name should be in a canonical form
                                (e.g., leading "." is not accepted).

                                In practice, teams usually precompile into the binary all types that they
                                expect it to use in the context of Any. However, for URLs which use the
                                scheme `http`, `https`, or no scheme, one can optionally set up a type
                                server that maps type URLs to message definitions as follows:

                                * If no scheme is provided, `https` is assumed.
                                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                  value in binary format, or produce an error.
                                * Applications are allowed to cache lookup results based on the
                                  URL, or have them precompiled into a binary to avoid any
                                  lookup. Therefore, binary compatibility needs to be preserved
                                  on changes to types. (Use versioned type names to manage
                                  breaking changes.)

                                Note: this functionality is not currently available in the official
                                protobuf release, and it is not used for type URLs beginning with
                                type.googleapis.com.

                                Schemes other than `http`, `https` (or the empty scheme) might be
                                used with implementation specific semantics.
                            value:
                              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                              type: string
                              description: Must be a valid serialized protocol buffer
                                of the above specified type.
                              format: byte
                          description: |-
                            `Any` contains an arbitrary serialized protocol buffer message along with a
                            URL that describes the type of the serialized message.

                            Protobuf library provides support to pack/unpack Any values in the form
                            of utility functions or additional generated methods of the Any type.

                            Example 1: Pack and unpack a message in C++.

                                Foo foo = ...;
                                Any any;
                                any.PackFrom(foo);
                                ...
                                if (any.UnpackTo(&foo)) {
                                  ...
                                }

                            Example 2: Pack and unpack a message in Java.

                                Foo foo = ...;
                                Any any = Any.pack(foo);
                                ...
                                if (any.is(Foo.class)) {
                                  foo = any.unpack(Foo.class);
                                }

                             Example 3: Pack and unpack a message in Python.

                                foo = Foo(...)
                                any = Any()
                                any.Pack(foo)
                                ...
                                if any.Is(Foo.DESCRIPTOR):
                                  any.Unpack(foo)
                                  ...

                             Example 4: Pack and unpack a message in Go

                                 foo := &pb.Foo{...}
                                 any, err := ptypes.MarshalAny(foo)
                                 ...
                                 foo := &pb.Foo{}
                                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                                   ...
                                 }

                            The pack methods provided by protobuf library will by default use
                            'type.googleapis.com/full.type.name' as the type URL and the unpack
                            methods only use the fully qualified type name after the last '/'
                            in the type URL, for example "foo.bar.com/x/y.z" will yield type
                            name "y.z".


                            JSON
                            ====
                            The JSON representation of an `Any` value uses the regular
                            representation of the deserialized, embedded message, with an
                            additional field `@type` which contains the type URL. Example:

                                package google.profile;
                                message Person {
                                  string first_name = 1;
                                  string last_name = 2;
                                }

                                {
                                  "@type": "type.googleapis.com/google.profile.Person",
                                  "firstName": <string>,
                                  "lastName": <string>
                                }

                            If the embedded message type is well-known and has a custom JSON
                            representation, that representation will be embedded adding a field
                            `value` which holds the custom JSON in addition to the `@type`
                            field. Example (for message [google.protobuf.Duration][]):

                                {
                                  "@type": "type.googleapis.com/google.protobuf.Duration",
                                  "value": "1.212s"
                                }
                        expiration:
                          type: string
                          format: date-time
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines an pagination for the response.
                description: QueryGranterGrantsResponse is the response type for the
                  Query/GranterGrants RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/bank/v1beta1/balances/{address}:
    get:
      tags:
      - Query
      summary: AllBalances queries the balance of all coins for a single account.
      description: |-
        When called from another module, this query might consume a high amount of
        gas if the pagination field is incorrectly set.
      operationId: AllBalances
      parameters:
      - name: address
        in: path
        description: address is the address to query balances for.
        required: true
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  balances:
                    type: array
                    description: balances is the balances of all the coins.
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: |-
                        Coin defines a token with a denomination and an amount.

                        NOTE: The amount field is an Int which implements the custom method
                        signatures required by gogoproto.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
                description: |-
                  QueryAllBalancesResponse is the response type for the Query/AllBalances RPC
                  method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
  /cosmos/bank/v1beta1/balances/{address}/by_denom:
    get:
      tags:
      - Query
      summary: Balance queries the balance of a single coin for a single account.
      operationId: Balance
      parameters:
      - name: address
        in: path
        description: address is the address to query balances for.
        required: true
        schema:
          type: string
      - name: denom
        in: query
        description: denom is the coin denom to query balances for.
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  balance:
                    type: object
                    properties:
                      denom:
                        type: string
                      amount:
                        type: string
                    description: |-
                      Coin defines a token with a denomination and an amount.

                      NOTE: The amount field is an Int which implements the custom method
                      signatures required by gogoproto.
                description: QueryBalanceResponse is the response type for the Query/Balance
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
  /cosmos/bank/v1beta1/denom_owners/{denom}:
    get:
      tags:
      - Query
      summary: |-
        DenomOwners queries for all account addresses that own a particular token
        denomination.
      description: |-
        When called from another module, this query might consume a high amount of
        gas if the pagination field is incorrectly set.

        Since: cosmos-sdk 0.46
      operationId: DenomOwners
      parameters:
      - name: denom
        in: path
        description: denom defines the coin denomination to query all account holders
          for.
        required: true
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  denom_owners:
                    type: array
                    items:
                      type: object
                      properties:
                        address:
                          type: string
                          description: address defines the address that owns a particular
                            denomination.
                        balance:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: |-
                            Coin defines a token with a denomination and an amount.

                            NOTE: The amount field is an Int which implements the custom method
                            signatures required by gogoproto.
                      description: |-
                        DenomOwner defines structure representing an account that owns or holds a
                        particular denominated token. It contains the account address and account
                        balance of the denominated token.

                        Since: cosmos-sdk 0.46
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
                description: |-
                  QueryDenomOwnersResponse defines the RPC response of a DenomOwners RPC query.

                  Since: cosmos-sdk 0.46
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
  /cosmos/bank/v1beta1/denoms_metadata:
    get:
      tags:
      - Query
      summary: |-
        DenomsMetadata queries the client metadata for all registered coin
        denominations.
      operationId: DenomsMetadata
      parameters:
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  metadatas:
                    type: array
                    description: metadata provides the client information for all
                      the registered tokens.
                    items:
                      type: object
                      properties:
                        description:
                          type: string
                        denom_units:
                          title: denom_units represents the list of DenomUnit's for
                            a given coin
                          type: array
                          items:
                            type: object
                            properties:
                              denom:
                                type: string
                                description: denom represents the string name of the
                                  given denom unit (e.g uatom).
                              exponent:
                                type: integer
                                description: |-
                                  exponent represents power of 10 exponent that one must
                                  raise the base_denom to in order to equal the given DenomUnit's denom
                                  1 denom = 10^exponent base_denom
                                  (e.g. with a base_denom of uatom, one can create a DenomUnit of 'atom' with
                                  exponent = 6, thus: 1 atom = 10^6 uatom).
                                format: int64
                              aliases:
                                title: aliases is a list of string aliases for the
                                  given denom
                                type: array
                                items:
                                  type: string
                            description: |-
                              DenomUnit represents a struct that describes a given
                              denomination unit of the basic token.
                        base:
                          type: string
                          description: base represents the base denom (should be the
                            DenomUnit with exponent = 0).
                        display:
                          type: string
                          description: |-
                            display indicates the suggested denom that should be
                            displayed in clients.
                        name:
                          title: "name defines the name of the token (eg: Cosmos Atom)"
                          type: string
                          description: "Since: cosmos-sdk 0.43"
                        symbol:
                          type: string
                          description: |-
                            symbol is the token symbol usually shown on exchanges (eg: ATOM). This can
                            be the same as the display.

                            Since: cosmos-sdk 0.43
                        uri:
                          type: string
                          description: |-
                            URI to a document (on or off-chain) that contains additional information. Optional.

                            Since: cosmos-sdk 0.46
                        uri_hash:
                          type: string
                          description: |-
                            URIHash is a sha256 hash of a document pointed by URI. It's used to verify that
                            the document didn't change. Optional.

                            Since: cosmos-sdk 0.46
                      description: |-
                        Metadata represents a struct that describes
                        a basic token.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
                description: |-
                  QueryDenomsMetadataResponse is the response type for the Query/DenomsMetadata RPC
                  method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
  /cosmos/bank/v1beta1/denoms_metadata/{denom}:
    get:
      tags:
      - Query
      summary: DenomsMetadata queries the client metadata of a given coin denomination.
      operationId: DenomMetadata
      parameters:
      - name: denom
        in: path
        description: denom is the coin denom to query the metadata for.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  metadata:
                    type: object
                    properties:
                      description:
                        type: string
                      denom_units:
                        title: denom_units represents the list of DenomUnit's for
                          a given coin
                        type: array
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                              description: denom represents the string name of the
                                given denom unit (e.g uatom).
                            exponent:
                              type: integer
                              description: |-
                                exponent represents power of 10 exponent that one must
                                raise the base_denom to in order to equal the given DenomUnit's denom
                                1 denom = 10^exponent base_denom
                                (e.g. with a base_denom of uatom, one can create a DenomUnit of 'atom' with
                                exponent = 6, thus: 1 atom = 10^6 uatom).
                              format: int64
                            aliases:
                              title: aliases is a list of string aliases for the given
                                denom
                              type: array
                              items:
                                type: string
                          description: |-
                            DenomUnit represents a struct that describes a given
                            denomination unit of the basic token.
                      base:
                        type: string
                        description: base represents the base denom (should be the
                          DenomUnit with exponent = 0).
                      display:
                        type: string
                        description: |-
                          display indicates the suggested denom that should be
                          displayed in clients.
                      name:
                        title: "name defines the name of the token (eg: Cosmos Atom)"
                        type: string
                        description: "Since: cosmos-sdk 0.43"
                      symbol:
                        type: string
                        description: |-
                          symbol is the token symbol usually shown on exchanges (eg: ATOM). This can
                          be the same as the display.

                          Since: cosmos-sdk 0.43
                      uri:
                        type: string
                        description: |-
                          URI to a document (on or off-chain) that contains additional information. Optional.

                          Since: cosmos-sdk 0.46
                      uri_hash:
                        type: string
                        description: |-
                          URIHash is a sha256 hash of a document pointed by URI. It's used to verify that
                          the document didn't change. Optional.

                          Since: cosmos-sdk 0.46
                    description: |-
                      Metadata represents a struct that describes
                      a basic token.
                description: |-
                  QueryDenomMetadataResponse is the response type for the Query/DenomMetadata RPC
                  method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
  /cosmos/bank/v1beta1/params:
    get:
      tags:
      - Query
      summary: Params queries the parameters of x/bank module.
      operationId: BankParams
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  params:
                    type: object
                    properties:
                      send_enabled:
                        type: array
                        description: |-
                          Deprecated: Use of SendEnabled in params is deprecated.
                          For genesis, use the newly added send_enabled field in the genesis object.
                          Storage, lookup, and manipulation of this information is now in the keeper.

                          As of cosmos-sdk 0.47, this only exists for backwards compatibility of genesis files.
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                            enabled:
                              type: boolean
                          description: |-
                            SendEnabled maps coin denom to a send_enabled status (whether a denom is
                            sendable).
                      default_send_enabled:
                        type: boolean
                    description: Params defines the parameters for the bank module.
                description: QueryParamsResponse defines the response type for querying
                  x/bank parameters.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
  /cosmos/bank/v1beta1/send_enabled:
    get:
      tags:
      - Query
      summary: SendEnabled queries for SendEnabled entries.
      description: |-
        This query only returns denominations that have specific SendEnabled settings.
        Any denomination that does not have a specific setting will use the default
        params.default_send_enabled, and will not be returned by this query.

        Since: cosmos-sdk 0.47
      operationId: SendEnabled
      parameters:
      - name: denoms
        in: query
        description: denoms is the specific denoms you want look up. Leave empty to
          get all entries.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  send_enabled:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        enabled:
                          type: boolean
                      description: |-
                        SendEnabled maps coin denom to a send_enabled status (whether a denom is
                        sendable).
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: |-
                      pagination defines the pagination in the response. This field is only
                      populated if the denoms field in the request is empty.
                description: |-
                  QuerySendEnabledResponse defines the RPC response of a SendEnable query.

                  Since: cosmos-sdk 0.47
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
  /cosmos/bank/v1beta1/spendable_balances/{address}:
    get:
      tags:
      - Query
      summary: |-
        SpendableBalances queries the spendable balance of all coins for a single
        account.
      description: |-
        When called from another module, this query might consume a high amount of
        gas if the pagination field is incorrectly set.

        Since: cosmos-sdk 0.46
      operationId: SpendableBalances
      parameters:
      - name: address
        in: path
        description: address is the address to query spendable balances for.
        required: true
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  balances:
                    type: array
                    description: balances is the spendable balances of all the coins.
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: |-
                        Coin defines a token with a denomination and an amount.

                        NOTE: The amount field is an Int which implements the custom method
                        signatures required by gogoproto.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
                description: |-
                  QuerySpendableBalancesResponse defines the gRPC response structure for querying
                  an account's spendable balances.

                  Since: cosmos-sdk 0.46
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
  /cosmos/bank/v1beta1/spendable_balances/{address}/by_denom:
    get:
      tags:
      - Query
      summary: |-
        SpendableBalanceByDenom queries the spendable balance of a single denom for
        a single account.
      description: |-
        When called from another module, this query might consume a high amount of
        gas if the pagination field is incorrectly set.

        Since: cosmos-sdk 0.47
      operationId: SpendableBalanceByDenom
      parameters:
      - name: address
        in: path
        description: address is the address to query balances for.
        required: true
        schema:
          type: string
      - name: denom
        in: query
        description: denom is the coin denom to query balances for.
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  balance:
                    type: object
                    properties:
                      denom:
                        type: string
                      amount:
                        type: string
                    description: |-
                      Coin defines a token with a denomination and an amount.

                      NOTE: The amount field is an Int which implements the custom method
                      signatures required by gogoproto.
                description: |-
                  QuerySpendableBalanceByDenomResponse defines the gRPC response structure for
                  querying an account's spendable balance for a specific denom.

                  Since: cosmos-sdk 0.47
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
  /cosmos/bank/v1beta1/supply:
    get:
      tags:
      - Query
      summary: TotalSupply queries the total supply of all coins.
      description: |-
        When called from another module, this query might consume a high amount of
        gas if the pagination field is incorrectly set.
      operationId: TotalSupply
      parameters:
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                title: |-
                  QueryTotalSupplyResponse is the response type for the Query/TotalSupply RPC
                  method
                type: object
                properties:
                  supply:
                    title: supply is the supply of the coins
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: |-
                        Coin defines a token with a denomination and an amount.

                        NOTE: The amount field is an Int which implements the custom method
                        signatures required by gogoproto.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: |-
                      pagination defines the pagination in the response.

                      Since: cosmos-sdk 0.43
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
  /cosmos/bank/v1beta1/supply/by_denom:
    get:
      tags:
      - Query
      summary: SupplyOf queries the supply of a single coin.
      description: |-
        When called from another module, this query might consume a high amount of
        gas if the pagination field is incorrectly set.
      operationId: SupplyOf
      parameters:
      - name: denom
        in: query
        description: denom is the coin denom to query balances for.
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  amount:
                    type: object
                    properties:
                      denom:
                        type: string
                      amount:
                        type: string
                    description: |-
                      Coin defines a token with a denomination and an amount.

                      NOTE: The amount field is an Int which implements the custom method
                      signatures required by gogoproto.
                description: QuerySupplyOfResponse is the response type for the Query/SupplyOf
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
  /cosmos/base/tendermint/v1beta1/abci_query:
    get:
      tags:
      - Service
      summary: |-
        ABCIQuery defines a query handler that supports ABCI queries directly to the
        application, bypassing Tendermint completely. The ABCI query must contain
        a valid and supported path, including app, custom, p2p, and store.
      description: "Since: cosmos-sdk 0.46"
      operationId: ABCIQuery
      parameters:
      - name: data
        in: query
        schema:
          type: string
          format: byte
      - name: path
        in: query
        schema:
          type: string
      - name: height
        in: query
        schema:
          type: string
          format: int64
      - name: prove
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int64
                  log:
                    type: string
                  info:
                    type: string
                  index:
                    type: string
                    format: int64
                  key:
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    format: byte
                  value:
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    format: byte
                  proof_ops:
                    type: object
                    properties:
                      ops:
                        type: array
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                            key:
                              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                              type: string
                              format: byte
                            data:
                              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                              type: string
                              format: byte
                          description: |-
                            ProofOp defines an operation used for calculating Merkle root. The data could
                            be arbitrary format, providing necessary data for example neighbouring node
                            hash.

                            Note: This type is a duplicate of the ProofOp proto type defined in Tendermint.
                    description: |-
                      ProofOps is Merkle proof defined by the list of ProofOps.

                      Note: This type is a duplicate of the ProofOps proto type defined in Tendermint.
                  height:
                    type: string
                    format: int64
                  codespace:
                    type: string
                description: |-
                  ABCIQueryResponse defines the response structure for the ABCIQuery gRPC query.

                  Note: This type is a duplicate of the ResponseQuery proto type defined in
                  Tendermint.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/base/tendermint/v1beta1/blocks/latest:
    get:
      tags:
      - Service
      summary: GetLatestBlock returns the latest block.
      operationId: GetLatestBlock
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  block_id:
                    title: BlockID
                    type: object
                    properties:
                      hash:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        format: byte
                      part_set_header:
                        title: PartsetHeader
                        type: object
                        properties:
                          total:
                            type: integer
                            format: int64
                          hash:
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            format: byte
                  block:
                    title: "Deprecated: please use `sdk_block` instead"
                    type: object
                    properties:
                      header:
                        type: object
                        properties:
                          version:
                            title: basic block info
                            type: object
                            properties:
                              block:
                                type: string
                                format: uint64
                              app:
                                type: string
                                format: uint64
                            description: |-
                              Consensus captures the consensus rules for processing a block in the blockchain,
                              including all blockchain data structures and the rules of the application's
                              state transition machine.
                          chain_id:
                            type: string
                          height:
                            type: string
                            format: int64
                          time:
                            type: string
                            format: date-time
                          last_block_id:
                            title: BlockID
                            type: object
                            properties:
                              hash:
                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                type: string
                                format: byte
                              part_set_header:
                                title: PartsetHeader
                                type: object
                                properties:
                                  total:
                                    type: integer
                                    format: int64
                                  hash:
                                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                    type: string
                                    format: byte
                          last_commit_hash:
                            title: hashes of block data
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            format: byte
                          data_hash:
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            format: byte
                          validators_hash:
                            title: hashes from the app output from the prev block
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            format: byte
                          next_validators_hash:
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            format: byte
                          consensus_hash:
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            format: byte
                          app_hash:
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            format: byte
                          last_results_hash:
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            format: byte
                          evidence_hash:
                            title: consensus info
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            format: byte
                          proposer_address:
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            format: byte
                        description: Header defines the structure of a block header.
                      data:
                        title: Data contains the set of transactions included in the
                          block
                        type: object
                        properties:
                          txs:
                            type: array
                            description: |-
                              Txs that will be applied by state @ block.Height+1.
                              NOTE: not all txs here are valid.  We're just agreeing on the order first.
                              This means that block.AppHash does not include these txs.
                            items:
                              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                              type: string
                              format: byte
                      evidence:
                        type: object
                        properties:
                          evidence:
                            type: array
                            items:
                              type: object
                              properties:
                                duplicate_vote_evidence:
                                  type: object
                                  properties:
                                    vote_a:
                                      type: object
                                      properties:
                                        type:
                                          type: string
                                          description: |-
                                            SignedMsgType is a type of signed message in the consensus.

                                             - SIGNED_MSG_TYPE_PREVOTE: Votes
                                             - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                          default: SIGNED_MSG_TYPE_UNKNOWN
                                          enum:
                                          - SIGNED_MSG_TYPE_UNKNOWN
                                          - SIGNED_MSG_TYPE_PREVOTE
                                          - SIGNED_MSG_TYPE_PRECOMMIT
                                          - SIGNED_MSG_TYPE_PROPOSAL
                                        height:
                                          type: string
                                          format: int64
                                        round:
                                          type: integer
                                          format: int32
                                        block_id:
                                          title: BlockID
                                          type: object
                                          properties:
                                            hash:
                                              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                              type: string
                                              format: byte
                                            part_set_header:
                                              title: PartsetHeader
                                              type: object
                                              properties:
                                                total:
                                                  type: integer
                                                  format: int64
                                                hash:
                                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                  type: string
                                                  format: byte
                                        timestamp:
                                          type: string
                                          format: date-time
                                        validator_address:
                                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                          type: string
                                          format: byte
                                        validator_index:
                                          type: integer
                                          format: int32
                                        signature:
                                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                          type: string
                                          format: byte
                                      description: |-
                                        Vote represents a prevote, precommit, or commit vote from validators for
                                        consensus.
                                    vote_b:
                                      type: object
                                      properties:
                                        type:
                                          type: string
                                          description: |-
                                            SignedMsgType is a type of signed message in the consensus.

                                             - SIGNED_MSG_TYPE_PREVOTE: Votes
                                             - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                          default: SIGNED_MSG_TYPE_UNKNOWN
                                          enum:
                                          - SIGNED_MSG_TYPE_UNKNOWN
                                          - SIGNED_MSG_TYPE_PREVOTE
                                          - SIGNED_MSG_TYPE_PRECOMMIT
                                          - SIGNED_MSG_TYPE_PROPOSAL
                                        height:
                                          type: string
                                          format: int64
                                        round:
                                          type: integer
                                          format: int32
                                        block_id:
                                          title: BlockID
                                          type: object
                                          properties:
                                            hash:
                                              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                              type: string
                                              format: byte
                                            part_set_header:
                                              title: PartsetHeader
                                              type: object
                                              properties:
                                                total:
                                                  type: integer
                                                  format: int64
                                                hash:
                                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                  type: string
                                                  format: byte
                                        timestamp:
                                          type: string
                                          format: date-time
                                        validator_address:
                                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                          type: string
                                          format: byte
                                        validator_index:
                                          type: integer
                                          format: int32
                                        signature:
                                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                          type: string
                                          format: byte
                                      description: |-
                                        Vote represents a prevote, precommit, or commit vote from validators for
                                        consensus.
                                    total_voting_power:
                                      type: string
                                      format: int64
                                    validator_power:
                                      type: string
                                      format: int64
                                    timestamp:
                                      type: string
                                      format: date-time
                                  description: DuplicateVoteEvidence contains evidence
                                    of a validator signed two conflicting votes.
                                light_client_attack_evidence:
                                  type: object
                                  properties:
                                    conflicting_block:
                                      type: object
                                      properties:
                                        signed_header:
                                          type: object
                                          properties:
                                            header:
                                              type: object
                                              properties:
                                                version:
                                                  title: basic block info
                                                  type: object
                                                  properties:
                                                    block:
                                                      type: string
                                                      format: uint64
                                                    app:
                                                      type: string
                                                      format: uint64
                                                  description: |-
                                                    Consensus captures the consensus rules for processing a block in the blockchain,
                                                    including all blockchain data structures and the rules of the application's
                                                    state transition machine.
                                                chain_id:
                                                  type: string
                                                height:
                                                  type: string
                                                  format: int64
                                                time:
                                                  type: string
                                                  format: date-time
                                                last_block_id:
                                                  title: BlockID
                                                  type: object
                                                  properties:
                                                    hash:
                                                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                      type: string
                                                      format: byte
                                                    part_set_header:
                                                      title: PartsetHeader
                                                      type: object
                                                      properties:
                                                        total:
                                                          type: integer
                                                          format: int64
                                                        hash:
                                                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                          type: string
                                                          format: byte
                                                last_commit_hash:
                                                  title: hashes of block data
                                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                  type: string
                                                  format: byte
                                                data_hash:
                                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                  type: string
                                                  format: byte
                                                validators_hash:
                                                  title: hashes from the app output
                                                    from the prev block
                                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                  type: string
                                                  format: byte
                                                next_validators_hash:
                                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                  type: string
                                                  format: byte
                                                consensus_hash:
                                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                  type: string
                                                  format: byte
                                                app_hash:
                                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                  type: string
                                                  format: byte
                                                last_results_hash:
                                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                  type: string
                                                  format: byte
                                                evidence_hash:
                                                  title: consensus info
                                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                  type: string
                                                  format: byte
                                                proposer_address:
                                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                  type: string
                                                  format: byte
                                              description: Header defines the structure
                                                of a block header.
                                            commit:
                                              type: object
                                              properties:
                                                height:
                                                  type: string
                                                  format: int64
                                                round:
                                                  type: integer
                                                  format: int32
                                                block_id:
                                                  title: BlockID
                                                  type: object
                                                  properties:
                                                    hash:
                                                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                      type: string
                                                      format: byte
                                                    part_set_header:
                                                      title: PartsetHeader
                                                      type: object
                                                      properties:
                                                        total:
                                                          type: integer
                                                          format: int64
                                                        hash:
                                                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                          type: string
                                                          format: byte
                                                signatures:
                                                  type: array
                                                  items:
                                                    type: object
                                                    properties:
                                                      block_id_flag:
                                                        title: BlockIdFlag indicates
                                                          which BlcokID the signature
                                                          is for
                                                        type: string
                                                        default: BLOCK_ID_FLAG_UNKNOWN
                                                        enum:
                                                        - BLOCK_ID_FLAG_UNKNOWN
                                                        - BLOCK_ID_FLAG_ABSENT
                                                        - BLOCK_ID_FLAG_COMMIT
                                                        - BLOCK_ID_FLAG_NIL
                                                      validator_address:
                                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                        type: string
                                                        format: byte
                                                      timestamp:
                                                        type: string
                                                        format: date-time
                                                      signature:
                                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                        type: string
                                                        format: byte
                                                    description: CommitSig is a part
                                                      of the Vote included in a Commit.
                                              description: Commit contains the evidence
                                                that a block was committed by a set
                                                of validators.
                                        validator_set:
                                          type: object
                                          properties:
                                            validators:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  address:
                                                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                    type: string
                                                    format: byte
                                                  pub_key:
                                                    title: PublicKey defines the keys
                                                      available for use with Validators
                                                    type: object
                                                    properties:
                                                      ed25519:
                                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                        type: string
                                                        format: byte
                                                      secp256k1:
                                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                        type: string
                                                        format: byte
                                                  voting_power:
                                                    type: string
                                                    format: int64
                                                  proposer_priority:
                                                    type: string
                                                    format: int64
                                            proposer:
                                              type: object
                                              properties:
                                                address:
                                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                  type: string
                                                  format: byte
                                                pub_key:
                                                  title: PublicKey defines the keys
                                                    available for use with Validators
                                                  type: object
                                                  properties:
                                                    ed25519:
                                                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                      type: string
                                                      format: byte
                                                    secp256k1:
                                                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                      type: string
                                                      format: byte
                                                voting_power:
                                                  type: string
                                                  format: int64
                                                proposer_priority:
                                                  type: string
                                                  format: int64
                                            total_voting_power:
                                              type: string
                                              format: int64
                                    common_height:
                                      type: string
                                      format: int64
                                    byzantine_validators:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          address:
                                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                            type: string
                                            format: byte
                                          pub_key:
                                            title: PublicKey defines the keys available
                                              for use with Validators
                                            type: object
                                            properties:
                                              ed25519:
                                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                type: string
                                                format: byte
                                              secp256k1:
                                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                type: string
                                                format: byte
                                          voting_power:
                                            type: string
                                            format: int64
                                          proposer_priority:
                                            type: string
                                            format: int64
                                    total_voting_power:
                                      type: string
                                      format: int64
                                    timestamp:
                                      type: string
                                      format: date-time
                                  description: LightClientAttackEvidence contains
                                    evidence of a set of validators attempting to
                                    mislead a light client.
                      last_commit:
                        type: object
                        properties:
                          height:
                            type: string
                            format: int64
                          round:
                            type: integer
                            format: int32
                          block_id:
                            title: BlockID
                            type: object
                            properties:
                              hash:
                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                type: string
                                format: byte
                              part_set_header:
                                title: PartsetHeader
                                type: object
                                properties:
                                  total:
                                    type: integer
                                    format: int64
                                  hash:
                                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                    type: string
                                    format: byte
                          signatures:
                            type: array
                            items:
                              type: object
                              properties:
                                block_id_flag:
                                  title: BlockIdFlag indicates which BlcokID the signature
                                    is for
                                  type: string
                                  default: BLOCK_ID_FLAG_UNKNOWN
                                  enum:
                                  - BLOCK_ID_FLAG_UNKNOWN
                                  - BLOCK_ID_FLAG_ABSENT
                                  - BLOCK_ID_FLAG_COMMIT
                                  - BLOCK_ID_FLAG_NIL
                                validator_address:
                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                  type: string
                                  format: byte
                                timestamp:
                                  type: string
                                  format: date-time
                                signature:
                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                  type: string
                                  format: byte
                              description: CommitSig is a part of the Vote included
                                in a Commit.
                        description: Commit contains the evidence that a block was
                          committed by a set of validators.
                  sdk_block:
                    title: "Since: cosmos-sdk 0.47"
                    type: object
                    properties:
                      header:
                        type: object
                        properties:
                          version:
                            title: basic block info
                            type: object
                            properties:
                              block:
                                type: string
                                format: uint64
                              app:
                                type: string
                                format: uint64
                            description: |-
                              Consensus captures the consensus rules for processing a block in the blockchain,
                              including all blockchain data structures and the rules of the application's
                              state transition machine.
                          chain_id:
                            type: string
                          height:
                            type: string
                            format: int64
                          time:
                            type: string
                            format: date-time
                          last_block_id:
                            title: BlockID
                            type: object
                            properties:
                              hash:
                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                type: string
                                format: byte
                              part_set_header:
                                title: PartsetHeader
                                type: object
                                properties:
                                  total:
                                    type: integer
                                    format: int64
                                  hash:
                                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                    type: string
                                    format: byte
                          last_commit_hash:
                            title: hashes of block data
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            format: byte
                          data_hash:
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            format: byte
                          validators_hash:
                            title: hashes from the app output from the prev block
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            format: byte
                          next_validators_hash:
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            format: byte
                          consensus_hash:
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            format: byte
                          app_hash:
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            format: byte
                          last_results_hash:
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            format: byte
                          evidence_hash:
                            title: consensus info
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            format: byte
                          proposer_address:
                            type: string
                            description: |-
                              proposer_address is the original block proposer address, formatted as a Bech32 string.
                              In Tendermint, this type is `bytes`, but in the SDK, we convert it to a Bech32 string
                              for better UX.
                        description: Header defines the structure of a Tendermint
                          block header.
                      data:
                        title: Data contains the set of transactions included in the
                          block
                        type: object
                        properties:
                          txs:
                            type: array
                            description: |-
                              Txs that will be applied by state @ block.Height+1.
                              NOTE: not all txs here are valid.  We're just agreeing on the order first.
                              This means that block.AppHash does not include these txs.
                            items:
                              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                              type: string
                              format: byte
                      evidence:
                        type: object
                        properties:
                          evidence:
                            type: array
                            items:
                              type: object
                              properties:
                                duplicate_vote_evidence:
                                  type: object
                                  properties:
                                    vote_a:
                                      type: object
                                      properties:
                                        type:
                                          type: string
                                          description: |-
                                            SignedMsgType is a type of signed message in the consensus.

                                             - SIGNED_MSG_TYPE_PREVOTE: Votes
                                             - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                          default: SIGNED_MSG_TYPE_UNKNOWN
                                          enum:
                                          - SIGNED_MSG_TYPE_UNKNOWN
                                          - SIGNED_MSG_TYPE_PREVOTE
                                          - SIGNED_MSG_TYPE_PRECOMMIT
                                          - SIGNED_MSG_TYPE_PROPOSAL
                                        height:
                                          type: string
                                          format: int64
                                        round:
                                          type: integer
                                          format: int32
                                        block_id:
                                          title: BlockID
                                          type: object
                                          properties:
                                            hash:
                                              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                              type: string
                                              format: byte
                                            part_set_header:
                                              title: PartsetHeader
                                              type: object
                                              properties:
                                                total:
                                                  type: integer
                                                  format: int64
                                                hash:
                                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                  type: string
                                                  format: byte
                                        timestamp:
                                          type: string
                                          format: date-time
                                        validator_address:
                                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                          type: string
                                          format: byte
                                        validator_index:
                                          type: integer
                                          format: int32
                                        signature:
                                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                          type: string
                                          format: byte
                                      description: |-
                                        Vote represents a prevote, precommit, or commit vote from validators for
                                        consensus.
                                    vote_b:
                                      type: object
                                      properties:
                                        type:
                                          type: string
                                          description: |-
                                            SignedMsgType is a type of signed message in the consensus.

                                             - SIGNED_MSG_TYPE_PREVOTE: Votes
                                             - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                          default: SIGNED_MSG_TYPE_UNKNOWN
                                          enum:
                                          - SIGNED_MSG_TYPE_UNKNOWN
                                          - SIGNED_MSG_TYPE_PREVOTE
                                          - SIGNED_MSG_TYPE_PRECOMMIT
                                          - SIGNED_MSG_TYPE_PROPOSAL
                                        height:
                                          type: string
                                          format: int64
                                        round:
                                          type: integer
                                          format: int32
                                        block_id:
                                          title: BlockID
                                          type: object
                                          properties:
                                            hash:
                                              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                              type: string
                                              format: byte
                                            part_set_header:
                                              title: PartsetHeader
                                              type: object
                                              properties:
                                                total:
                                                  type: integer
                                                  format: int64
                                                hash:
                                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                  type: string
                                                  format: byte
                                        timestamp:
                                          type: string
                                          format: date-time
                                        validator_address:
                                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                          type: string
                                          format: byte
                                        validator_index:
                                          type: integer
                                          format: int32
                                        signature:
                                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                          type: string
                                          format: byte
                                      description: |-
                                        Vote represents a prevote, precommit, or commit vote from validators for
                                        consensus.
                                    total_voting_power:
                                      type: string
                                      format: int64
                                    validator_power:
                                      type: string
                                      format: int64
                                    timestamp:
                                      type: string
                                      format: date-time
                                  description: DuplicateVoteEvidence contains evidence
                                    of a validator signed two conflicting votes.
                                light_client_attack_evidence:
                                  type: object
                                  properties:
                                    conflicting_block:
                                      type: object
                                      properties:
                                        signed_header:
                                          type: object
                                          properties:
                                            header:
                                              type: object
                                              properties:
                                                version:
                                                  title: basic block info
                                                  type: object
                                                  properties:
                                                    block:
                                                      type: string
                                                      format: uint64
                                                    app:
                                                      type: string
                                                      format: uint64
                                                  description: |-
                                                    Consensus captures the consensus rules for processing a block in the blockchain,
                                                    including all blockchain data structures and the rules of the application's
                                                    state transition machine.
                                                chain_id:
                                                  type: string
                                                height:
                                                  type: string
                                                  format: int64
                                                time:
                                                  type: string
                                                  format: date-time
                                                last_block_id:
                                                  title: BlockID
                                                  type: object
                                                  properties:
                                                    hash:
                                                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                      type: string
                                                      format: byte
                                                    part_set_header:
                                                      title: PartsetHeader
                                                      type: object
                                                      properties:
                                                        total:
                                                          type: integer
                                                          format: int64
                                                        hash:
                                                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                          type: string
                                                          format: byte
                                                last_commit_hash:
                                                  title: hashes of block data
                                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                  type: string
                                                  format: byte
                                                data_hash:
                                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                  type: string
                                                  format: byte
                                                validators_hash:
                                                  title: hashes from the app output
                                                    from the prev block
                                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                  type: string
                                                  format: byte
                                                next_validators_hash:
                                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                  type: string
                                                  format: byte
                                                consensus_hash:
                                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                  type: string
                                                  format: byte
                                                app_hash:
                                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                  type: string
                                                  format: byte
                                                last_results_hash:
                                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                  type: string
                                                  format: byte
                                                evidence_hash:
                                                  title: consensus info
                                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                  type: string
                                                  format: byte
                                                proposer_address:
                                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                  type: string
                                                  format: byte
                                              description: Header defines the structure
                                                of a block header.
                                            commit:
                                              type: object
                                              properties:
                                                height:
                                                  type: string
                                                  format: int64
                                                round:
                                                  type: integer
                                                  format: int32
                                                block_id:
                                                  title: BlockID
                                                  type: object
                                                  properties:
                                                    hash:
                                                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                      type: string
                                                      format: byte
                                                    part_set_header:
                                                      title: PartsetHeader
                                                      type: object
                                                      properties:
                                                        total:
                                                          type: integer
                                                          format: int64
                                                        hash:
                                                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                          type: string
                                                          format: byte
                                                signatures:
                                                  type: array
                                                  items:
                                                    type: object
                                                    properties:
                                                      block_id_flag:
                                                        title: BlockIdFlag indicates
                                                          which BlcokID the signature
                                                          is for
                                                        type: string
                                                        default: BLOCK_ID_FLAG_UNKNOWN
                                                        enum:
                                                        - BLOCK_ID_FLAG_UNKNOWN
                                                        - BLOCK_ID_FLAG_ABSENT
                                                        - BLOCK_ID_FLAG_COMMIT
                                                        - BLOCK_ID_FLAG_NIL
                                                      validator_address:
                                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                        type: string
                                                        format: byte
                                                      timestamp:
                                                        type: string
                                                        format: date-time
                                                      signature:
                                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                        type: string
                                                        format: byte
                                                    description: CommitSig is a part
                                                      of the Vote included in a Commit.
                                              description: Commit contains the evidence
                                                that a block was committed by a set
                                                of validators.
                                        validator_set:
                                          type: object
                                          properties:
                                            validators:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  address:
                                                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                    type: string
                                                    format: byte
                                                  pub_key:
                                                    title: PublicKey defines the keys
                                                      available for use with Validators
                                                    type: object
                                                    properties:
                                                      ed25519:
                                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                        type: string
                                                        format: byte
                                                      secp256k1:
                                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                        type: string
                                                        format: byte
                                                  voting_power:
                                                    type: string
                                                    format: int64
                                                  proposer_priority:
                                                    type: string
                                                    format: int64
                                            proposer:
                                              type: object
                                              properties:
                                                address:
                                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                  type: string
                                                  format: byte
                                                pub_key:
                                                  title: PublicKey defines the keys
                                                    available for use with Validators
                                                  type: object
                                                  properties:
                                                    ed25519:
                                                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                      type: string
                                                      format: byte
                                                    secp256k1:
                                                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                      type: string
                                                      format: byte
                                                voting_power:
                                                  type: string
                                                  format: int64
                                                proposer_priority:
                                                  type: string
                                                  format: int64
                                            total_voting_power:
                                              type: string
                                              format: int64
                                    common_height:
                                      type: string
                                      format: int64
                                    byzantine_validators:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          address:
                                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                            type: string
                                            format: byte
                                          pub_key:
                                            title: PublicKey defines the keys available
                                              for use with Validators
                                            type: object
                                            properties:
                                              ed25519:
                                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                type: string
                                                format: byte
                                              secp256k1:
                                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                type: string
                                                format: byte
                                          voting_power:
                                            type: string
                                            format: int64
                                          proposer_priority:
                                            type: string
                                            format: int64
                                    total_voting_power:
                                      type: string
                                      format: int64
                                    timestamp:
                                      type: string
                                      format: date-time
                                  description: LightClientAttackEvidence contains
                                    evidence of a set of validators attempting to
                                    mislead a light client.
                      last_commit:
                        type: object
                        properties:
                          height:
                            type: string
                            format: int64
                          round:
                            type: integer
                            format: int32
                          block_id:
                            title: BlockID
                            type: object
                            properties:
                              hash:
                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                type: string
                                format: byte
                              part_set_header:
                                title: PartsetHeader
                                type: object
                                properties:
                                  total:
                                    type: integer
                                    format: int64
                                  hash:
                                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                    type: string
                                    format: byte
                          signatures:
                            type: array
                            items:
                              type: object
                              properties:
                                block_id_flag:
                                  title: BlockIdFlag indicates which BlcokID the signature
                                    is for
                                  type: string
                                  default: BLOCK_ID_FLAG_UNKNOWN
                                  enum:
                                  - BLOCK_ID_FLAG_UNKNOWN
                                  - BLOCK_ID_FLAG_ABSENT
                                  - BLOCK_ID_FLAG_COMMIT
                                  - BLOCK_ID_FLAG_NIL
                                validator_address:
                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                  type: string
                                  format: byte
                                timestamp:
                                  type: string
                                  format: date-time
                                signature:
                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                  type: string
                                  format: byte
                              description: CommitSig is a part of the Vote included
                                in a Commit.
                        description: Commit contains the evidence that a block was
                          committed by a set of validators.
                    description: |-
                      Block is tendermint type Block, with the Header proposer address
                      field converted to bech32 string.
                description: GetLatestBlockResponse is the response type for the Query/GetLatestBlock
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/base/tendermint/v1beta1/blocks/{height}:
    get:
      tags:
      - Service
      summary: GetBlockByHeight queries block for given height.
      operationId: GetBlockByHeight
      parameters:
      - name: height
        in: path
        required: true
        schema:
          type: string
          format: int64
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  block_id:
                    title: BlockID
                    type: object
                    properties:
                      hash:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        format: byte
                      part_set_header:
                        title: PartsetHeader
                        type: object
                        properties:
                          total:
                            type: integer
                            format: int64
                          hash:
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            format: byte
                  block:
                    title: "Deprecated: please use `sdk_block` instead"
                    type: object
                    properties:
                      header:
                        type: object
                        properties:
                          version:
                            title: basic block info
                            type: object
                            properties:
                              block:
                                type: string
                                format: uint64
                              app:
                                type: string
                                format: uint64
                            description: |-
                              Consensus captures the consensus rules for processing a block in the blockchain,
                              including all blockchain data structures and the rules of the application's
                              state transition machine.
                          chain_id:
                            type: string
                          height:
                            type: string
                            format: int64
                          time:
                            type: string
                            format: date-time
                          last_block_id:
                            title: BlockID
                            type: object
                            properties:
                              hash:
                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                type: string
                                format: byte
                              part_set_header:
                                title: PartsetHeader
                                type: object
                                properties:
                                  total:
                                    type: integer
                                    format: int64
                                  hash:
                                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                    type: string
                                    format: byte
                          last_commit_hash:
                            title: hashes of block data
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            format: byte
                          data_hash:
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            format: byte
                          validators_hash:
                            title: hashes from the app output from the prev block
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            format: byte
                          next_validators_hash:
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            format: byte
                          consensus_hash:
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            format: byte
                          app_hash:
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            format: byte
                          last_results_hash:
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            format: byte
                          evidence_hash:
                            title: consensus info
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            format: byte
                          proposer_address:
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            format: byte
                        description: Header defines the structure of a block header.
                      data:
                        title: Data contains the set of transactions included in the
                          block
                        type: object
                        properties:
                          txs:
                            type: array
                            description: |-
                              Txs that will be applied by state @ block.Height+1.
                              NOTE: not all txs here are valid.  We're just agreeing on the order first.
                              This means that block.AppHash does not include these txs.
                            items:
                              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                              type: string
                              format: byte
                      evidence:
                        type: object
                        properties:
                          evidence:
                            type: array
                            items:
                              type: object
                              properties:
                                duplicate_vote_evidence:
                                  type: object
                                  properties:
                                    vote_a:
                                      type: object
                                      properties:
                                        type:
                                          type: string
                                          description: |-
                                            SignedMsgType is a type of signed message in the consensus.

                                             - SIGNED_MSG_TYPE_PREVOTE: Votes
                                             - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                          default: SIGNED_MSG_TYPE_UNKNOWN
                                          enum:
                                          - SIGNED_MSG_TYPE_UNKNOWN
                                          - SIGNED_MSG_TYPE_PREVOTE
                                          - SIGNED_MSG_TYPE_PRECOMMIT
                                          - SIGNED_MSG_TYPE_PROPOSAL
                                        height:
                                          type: string
                                          format: int64
                                        round:
                                          type: integer
                                          format: int32
                                        block_id:
                                          title: BlockID
                                          type: object
                                          properties:
                                            hash:
                                              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                              type: string
                                              format: byte
                                            part_set_header:
                                              title: PartsetHeader
                                              type: object
                                              properties:
                                                total:
                                                  type: integer
                                                  format: int64
                                                hash:
                                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                  type: string
                                                  format: byte
                                        timestamp:
                                          type: string
                                          format: date-time
                                        validator_address:
                                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                          type: string
                                          format: byte
                                        validator_index:
                                          type: integer
                                          format: int32
                                        signature:
                                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                          type: string
                                          format: byte
                                      description: |-
                                        Vote represents a prevote, precommit, or commit vote from validators for
                                        consensus.
                                    vote_b:
                                      type: object
                                      properties:
                                        type:
                                          type: string
                                          description: |-
                                            SignedMsgType is a type of signed message in the consensus.

                                             - SIGNED_MSG_TYPE_PREVOTE: Votes
                                             - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                          default: SIGNED_MSG_TYPE_UNKNOWN
                                          enum:
                                          - SIGNED_MSG_TYPE_UNKNOWN
                                          - SIGNED_MSG_TYPE_PREVOTE
                                          - SIGNED_MSG_TYPE_PRECOMMIT
                                          - SIGNED_MSG_TYPE_PROPOSAL
                                        height:
                                          type: string
                                          format: int64
                                        round:
                                          type: integer
                                          format: int32
                                        block_id:
                                          title: BlockID
                                          type: object
                                          properties:
                                            hash:
                                              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                              type: string
                                              format: byte
                                            part_set_header:
                                              title: PartsetHeader
                                              type: object
                                              properties:
                                                total:
                                                  type: integer
                                                  format: int64
                                                hash:
                                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                  type: string
                                                  format: byte
                                        timestamp:
                                          type: string
                                          format: date-time
                                        validator_address:
                                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                          type: string
                                          format: byte
                                        validator_index:
                                          type: integer
                                          format: int32
                                        signature:
                                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                          type: string
                                          format: byte
                                      description: |-
                                        Vote represents a prevote, precommit, or commit vote from validators for
                                        consensus.
                                    total_voting_power:
                                      type: string
                                      format: int64
                                    validator_power:
                                      type: string
                                      format: int64
                                    timestamp:
                                      type: string
                                      format: date-time
                                  description: DuplicateVoteEvidence contains evidence
                                    of a validator signed two conflicting votes.
                                light_client_attack_evidence:
                                  type: object
                                  properties:
                                    conflicting_block:
                                      type: object
                                      properties:
                                        signed_header:
                                          type: object
                                          properties:
                                            header:
                                              type: object
                                              properties:
                                                version:
                                                  title: basic block info
                                                  type: object
                                                  properties:
                                                    block:
                                                      type: string
                                                      format: uint64
                                                    app:
                                                      type: string
                                                      format: uint64
                                                  description: |-
                                                    Consensus captures the consensus rules for processing a block in the blockchain,
                                                    including all blockchain data structures and the rules of the application's
                                                    state transition machine.
                                                chain_id:
                                                  type: string
                                                height:
                                                  type: string
                                                  format: int64
                                                time:
                                                  type: string
                                                  format: date-time
                                                last_block_id:
                                                  title: BlockID
                                                  type: object
                                                  properties:
                                                    hash:
                                                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                      type: string
                                                      format: byte
                                                    part_set_header:
                                                      title: PartsetHeader
                                                      type: object
                                                      properties:
                                                        total:
                                                          type: integer
                                                          format: int64
                                                        hash:
                                                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                          type: string
                                                          format: byte
                                                last_commit_hash:
                                                  title: hashes of block data
                                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                  type: string
                                                  format: byte
                                                data_hash:
                                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                  type: string
                                                  format: byte
                                                validators_hash:
                                                  title: hashes from the app output
                                                    from the prev block
                                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                  type: string
                                                  format: byte
                                                next_validators_hash:
                                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                  type: string
                                                  format: byte
                                                consensus_hash:
                                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                  type: string
                                                  format: byte
                                                app_hash:
                                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                  type: string
                                                  format: byte
                                                last_results_hash:
                                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                  type: string
                                                  format: byte
                                                evidence_hash:
                                                  title: consensus info
                                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                  type: string
                                                  format: byte
                                                proposer_address:
                                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                  type: string
                                                  format: byte
                                              description: Header defines the structure
                                                of a block header.
                                            commit:
                                              type: object
                                              properties:
                                                height:
                                                  type: string
                                                  format: int64
                                                round:
                                                  type: integer
                                                  format: int32
                                                block_id:
                                                  title: BlockID
                                                  type: object
                                                  properties:
                                                    hash:
                                                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                      type: string
                                                      format: byte
                                                    part_set_header:
                                                      title: PartsetHeader
                                                      type: object
                                                      properties:
                                                        total:
                                                          type: integer
                                                          format: int64
                                                        hash:
                                                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                          type: string
                                                          format: byte
                                                signatures:
                                                  type: array
                                                  items:
                                                    type: object
                                                    properties:
                                                      block_id_flag:
                                                        title: BlockIdFlag indicates
                                                          which BlcokID the signature
                                                          is for
                                                        type: string
                                                        default: BLOCK_ID_FLAG_UNKNOWN
                                                        enum:
                                                        - BLOCK_ID_FLAG_UNKNOWN
                                                        - BLOCK_ID_FLAG_ABSENT
                                                        - BLOCK_ID_FLAG_COMMIT
                                                        - BLOCK_ID_FLAG_NIL
                                                      validator_address:
                                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                        type: string
                                                        format: byte
                                                      timestamp:
                                                        type: string
                                                        format: date-time
                                                      signature:
                                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                        type: string
                                                        format: byte
                                                    description: CommitSig is a part
                                                      of the Vote included in a Commit.
                                              description: Commit contains the evidence
                                                that a block was committed by a set
                                                of validators.
                                        validator_set:
                                          type: object
                                          properties:
                                            validators:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  address:
                                                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                    type: string
                                                    format: byte
                                                  pub_key:
                                                    title: PublicKey defines the keys
                                                      available for use with Validators
                                                    type: object
                                                    properties:
                                                      ed25519:
                                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                        type: string
                                                        format: byte
                                                      secp256k1:
                                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                        type: string
                                                        format: byte
                                                  voting_power:
                                                    type: string
                                                    format: int64
                                                  proposer_priority:
                                                    type: string
                                                    format: int64
                                            proposer:
                                              type: object
                                              properties:
                                                address:
                                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                  type: string
                                                  format: byte
                                                pub_key:
                                                  title: PublicKey defines the keys
                                                    available for use with Validators
                                                  type: object
                                                  properties:
                                                    ed25519:
                                                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                      type: string
                                                      format: byte
                                                    secp256k1:
                                                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                      type: string
                                                      format: byte
                                                voting_power:
                                                  type: string
                                                  format: int64
                                                proposer_priority:
                                                  type: string
                                                  format: int64
                                            total_voting_power:
                                              type: string
                                              format: int64
                                    common_height:
                                      type: string
                                      format: int64
                                    byzantine_validators:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          address:
                                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                            type: string
                                            format: byte
                                          pub_key:
                                            title: PublicKey defines the keys available
                                              for use with Validators
                                            type: object
                                            properties:
                                              ed25519:
                                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                type: string
                                                format: byte
                                              secp256k1:
                                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                type: string
                                                format: byte
                                          voting_power:
                                            type: string
                                            format: int64
                                          proposer_priority:
                                            type: string
                                            format: int64
                                    total_voting_power:
                                      type: string
                                      format: int64
                                    timestamp:
                                      type: string
                                      format: date-time
                                  description: LightClientAttackEvidence contains
                                    evidence of a set of validators attempting to
                                    mislead a light client.
                      last_commit:
                        type: object
                        properties:
                          height:
                            type: string
                            format: int64
                          round:
                            type: integer
                            format: int32
                          block_id:
                            title: BlockID
                            type: object
                            properties:
                              hash:
                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                type: string
                                format: byte
                              part_set_header:
                                title: PartsetHeader
                                type: object
                                properties:
                                  total:
                                    type: integer
                                    format: int64
                                  hash:
                                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                    type: string
                                    format: byte
                          signatures:
                            type: array
                            items:
                              type: object
                              properties:
                                block_id_flag:
                                  title: BlockIdFlag indicates which BlcokID the signature
                                    is for
                                  type: string
                                  default: BLOCK_ID_FLAG_UNKNOWN
                                  enum:
                                  - BLOCK_ID_FLAG_UNKNOWN
                                  - BLOCK_ID_FLAG_ABSENT
                                  - BLOCK_ID_FLAG_COMMIT
                                  - BLOCK_ID_FLAG_NIL
                                validator_address:
                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                  type: string
                                  format: byte
                                timestamp:
                                  type: string
                                  format: date-time
                                signature:
                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                  type: string
                                  format: byte
                              description: CommitSig is a part of the Vote included
                                in a Commit.
                        description: Commit contains the evidence that a block was
                          committed by a set of validators.
                  sdk_block:
                    title: "Since: cosmos-sdk 0.47"
                    type: object
                    properties:
                      header:
                        type: object
                        properties:
                          version:
                            title: basic block info
                            type: object
                            properties:
                              block:
                                type: string
                                format: uint64
                              app:
                                type: string
                                format: uint64
                            description: |-
                              Consensus captures the consensus rules for processing a block in the blockchain,
                              including all blockchain data structures and the rules of the application's
                              state transition machine.
                          chain_id:
                            type: string
                          height:
                            type: string
                            format: int64
                          time:
                            type: string
                            format: date-time
                          last_block_id:
                            title: BlockID
                            type: object
                            properties:
                              hash:
                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                type: string
                                format: byte
                              part_set_header:
                                title: PartsetHeader
                                type: object
                                properties:
                                  total:
                                    type: integer
                                    format: int64
                                  hash:
                                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                    type: string
                                    format: byte
                          last_commit_hash:
                            title: hashes of block data
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            format: byte
                          data_hash:
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            format: byte
                          validators_hash:
                            title: hashes from the app output from the prev block
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            format: byte
                          next_validators_hash:
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            format: byte
                          consensus_hash:
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            format: byte
                          app_hash:
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            format: byte
                          last_results_hash:
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            format: byte
                          evidence_hash:
                            title: consensus info
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            format: byte
                          proposer_address:
                            type: string
                            description: |-
                              proposer_address is the original block proposer address, formatted as a Bech32 string.
                              In Tendermint, this type is `bytes`, but in the SDK, we convert it to a Bech32 string
                              for better UX.
                        description: Header defines the structure of a Tendermint
                          block header.
                      data:
                        title: Data contains the set of transactions included in the
                          block
                        type: object
                        properties:
                          txs:
                            type: array
                            description: |-
                              Txs that will be applied by state @ block.Height+1.
                              NOTE: not all txs here are valid.  We're just agreeing on the order first.
                              This means that block.AppHash does not include these txs.
                            items:
                              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                              type: string
                              format: byte
                      evidence:
                        type: object
                        properties:
                          evidence:
                            type: array
                            items:
                              type: object
                              properties:
                                duplicate_vote_evidence:
                                  type: object
                                  properties:
                                    vote_a:
                                      type: object
                                      properties:
                                        type:
                                          type: string
                                          description: |-
                                            SignedMsgType is a type of signed message in the consensus.

                                             - SIGNED_MSG_TYPE_PREVOTE: Votes
                                             - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                          default: SIGNED_MSG_TYPE_UNKNOWN
                                          enum:
                                          - SIGNED_MSG_TYPE_UNKNOWN
                                          - SIGNED_MSG_TYPE_PREVOTE
                                          - SIGNED_MSG_TYPE_PRECOMMIT
                                          - SIGNED_MSG_TYPE_PROPOSAL
                                        height:
                                          type: string
                                          format: int64
                                        round:
                                          type: integer
                                          format: int32
                                        block_id:
                                          title: BlockID
                                          type: object
                                          properties:
                                            hash:
                                              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                              type: string
                                              format: byte
                                            part_set_header:
                                              title: PartsetHeader
                                              type: object
                                              properties:
                                                total:
                                                  type: integer
                                                  format: int64
                                                hash:
                                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                  type: string
                                                  format: byte
                                        timestamp:
                                          type: string
                                          format: date-time
                                        validator_address:
                                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                          type: string
                                          format: byte
                                        validator_index:
                                          type: integer
                                          format: int32
                                        signature:
                                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                          type: string
                                          format: byte
                                      description: |-
                                        Vote represents a prevote, precommit, or commit vote from validators for
                                        consensus.
                                    vote_b:
                                      type: object
                                      properties:
                                        type:
                                          type: string
                                          description: |-
                                            SignedMsgType is a type of signed message in the consensus.

                                             - SIGNED_MSG_TYPE_PREVOTE: Votes
                                             - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                          default: SIGNED_MSG_TYPE_UNKNOWN
                                          enum:
                                          - SIGNED_MSG_TYPE_UNKNOWN
                                          - SIGNED_MSG_TYPE_PREVOTE
                                          - SIGNED_MSG_TYPE_PRECOMMIT
                                          - SIGNED_MSG_TYPE_PROPOSAL
                                        height:
                                          type: string
                                          format: int64
                                        round:
                                          type: integer
                                          format: int32
                                        block_id:
                                          title: BlockID
                                          type: object
                                          properties:
                                            hash:
                                              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                              type: string
                                              format: byte
                                            part_set_header:
                                              title: PartsetHeader
                                              type: object
                                              properties:
                                                total:
                                                  type: integer
                                                  format: int64
                                                hash:
                                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                  type: string
                                                  format: byte
                                        timestamp:
                                          type: string
                                          format: date-time
                                        validator_address:
                                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                          type: string
                                          format: byte
                                        validator_index:
                                          type: integer
                                          format: int32
                                        signature:
                                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                          type: string
                                          format: byte
                                      description: |-
                                        Vote represents a prevote, precommit, or commit vote from validators for
                                        consensus.
                                    total_voting_power:
                                      type: string
                                      format: int64
                                    validator_power:
                                      type: string
                                      format: int64
                                    timestamp:
                                      type: string
                                      format: date-time
                                  description: DuplicateVoteEvidence contains evidence
                                    of a validator signed two conflicting votes.
                                light_client_attack_evidence:
                                  type: object
                                  properties:
                                    conflicting_block:
                                      type: object
                                      properties:
                                        signed_header:
                                          type: object
                                          properties:
                                            header:
                                              type: object
                                              properties:
                                                version:
                                                  title: basic block info
                                                  type: object
                                                  properties:
                                                    block:
                                                      type: string
                                                      format: uint64
                                                    app:
                                                      type: string
                                                      format: uint64
                                                  description: |-
                                                    Consensus captures the consensus rules for processing a block in the blockchain,
                                                    including all blockchain data structures and the rules of the application's
                                                    state transition machine.
                                                chain_id:
                                                  type: string
                                                height:
                                                  type: string
                                                  format: int64
                                                time:
                                                  type: string
                                                  format: date-time
                                                last_block_id:
                                                  title: BlockID
                                                  type: object
                                                  properties:
                                                    hash:
                                                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                      type: string
                                                      format: byte
                                                    part_set_header:
                                                      title: PartsetHeader
                                                      type: object
                                                      properties:
                                                        total:
                                                          type: integer
                                                          format: int64
                                                        hash:
                                                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                          type: string
                                                          format: byte
                                                last_commit_hash:
                                                  title: hashes of block data
                                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                  type: string
                                                  format: byte
                                                data_hash:
                                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                  type: string
                                                  format: byte
                                                validators_hash:
                                                  title: hashes from the app output
                                                    from the prev block
                                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                  type: string
                                                  format: byte
                                                next_validators_hash:
                                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                  type: string
                                                  format: byte
                                                consensus_hash:
                                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                  type: string
                                                  format: byte
                                                app_hash:
                                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                  type: string
                                                  format: byte
                                                last_results_hash:
                                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                  type: string
                                                  format: byte
                                                evidence_hash:
                                                  title: consensus info
                                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                  type: string
                                                  format: byte
                                                proposer_address:
                                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                  type: string
                                                  format: byte
                                              description: Header defines the structure
                                                of a block header.
                                            commit:
                                              type: object
                                              properties:
                                                height:
                                                  type: string
                                                  format: int64
                                                round:
                                                  type: integer
                                                  format: int32
                                                block_id:
                                                  title: BlockID
                                                  type: object
                                                  properties:
                                                    hash:
                                                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                      type: string
                                                      format: byte
                                                    part_set_header:
                                                      title: PartsetHeader
                                                      type: object
                                                      properties:
                                                        total:
                                                          type: integer
                                                          format: int64
                                                        hash:
                                                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                          type: string
                                                          format: byte
                                                signatures:
                                                  type: array
                                                  items:
                                                    type: object
                                                    properties:
                                                      block_id_flag:
                                                        title: BlockIdFlag indicates
                                                          which BlcokID the signature
                                                          is for
                                                        type: string
                                                        default: BLOCK_ID_FLAG_UNKNOWN
                                                        enum:
                                                        - BLOCK_ID_FLAG_UNKNOWN
                                                        - BLOCK_ID_FLAG_ABSENT
                                                        - BLOCK_ID_FLAG_COMMIT
                                                        - BLOCK_ID_FLAG_NIL
                                                      validator_address:
                                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                        type: string
                                                        format: byte
                                                      timestamp:
                                                        type: string
                                                        format: date-time
                                                      signature:
                                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                        type: string
                                                        format: byte
                                                    description: CommitSig is a part
                                                      of the Vote included in a Commit.
                                              description: Commit contains the evidence
                                                that a block was committed by a set
                                                of validators.
                                        validator_set:
                                          type: object
                                          properties:
                                            validators:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  address:
                                                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                    type: string
                                                    format: byte
                                                  pub_key:
                                                    title: PublicKey defines the keys
                                                      available for use with Validators
                                                    type: object
                                                    properties:
                                                      ed25519:
                                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                        type: string
                                                        format: byte
                                                      secp256k1:
                                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                        type: string
                                                        format: byte
                                                  voting_power:
                                                    type: string
                                                    format: int64
                                                  proposer_priority:
                                                    type: string
                                                    format: int64
                                            proposer:
                                              type: object
                                              properties:
                                                address:
                                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                  type: string
                                                  format: byte
                                                pub_key:
                                                  title: PublicKey defines the keys
                                                    available for use with Validators
                                                  type: object
                                                  properties:
                                                    ed25519:
                                                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                      type: string
                                                      format: byte
                                                    secp256k1:
                                                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                      type: string
                                                      format: byte
                                                voting_power:
                                                  type: string
                                                  format: int64
                                                proposer_priority:
                                                  type: string
                                                  format: int64
                                            total_voting_power:
                                              type: string
                                              format: int64
                                    common_height:
                                      type: string
                                      format: int64
                                    byzantine_validators:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          address:
                                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                            type: string
                                            format: byte
                                          pub_key:
                                            title: PublicKey defines the keys available
                                              for use with Validators
                                            type: object
                                            properties:
                                              ed25519:
                                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                type: string
                                                format: byte
                                              secp256k1:
                                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                type: string
                                                format: byte
                                          voting_power:
                                            type: string
                                            format: int64
                                          proposer_priority:
                                            type: string
                                            format: int64
                                    total_voting_power:
                                      type: string
                                      format: int64
                                    timestamp:
                                      type: string
                                      format: date-time
                                  description: LightClientAttackEvidence contains
                                    evidence of a set of validators attempting to
                                    mislead a light client.
                      last_commit:
                        type: object
                        properties:
                          height:
                            type: string
                            format: int64
                          round:
                            type: integer
                            format: int32
                          block_id:
                            title: BlockID
                            type: object
                            properties:
                              hash:
                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                type: string
                                format: byte
                              part_set_header:
                                title: PartsetHeader
                                type: object
                                properties:
                                  total:
                                    type: integer
                                    format: int64
                                  hash:
                                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                    type: string
                                    format: byte
                          signatures:
                            type: array
                            items:
                              type: object
                              properties:
                                block_id_flag:
                                  title: BlockIdFlag indicates which BlcokID the signature
                                    is for
                                  type: string
                                  default: BLOCK_ID_FLAG_UNKNOWN
                                  enum:
                                  - BLOCK_ID_FLAG_UNKNOWN
                                  - BLOCK_ID_FLAG_ABSENT
                                  - BLOCK_ID_FLAG_COMMIT
                                  - BLOCK_ID_FLAG_NIL
                                validator_address:
                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                  type: string
                                  format: byte
                                timestamp:
                                  type: string
                                  format: date-time
                                signature:
                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                  type: string
                                  format: byte
                              description: CommitSig is a part of the Vote included
                                in a Commit.
                        description: Commit contains the evidence that a block was
                          committed by a set of validators.
                    description: |-
                      Block is tendermint type Block, with the Header proposer address
                      field converted to bech32 string.
                description: GetBlockByHeightResponse is the response type for the
                  Query/GetBlockByHeight RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/base/tendermint/v1beta1/node_info:
    get:
      tags:
      - Service
      summary: GetNodeInfo queries the current node info.
      operationId: GetNodeInfo
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  default_node_info:
                    type: object
                    properties:
                      protocol_version:
                        type: object
                        properties:
                          p2p:
                            type: string
                            format: uint64
                          block:
                            type: string
                            format: uint64
                          app:
                            type: string
                            format: uint64
                      default_node_id:
                        type: string
                      listen_addr:
                        type: string
                      network:
                        type: string
                      version:
                        type: string
                      channels:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        format: byte
                      moniker:
                        type: string
                      other:
                        type: object
                        properties:
                          tx_index:
                            type: string
                          rpc_address:
                            type: string
                  application_version:
                    type: object
                    properties:
                      name:
                        type: string
                      app_name:
                        type: string
                      version:
                        type: string
                      git_commit:
                        type: string
                      build_tags:
                        type: string
                      go_version:
                        type: string
                      build_deps:
                        type: array
                        items:
                          title: Module is the type for VersionInfo
                          type: object
                          properties:
                            path:
                              title: module path
                              type: string
                            version:
                              title: module version
                              type: string
                            sum:
                              title: checksum
                              type: string
                      cosmos_sdk_version:
                        title: "Since: cosmos-sdk 0.43"
                        type: string
                    description: VersionInfo is the type for the GetNodeInfoResponse
                      message.
                description: GetNodeInfoResponse is the response type for the Query/GetNodeInfo
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/base/tendermint/v1beta1/syncing:
    get:
      tags:
      - Service
      summary: GetSyncing queries node syncing.
      operationId: GetSyncing
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  syncing:
                    type: boolean
                description: GetSyncingResponse is the response type for the Query/GetSyncing
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/base/tendermint/v1beta1/validatorsets/latest:
    get:
      tags:
      - Service
      summary: GetLatestValidatorSet queries latest validator-set.
      operationId: GetLatestValidatorSet
      parameters:
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  block_height:
                    type: string
                    format: int64
                  validators:
                    type: array
                    items:
                      type: object
                      properties:
                        address:
                          type: string
                        pub_key:
                          type: object
                          properties:
                            type_url:
                              type: string
                              description: |-
                                A URL/resource name that uniquely identifies the type of the serialized
                                protocol buffer message. This string must contain at least
                                one "/" character. The last segment of the URL's path must represent
                                the fully qualified name of the type (as in
                                `path/google.protobuf.Duration`). The name should be in a canonical form
                                (e.g., leading "." is not accepted).

                                In practice, teams usually precompile into the binary all types that they
                                expect it to use in the context of Any. However, for URLs which use the
                                scheme `http`, `https`, or no scheme, one can optionally set up a type
                                server that maps type URLs to message definitions as follows:

                                * If no scheme is provided, `https` is assumed.
                                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                  value in binary format, or produce an error.
                                * Applications are allowed to cache lookup results based on the
                                  URL, or have them precompiled into a binary to avoid any
                                  lookup. Therefore, binary compatibility needs to be preserved
                                  on changes to types. (Use versioned type names to manage
                                  breaking changes.)

                                Note: this functionality is not currently available in the official
                                protobuf release, and it is not used for type URLs beginning with
                                type.googleapis.com.

                                Schemes other than `http`, `https` (or the empty scheme) might be
                                used with implementation specific semantics.
                            value:
                              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                              type: string
                              description: Must be a valid serialized protocol buffer
                                of the above specified type.
                              format: byte
                          description: |-
                            `Any` contains an arbitrary serialized protocol buffer message along with a
                            URL that describes the type of the serialized message.

                            Protobuf library provides support to pack/unpack Any values in the form
                            of utility functions or additional generated methods of the Any type.

                            Example 1: Pack and unpack a message in C++.

                                Foo foo = ...;
                                Any any;
                                any.PackFrom(foo);
                                ...
                                if (any.UnpackTo(&foo)) {
                                  ...
                                }

                            Example 2: Pack and unpack a message in Java.

                                Foo foo = ...;
                                Any any = Any.pack(foo);
                                ...
                                if (any.is(Foo.class)) {
                                  foo = any.unpack(Foo.class);
                                }

                             Example 3: Pack and unpack a message in Python.

                                foo = Foo(...)
                                any = Any()
                                any.Pack(foo)
                                ...
                                if any.Is(Foo.DESCRIPTOR):
                                  any.Unpack(foo)
                                  ...

                             Example 4: Pack and unpack a message in Go

                                 foo := &pb.Foo{...}
                                 any, err := ptypes.MarshalAny(foo)
                                 ...
                                 foo := &pb.Foo{}
                                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                                   ...
                                 }

                            The pack methods provided by protobuf library will by default use
                            'type.googleapis.com/full.type.name' as the type URL and the unpack
                            methods only use the fully qualified type name after the last '/'
                            in the type URL, for example "foo.bar.com/x/y.z" will yield type
                            name "y.z".


                            JSON
                            ====
                            The JSON representation of an `Any` value uses the regular
                            representation of the deserialized, embedded message, with an
                            additional field `@type` which contains the type URL. Example:

                                package google.profile;
                                message Person {
                                  string first_name = 1;
                                  string last_name = 2;
                                }

                                {
                                  "@type": "type.googleapis.com/google.profile.Person",
                                  "firstName": <string>,
                                  "lastName": <string>
                                }

                            If the embedded message type is well-known and has a custom JSON
                            representation, that representation will be embedded adding a field
                            `value` which holds the custom JSON in addition to the `@type`
                            field. Example (for message [google.protobuf.Duration][]):

                                {
                                  "@type": "type.googleapis.com/google.protobuf.Duration",
                                  "value": "1.212s"
                                }
                        voting_power:
                          type: string
                          format: int64
                        proposer_priority:
                          type: string
                          format: int64
                      description: Validator is the type for the validator-set.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines an pagination for the response.
                description: GetLatestValidatorSetResponse is the response type for
                  the Query/GetValidatorSetByHeight RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/base/tendermint/v1beta1/validatorsets/{height}:
    get:
      tags:
      - Service
      summary: GetValidatorSetByHeight queries validator-set at a given height.
      operationId: GetValidatorSetByHeight
      parameters:
      - name: height
        in: path
        required: true
        schema:
          type: string
          format: int64
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  block_height:
                    type: string
                    format: int64
                  validators:
                    type: array
                    items:
                      type: object
                      properties:
                        address:
                          type: string
                        pub_key:
                          type: object
                          properties:
                            type_url:
                              type: string
                              description: |-
                                A URL/resource name that uniquely identifies the type of the serialized
                                protocol buffer message. This string must contain at least
                                one "/" character. The last segment of the URL's path must represent
                                the fully qualified name of the type (as in
                                `path/google.protobuf.Duration`). The name should be in a canonical form
                                (e.g., leading "." is not accepted).

                                In practice, teams usually precompile into the binary all types that they
                                expect it to use in the context of Any. However, for URLs which use the
                                scheme `http`, `https`, or no scheme, one can optionally set up a type
                                server that maps type URLs to message definitions as follows:

                                * If no scheme is provided, `https` is assumed.
                                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                  value in binary format, or produce an error.
                                * Applications are allowed to cache lookup results based on the
                                  URL, or have them precompiled into a binary to avoid any
                                  lookup. Therefore, binary compatibility needs to be preserved
                                  on changes to types. (Use versioned type names to manage
                                  breaking changes.)

                                Note: this functionality is not currently available in the official
                                protobuf release, and it is not used for type URLs beginning with
                                type.googleapis.com.

                                Schemes other than `http`, `https` (or the empty scheme) might be
                                used with implementation specific semantics.
                            value:
                              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                              type: string
                              description: Must be a valid serialized protocol buffer
                                of the above specified type.
                              format: byte
                          description: |-
                            `Any` contains an arbitrary serialized protocol buffer message along with a
                            URL that describes the type of the serialized message.

                            Protobuf library provides support to pack/unpack Any values in the form
                            of utility functions or additional generated methods of the Any type.

                            Example 1: Pack and unpack a message in C++.

                                Foo foo = ...;
                                Any any;
                                any.PackFrom(foo);
                                ...
                                if (any.UnpackTo(&foo)) {
                                  ...
                                }

                            Example 2: Pack and unpack a message in Java.

                                Foo foo = ...;
                                Any any = Any.pack(foo);
                                ...
                                if (any.is(Foo.class)) {
                                  foo = any.unpack(Foo.class);
                                }

                             Example 3: Pack and unpack a message in Python.

                                foo = Foo(...)
                                any = Any()
                                any.Pack(foo)
                                ...
                                if any.Is(Foo.DESCRIPTOR):
                                  any.Unpack(foo)
                                  ...

                             Example 4: Pack and unpack a message in Go

                                 foo := &pb.Foo{...}
                                 any, err := ptypes.MarshalAny(foo)
                                 ...
                                 foo := &pb.Foo{}
                                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                                   ...
                                 }

                            The pack methods provided by protobuf library will by default use
                            'type.googleapis.com/full.type.name' as the type URL and the unpack
                            methods only use the fully qualified type name after the last '/'
                            in the type URL, for example "foo.bar.com/x/y.z" will yield type
                            name "y.z".


                            JSON
                            ====
                            The JSON representation of an `Any` value uses the regular
                            representation of the deserialized, embedded message, with an
                            additional field `@type` which contains the type URL. Example:

                                package google.profile;
                                message Person {
                                  string first_name = 1;
                                  string last_name = 2;
                                }

                                {
                                  "@type": "type.googleapis.com/google.profile.Person",
                                  "firstName": <string>,
                                  "lastName": <string>
                                }

                            If the embedded message type is well-known and has a custom JSON
                            representation, that representation will be embedded adding a field
                            `value` which holds the custom JSON in addition to the `@type`
                            field. Example (for message [google.protobuf.Duration][]):

                                {
                                  "@type": "type.googleapis.com/google.protobuf.Duration",
                                  "value": "1.212s"
                                }
                        voting_power:
                          type: string
                          format: int64
                        proposer_priority:
                          type: string
                          format: int64
                      description: Validator is the type for the validator-set.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines an pagination for the response.
                description: GetValidatorSetByHeightResponse is the response type
                  for the Query/GetValidatorSetByHeight RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/distribution/v1beta1/community_pool:
    get:
      tags:
      - Query
      summary: CommunityPool queries the community pool coins.
      operationId: CommunityPool
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  pool:
                    type: array
                    description: pool defines community pool's coins.
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: |-
                        DecCoin defines a token with a denomination and a decimal amount.

                        NOTE: The amount field is an Dec which implements the custom method
                        signatures required by gogoproto.
                description: |-
                  QueryCommunityPoolResponse is the response type for the Query/CommunityPool
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
  /cosmos/distribution/v1beta1/delegators/{delegator_address}/rewards:
    get:
      tags:
      - Query
      summary: |-
        DelegationTotalRewards queries the total rewards accrued by a each
        validator.
      operationId: DelegationTotalRewards
      parameters:
      - name: delegator_address
        in: path
        description: delegator_address defines the delegator address to query for.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  rewards:
                    type: array
                    description: rewards defines all the rewards accrued by a delegator.
                    items:
                      type: object
                      properties:
                        validator_address:
                          type: string
                        reward:
                          type: array
                          items:
                            type: object
                            properties:
                              denom:
                                type: string
                              amount:
                                type: string
                            description: |-
                              DecCoin defines a token with a denomination and a decimal amount.

                              NOTE: The amount field is an Dec which implements the custom method
                              signatures required by gogoproto.
                      description: |-
                        DelegationDelegatorReward represents the properties
                        of a delegator's delegation reward.
                  total:
                    type: array
                    description: total defines the sum of all the rewards.
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: |-
                        DecCoin defines a token with a denomination and a decimal amount.

                        NOTE: The amount field is an Dec which implements the custom method
                        signatures required by gogoproto.
                description: |-
                  QueryDelegationTotalRewardsResponse is the response type for the
                  Query/DelegationTotalRewards RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
  /cosmos/distribution/v1beta1/delegators/{delegator_address}/rewards/{validator_address}:
    get:
      tags:
      - Query
      summary: DelegationRewards queries the total rewards accrued by a delegation.
      operationId: DelegationRewards
      parameters:
      - name: delegator_address
        in: path
        description: delegator_address defines the delegator address to query for.
        required: true
        schema:
          type: string
      - name: validator_address
        in: path
        description: validator_address defines the validator address to query for.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  rewards:
                    type: array
                    description: rewards defines the rewards accrued by a delegation.
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: |-
                        DecCoin defines a token with a denomination and a decimal amount.

                        NOTE: The amount field is an Dec which implements the custom method
                        signatures required by gogoproto.
                description: |-
                  QueryDelegationRewardsResponse is the response type for the
                  Query/DelegationRewards RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
  /cosmos/distribution/v1beta1/delegators/{delegator_address}/validators:
    get:
      tags:
      - Query
      summary: DelegatorValidators queries the validators of a delegator.
      operationId: DelegatorValidators
      parameters:
      - name: delegator_address
        in: path
        description: delegator_address defines the delegator address to query for.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  validators:
                    type: array
                    description: validators defines the validators a delegator is
                      delegating for.
                    items:
                      type: string
                description: |-
                  QueryDelegatorValidatorsResponse is the response type for the
                  Query/DelegatorValidators RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
  /cosmos/distribution/v1beta1/delegators/{delegator_address}/withdraw_address:
    get:
      tags:
      - Query
      summary: DelegatorWithdrawAddress queries withdraw address of a delegator.
      operationId: DelegatorWithdrawAddress
      parameters:
      - name: delegator_address
        in: path
        description: delegator_address defines the delegator address to query for.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  withdraw_address:
                    type: string
                    description: withdraw_address defines the delegator address to
                      query for.
                description: |-
                  QueryDelegatorWithdrawAddressResponse is the response type for the
                  Query/DelegatorWithdrawAddress RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
  /cosmos/distribution/v1beta1/params:
    get:
      tags:
      - Query
      summary: Params queries params of the distribution module.
      operationId: DistributionParams
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  params:
                    type: object
                    properties:
                      community_tax:
                        type: string
                      base_proposer_reward:
                        type: string
                        description: |-
                          Deprecated: The base_proposer_reward field is deprecated and is no longer used
                          in the x/distribution module's reward mechanism.
                      bonus_proposer_reward:
                        type: string
                        description: |-
                          Deprecated: The bonus_proposer_reward field is deprecated and is no longer used
                          in the x/distribution module's reward mechanism.
                      withdraw_addr_enabled:
                        type: boolean
                    description: params defines the parameters of the module.
                description: QueryParamsResponse is the response type for the Query/Params
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
  /cosmos/distribution/v1beta1/validators/{validator_address}:
    get:
      tags:
      - Query
      summary: ValidatorDistributionInfo queries validator commission and self-delegation
        rewards for validator
      operationId: ValidatorDistributionInfo
      parameters:
      - name: validator_address
        in: path
        description: validator_address defines the validator address to query for.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  operator_address:
                    type: string
                    description: operator_address defines the validator operator address.
                  self_bond_rewards:
                    type: array
                    description: self_bond_rewards defines the self delegations rewards.
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: |-
                        DecCoin defines a token with a denomination and a decimal amount.

                        NOTE: The amount field is an Dec which implements the custom method
                        signatures required by gogoproto.
                  commission:
                    type: array
                    description: commission defines the commission the validator received.
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: |-
                        DecCoin defines a token with a denomination and a decimal amount.

                        NOTE: The amount field is an Dec which implements the custom method
                        signatures required by gogoproto.
                description: QueryValidatorDistributionInfoResponse is the response
                  type for the Query/ValidatorDistributionInfo RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
  /cosmos/distribution/v1beta1/validators/{validator_address}/commission:
    get:
      tags:
      - Query
      summary: ValidatorCommission queries accumulated commission for a validator.
      operationId: ValidatorCommission
      parameters:
      - name: validator_address
        in: path
        description: validator_address defines the validator address to query for.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                title: |-
                  QueryValidatorCommissionResponse is the response type for the
                  Query/ValidatorCommission RPC method
                type: object
                properties:
                  commission:
                    type: object
                    properties:
                      commission:
                        type: array
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: |-
                            DecCoin defines a token with a denomination and a decimal amount.

                            NOTE: The amount field is an Dec which implements the custom method
                            signatures required by gogoproto.
                    description: commission defines the commission the validator received.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
  /cosmos/distribution/v1beta1/validators/{validator_address}/outstanding_rewards:
    get:
      tags:
      - Query
      summary: ValidatorOutstandingRewards queries rewards of a validator address.
      operationId: ValidatorOutstandingRewards
      parameters:
      - name: validator_address
        in: path
        description: validator_address defines the validator address to query for.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  rewards:
                    type: object
                    properties:
                      rewards:
                        type: array
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: |-
                            DecCoin defines a token with a denomination and a decimal amount.

                            NOTE: The amount field is an Dec which implements the custom method
                            signatures required by gogoproto.
                    description: |-
                      ValidatorOutstandingRewards represents outstanding (un-withdrawn) rewards
                      for a validator inexpensive to track, allows simple sanity checks.
                description: |-
                  QueryValidatorOutstandingRewardsResponse is the response type for the
                  Query/ValidatorOutstandingRewards RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
  /cosmos/distribution/v1beta1/validators/{validator_address}/slashes:
    get:
      tags:
      - Query
      summary: ValidatorSlashes queries slash events of a validator.
      operationId: ValidatorSlashes
      parameters:
      - name: validator_address
        in: path
        description: validator_address defines the validator address to query for.
        required: true
        schema:
          type: string
      - name: starting_height
        in: query
        description: starting_height defines the optional starting height to query
          the slashes.
        schema:
          type: string
          format: uint64
      - name: ending_height
        in: query
        description: starting_height defines the optional ending height to query the
          slashes.
        schema:
          type: string
          format: uint64
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  slashes:
                    type: array
                    description: slashes defines the slashes the validator received.
                    items:
                      type: object
                      properties:
                        validator_period:
                          type: string
                          format: uint64
                        fraction:
                          type: string
                      description: |-
                        ValidatorSlashEvent represents a validator slash event.
                        Height is implicit within the store key.
                        This is needed to calculate appropriate amount of staking tokens
                        for delegations which are withdrawn after a slash has occurred.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
                description: |-
                  QueryValidatorSlashesResponse is the response type for the
                  Query/ValidatorSlashes RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
  /cosmos/evidence/v1beta1/evidence:
    get:
      tags:
      - Query
      summary: AllEvidence queries all evidence.
      operationId: AllEvidence
      parameters:
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  evidence:
                    type: array
                    description: evidence returns all evidences.
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
                description: |-
                  QueryAllEvidenceResponse is the response type for the Query/AllEvidence RPC
                  method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/evidence/v1beta1/evidence/{hash}:
    get:
      tags:
      - Query
      summary: Evidence queries evidence based on evidence hash.
      operationId: Evidence
      parameters:
      - name: hash
        in: path
        description: |-
          hash defines the evidence hash of the requested evidence.

          Since: cosmos-sdk 0.47
        required: true
        schema:
          type: string
      - name: evidence_hash
        in: query
        description: |-
          evidence_hash defines the hash of the requested evidence.
          Deprecated: Use hash, a HEX encoded string, instead.
        schema:
          type: string
          format: byte
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  evidence:
                    type: object
                    properties:
                      type_url:
                        type: string
                        description: |-
                          A URL/resource name that uniquely identifies the type of the serialized
                          protocol buffer message. This string must contain at least
                          one "/" character. The last segment of the URL's path must represent
                          the fully qualified name of the type (as in
                          `path/google.protobuf.Duration`). The name should be in a canonical form
                          (e.g., leading "." is not accepted).

                          In practice, teams usually precompile into the binary all types that they
                          expect it to use in the context of Any. However, for URLs which use the
                          scheme `http`, `https`, or no scheme, one can optionally set up a type
                          server that maps type URLs to message definitions as follows:

                          * If no scheme is provided, `https` is assumed.
                          * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                            value in binary format, or produce an error.
                          * Applications are allowed to cache lookup results based on the
                            URL, or have them precompiled into a binary to avoid any
                            lookup. Therefore, binary compatibility needs to be preserved
                            on changes to types. (Use versioned type names to manage
                            breaking changes.)

                          Note: this functionality is not currently available in the official
                          protobuf release, and it is not used for type URLs beginning with
                          type.googleapis.com.

                          Schemes other than `http`, `https` (or the empty scheme) might be
                          used with implementation specific semantics.
                      value:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: Must be a valid serialized protocol buffer of
                          the above specified type.
                        format: byte
                    description: |-
                      `Any` contains an arbitrary serialized protocol buffer message along with a
                      URL that describes the type of the serialized message.

                      Protobuf library provides support to pack/unpack Any values in the form
                      of utility functions or additional generated methods of the Any type.

                      Example 1: Pack and unpack a message in C++.

                          Foo foo = ...;
                          Any any;
                          any.PackFrom(foo);
                          ...
                          if (any.UnpackTo(&foo)) {
                            ...
                          }

                      Example 2: Pack and unpack a message in Java.

                          Foo foo = ...;
                          Any any = Any.pack(foo);
                          ...
                          if (any.is(Foo.class)) {
                            foo = any.unpack(Foo.class);
                          }

                       Example 3: Pack and unpack a message in Python.

                          foo = Foo(...)
                          any = Any()
                          any.Pack(foo)
                          ...
                          if any.Is(Foo.DESCRIPTOR):
                            any.Unpack(foo)
                            ...

                       Example 4: Pack and unpack a message in Go

                           foo := &pb.Foo{...}
                           any, err := ptypes.MarshalAny(foo)
                           ...
                           foo := &pb.Foo{}
                           if err := ptypes.UnmarshalAny(any, foo); err != nil {
                             ...
                           }

                      The pack methods provided by protobuf library will by default use
                      'type.googleapis.com/full.type.name' as the type URL and the unpack
                      methods only use the fully qualified type name after the last '/'
                      in the type URL, for example "foo.bar.com/x/y.z" will yield type
                      name "y.z".


                      JSON
                      ====
                      The JSON representation of an `Any` value uses the regular
                      representation of the deserialized, embedded message, with an
                      additional field `@type` which contains the type URL. Example:

                          package google.profile;
                          message Person {
                            string first_name = 1;
                            string last_name = 2;
                          }

                          {
                            "@type": "type.googleapis.com/google.profile.Person",
                            "firstName": <string>,
                            "lastName": <string>
                          }

                      If the embedded message type is well-known and has a custom JSON
                      representation, that representation will be embedded adding a field
                      `value` which holds the custom JSON in addition to the `@type`
                      field. Example (for message [google.protobuf.Duration][]):

                          {
                            "@type": "type.googleapis.com/google.protobuf.Duration",
                            "value": "1.212s"
                          }
                description: QueryEvidenceResponse is the response type for the Query/Evidence
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/base/node/v1beta1/config:
    get:
      tags:
      - Service
      summary: Config queries for the operator configuration.
      operationId: Config
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  minimum_gas_price:
                    type: string
                description: ConfigResponse defines the response structure for the
                  Config gRPC query.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
  /cosmos/feegrant/v1beta1/allowance/{granter}/{grantee}:
    get:
      tags:
      - Query
      summary: Allowance returns fee granted to the grantee by the granter.
      operationId: Allowance
      parameters:
      - name: granter
        in: path
        description: granter is the address of the user granting an allowance of their
          funds.
        required: true
        schema:
          type: string
      - name: grantee
        in: path
        description: grantee is the address of the user being granted an allowance
          of another user's funds.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  allowance:
                    title: Grant is stored in the KVStore to record a grant with full
                      context
                    type: object
                    properties:
                      granter:
                        type: string
                        description: granter is the address of the user granting an
                          allowance of their funds.
                      grantee:
                        type: string
                        description: grantee is the address of the user being granted
                          an allowance of another user's funds.
                      allowance:
                        type: object
                        properties:
                          type_url:
                            type: string
                            description: |-
                              A URL/resource name that uniquely identifies the type of the serialized
                              protocol buffer message. This string must contain at least
                              one "/" character. The last segment of the URL's path must represent
                              the fully qualified name of the type (as in
                              `path/google.protobuf.Duration`). The name should be in a canonical form
                              (e.g., leading "." is not accepted).

                              In practice, teams usually precompile into the binary all types that they
                              expect it to use in the context of Any. However, for URLs which use the
                              scheme `http`, `https`, or no scheme, one can optionally set up a type
                              server that maps type URLs to message definitions as follows:

                              * If no scheme is provided, `https` is assumed.
                              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                value in binary format, or produce an error.
                              * Applications are allowed to cache lookup results based on the
                                URL, or have them precompiled into a binary to avoid any
                                lookup. Therefore, binary compatibility needs to be preserved
                                on changes to types. (Use versioned type names to manage
                                breaking changes.)

                              Note: this functionality is not currently available in the official
                              protobuf release, and it is not used for type URLs beginning with
                              type.googleapis.com.

                              Schemes other than `http`, `https` (or the empty scheme) might be
                              used with implementation specific semantics.
                          value:
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            description: Must be a valid serialized protocol buffer
                              of the above specified type.
                            format: byte
                        description: "allowance can be any of basic, periodic, allowed\
                          \ fee allowance."
                    description: allowance is a allowance granted for grantee by granter.
                description: QueryAllowanceResponse is the response type for the Query/Allowance
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/feegrant/v1beta1/allowances/{grantee}:
    get:
      tags:
      - Query
      summary: Allowances returns all the grants for address.
      operationId: Allowances
      parameters:
      - name: grantee
        in: path
        required: true
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  allowances:
                    type: array
                    description: allowances are allowance's granted for grantee by
                      granter.
                    items:
                      title: Grant is stored in the KVStore to record a grant with
                        full context
                      type: object
                      properties:
                        granter:
                          type: string
                          description: granter is the address of the user granting
                            an allowance of their funds.
                        grantee:
                          type: string
                          description: grantee is the address of the user being granted
                            an allowance of another user's funds.
                        allowance:
                          type: object
                          properties:
                            type_url:
                              type: string
                              description: |-
                                A URL/resource name that uniquely identifies the type of the serialized
                                protocol buffer message. This string must contain at least
                                one "/" character. The last segment of the URL's path must represent
                                the fully qualified name of the type (as in
                                `path/google.protobuf.Duration`). The name should be in a canonical form
                                (e.g., leading "." is not accepted).

                                In practice, teams usually precompile into the binary all types that they
                                expect it to use in the context of Any. However, for URLs which use the
                                scheme `http`, `https`, or no scheme, one can optionally set up a type
                                server that maps type URLs to message definitions as follows:

                                * If no scheme is provided, `https` is assumed.
                                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                  value in binary format, or produce an error.
                                * Applications are allowed to cache lookup results based on the
                                  URL, or have them precompiled into a binary to avoid any
                                  lookup. Therefore, binary compatibility needs to be preserved
                                  on changes to types. (Use versioned type names to manage
                                  breaking changes.)

                                Note: this functionality is not currently available in the official
                                protobuf release, and it is not used for type URLs beginning with
                                type.googleapis.com.

                                Schemes other than `http`, `https` (or the empty scheme) might be
                                used with implementation specific semantics.
                            value:
                              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                              type: string
                              description: Must be a valid serialized protocol buffer
                                of the above specified type.
                              format: byte
                          description: "allowance can be any of basic, periodic, allowed\
                            \ fee allowance."
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines an pagination for the response.
                description: QueryAllowancesResponse is the response type for the
                  Query/Allowances RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/feegrant/v1beta1/issued/{granter}:
    get:
      tags:
      - Query
      summary: AllowancesByGranter returns all the grants given by an address
      description: "Since: cosmos-sdk 0.46"
      operationId: AllowancesByGranter
      parameters:
      - name: granter
        in: path
        required: true
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  allowances:
                    type: array
                    description: allowances that have been issued by the granter.
                    items:
                      title: Grant is stored in the KVStore to record a grant with
                        full context
                      type: object
                      properties:
                        granter:
                          type: string
                          description: granter is the address of the user granting
                            an allowance of their funds.
                        grantee:
                          type: string
                          description: grantee is the address of the user being granted
                            an allowance of another user's funds.
                        allowance:
                          type: object
                          properties:
                            type_url:
                              type: string
                              description: |-
                                A URL/resource name that uniquely identifies the type of the serialized
                                protocol buffer message. This string must contain at least
                                one "/" character. The last segment of the URL's path must represent
                                the fully qualified name of the type (as in
                                `path/google.protobuf.Duration`). The name should be in a canonical form
                                (e.g., leading "." is not accepted).

                                In practice, teams usually precompile into the binary all types that they
                                expect it to use in the context of Any. However, for URLs which use the
                                scheme `http`, `https`, or no scheme, one can optionally set up a type
                                server that maps type URLs to message definitions as follows:

                                * If no scheme is provided, `https` is assumed.
                                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                  value in binary format, or produce an error.
                                * Applications are allowed to cache lookup results based on the
                                  URL, or have them precompiled into a binary to avoid any
                                  lookup. Therefore, binary compatibility needs to be preserved
                                  on changes to types. (Use versioned type names to manage
                                  breaking changes.)

                                Note: this functionality is not currently available in the official
                                protobuf release, and it is not used for type URLs beginning with
                                type.googleapis.com.

                                Schemes other than `http`, `https` (or the empty scheme) might be
                                used with implementation specific semantics.
                            value:
                              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                              type: string
                              description: Must be a valid serialized protocol buffer
                                of the above specified type.
                              format: byte
                          description: "allowance can be any of basic, periodic, allowed\
                            \ fee allowance."
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines an pagination for the response.
                description: |-
                  QueryAllowancesByGranterResponse is the response type for the Query/AllowancesByGranter RPC method.

                  Since: cosmos-sdk 0.46
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/gov/v1beta1/params/{params_type}:
    get:
      tags:
      - Query
      summary: Params queries all parameters of the gov module.
      operationId: GovParams
      parameters:
      - name: params_type
        in: path
        description: |-
          params_type defines which parameters to query for, can be one of "voting",
          "tallying" or "deposit".
        required: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  voting_params:
                    type: object
                    properties:
                      voting_period:
                        type: string
                        description: Duration of the voting period.
                    description: voting_params defines the parameters related to voting.
                  deposit_params:
                    type: object
                    properties:
                      min_deposit:
                        type: array
                        description: Minimum deposit for a proposal to enter voting
                          period.
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: |-
                            Coin defines a token with a denomination and an amount.

                            NOTE: The amount field is an Int which implements the custom method
                            signatures required by gogoproto.
                      max_deposit_period:
                        type: string
                        description: |-
                          Maximum period for Atom holders to deposit on a proposal. Initial value: 2
                          months.
                    description: deposit_params defines the parameters related to
                      deposit.
                  tally_params:
                    type: object
                    properties:
                      quorum:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: |-
                          Minimum percentage of total stake needed to vote for a result to be
                          considered valid.
                        format: byte
                      threshold:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: "Minimum proportion of Yes votes for proposal\
                          \ to pass. Default value: 0.5."
                        format: byte
                      veto_threshold:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: |-
                          Minimum value of Veto votes to Total votes ratio for proposal to be
                          vetoed. Default value: 1/3.
                        format: byte
                    description: tally_params defines the parameters related to tally.
                description: QueryParamsResponse is the response type for the Query/Params
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/gov/v1beta1/proposals:
    get:
      tags:
      - Query
      summary: Proposals queries all proposals based on given status.
      operationId: Proposals
      parameters:
      - name: proposal_status
        in: query
        description: |-
          proposal_status defines the status of the proposals.

           - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default proposal status.
           - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit
          period.
           - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
          period.
           - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
          passed.
           - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has
          been rejected.
           - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has
          failed.
        schema:
          type: string
          default: PROPOSAL_STATUS_UNSPECIFIED
          enum:
          - PROPOSAL_STATUS_UNSPECIFIED
          - PROPOSAL_STATUS_DEPOSIT_PERIOD
          - PROPOSAL_STATUS_VOTING_PERIOD
          - PROPOSAL_STATUS_PASSED
          - PROPOSAL_STATUS_REJECTED
          - PROPOSAL_STATUS_FAILED
      - name: voter
        in: query
        description: voter defines the voter address for the proposals.
        schema:
          type: string
      - name: depositor
        in: query
        description: depositor defines the deposit addresses from the proposals.
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  proposals:
                    type: array
                    description: proposals defines all the requested governance proposals.
                    items:
                      type: object
                      properties:
                        proposal_id:
                          type: string
                          description: proposal_id defines the unique id of the proposal.
                          format: uint64
                        content:
                          type: object
                          properties:
                            type_url:
                              type: string
                              description: |-
                                A URL/resource name that uniquely identifies the type of the serialized
                                protocol buffer message. This string must contain at least
                                one "/" character. The last segment of the URL's path must represent
                                the fully qualified name of the type (as in
                                `path/google.protobuf.Duration`). The name should be in a canonical form
                                (e.g., leading "." is not accepted).

                                In practice, teams usually precompile into the binary all types that they
                                expect it to use in the context of Any. However, for URLs which use the
                                scheme `http`, `https`, or no scheme, one can optionally set up a type
                                server that maps type URLs to message definitions as follows:

                                * If no scheme is provided, `https` is assumed.
                                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                  value in binary format, or produce an error.
                                * Applications are allowed to cache lookup results based on the
                                  URL, or have them precompiled into a binary to avoid any
                                  lookup. Therefore, binary compatibility needs to be preserved
                                  on changes to types. (Use versioned type names to manage
                                  breaking changes.)

                                Note: this functionality is not currently available in the official
                                protobuf release, and it is not used for type URLs beginning with
                                type.googleapis.com.

                                Schemes other than `http`, `https` (or the empty scheme) might be
                                used with implementation specific semantics.
                            value:
                              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                              type: string
                              description: Must be a valid serialized protocol buffer
                                of the above specified type.
                              format: byte
                          description: |-
                            `Any` contains an arbitrary serialized protocol buffer message along with a
                            URL that describes the type of the serialized message.

                            Protobuf library provides support to pack/unpack Any values in the form
                            of utility functions or additional generated methods of the Any type.

                            Example 1: Pack and unpack a message in C++.

                                Foo foo = ...;
                                Any any;
                                any.PackFrom(foo);
                                ...
                                if (any.UnpackTo(&foo)) {
                                  ...
                                }

                            Example 2: Pack and unpack a message in Java.

                                Foo foo = ...;
                                Any any = Any.pack(foo);
                                ...
                                if (any.is(Foo.class)) {
                                  foo = any.unpack(Foo.class);
                                }

                             Example 3: Pack and unpack a message in Python.

                                foo = Foo(...)
                                any = Any()
                                any.Pack(foo)
                                ...
                                if any.Is(Foo.DESCRIPTOR):
                                  any.Unpack(foo)
                                  ...

                             Example 4: Pack and unpack a message in Go

                                 foo := &pb.Foo{...}
                                 any, err := ptypes.MarshalAny(foo)
                                 ...
                                 foo := &pb.Foo{}
                                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                                   ...
                                 }

                            The pack methods provided by protobuf library will by default use
                            'type.googleapis.com/full.type.name' as the type URL and the unpack
                            methods only use the fully qualified type name after the last '/'
                            in the type URL, for example "foo.bar.com/x/y.z" will yield type
                            name "y.z".


                            JSON
                            ====
                            The JSON representation of an `Any` value uses the regular
                            representation of the deserialized, embedded message, with an
                            additional field `@type` which contains the type URL. Example:

                                package google.profile;
                                message Person {
                                  string first_name = 1;
                                  string last_name = 2;
                                }

                                {
                                  "@type": "type.googleapis.com/google.profile.Person",
                                  "firstName": <string>,
                                  "lastName": <string>
                                }

                            If the embedded message type is well-known and has a custom JSON
                            representation, that representation will be embedded adding a field
                            `value` which holds the custom JSON in addition to the `@type`
                            field. Example (for message [google.protobuf.Duration][]):

                                {
                                  "@type": "type.googleapis.com/google.protobuf.Duration",
                                  "value": "1.212s"
                                }
                        status:
                          type: string
                          description: status defines the proposal status.
                          default: PROPOSAL_STATUS_UNSPECIFIED
                          enum:
                          - PROPOSAL_STATUS_UNSPECIFIED
                          - PROPOSAL_STATUS_DEPOSIT_PERIOD
                          - PROPOSAL_STATUS_VOTING_PERIOD
                          - PROPOSAL_STATUS_PASSED
                          - PROPOSAL_STATUS_REJECTED
                          - PROPOSAL_STATUS_FAILED
                        final_tally_result:
                          type: object
                          properties:
                            "yes":
                              type: string
                              description: yes is the number of yes votes on a proposal.
                            abstain:
                              type: string
                              description: abstain is the number of abstain votes
                                on a proposal.
                            "no":
                              type: string
                              description: no is the number of no votes on a proposal.
                            no_with_veto:
                              type: string
                              description: no_with_veto is the number of no with veto
                                votes on a proposal.
                          description: |-
                            final_tally_result is the final tally result of the proposal. When
                            querying a proposal via gRPC, this field is not populated until the
                            proposal's voting period has ended.
                        submit_time:
                          type: string
                          description: submit_time is the time of proposal submission.
                          format: date-time
                        deposit_end_time:
                          type: string
                          description: deposit_end_time is the end time for deposition.
                          format: date-time
                        total_deposit:
                          type: array
                          description: total_deposit is the total deposit on the proposal.
                          items:
                            type: object
                            properties:
                              denom:
                                type: string
                              amount:
                                type: string
                            description: |-
                              Coin defines a token with a denomination and an amount.

                              NOTE: The amount field is an Int which implements the custom method
                              signatures required by gogoproto.
                        voting_start_time:
                          type: string
                          description: voting_start_time is the starting time to vote
                            on a proposal.
                          format: date-time
                        voting_end_time:
                          type: string
                          description: voting_end_time is the end time of voting on
                            a proposal.
                          format: date-time
                      description: Proposal defines the core field members of a governance
                        proposal.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
                description: |-
                  QueryProposalsResponse is the response type for the Query/Proposals RPC
                  method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/gov/v1beta1/proposals/{proposal_id}:
    get:
      tags:
      - Query
      summary: Proposal queries proposal details based on ProposalID.
      operationId: GovProposal
      parameters:
      - name: proposal_id
        in: path
        description: proposal_id defines the unique id of the proposal.
        required: true
        schema:
          type: string
          format: uint64
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  proposal:
                    type: object
                    properties:
                      proposal_id:
                        type: string
                        description: proposal_id defines the unique id of the proposal.
                        format: uint64
                      content:
                        type: object
                        properties:
                          type_url:
                            type: string
                            description: |-
                              A URL/resource name that uniquely identifies the type of the serialized
                              protocol buffer message. This string must contain at least
                              one "/" character. The last segment of the URL's path must represent
                              the fully qualified name of the type (as in
                              `path/google.protobuf.Duration`). The name should be in a canonical form
                              (e.g., leading "." is not accepted).

                              In practice, teams usually precompile into the binary all types that they
                              expect it to use in the context of Any. However, for URLs which use the
                              scheme `http`, `https`, or no scheme, one can optionally set up a type
                              server that maps type URLs to message definitions as follows:

                              * If no scheme is provided, `https` is assumed.
                              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                value in binary format, or produce an error.
                              * Applications are allowed to cache lookup results based on the
                                URL, or have them precompiled into a binary to avoid any
                                lookup. Therefore, binary compatibility needs to be preserved
                                on changes to types. (Use versioned type names to manage
                                breaking changes.)

                              Note: this functionality is not currently available in the official
                              protobuf release, and it is not used for type URLs beginning with
                              type.googleapis.com.

                              Schemes other than `http`, `https` (or the empty scheme) might be
                              used with implementation specific semantics.
                          value:
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            description: Must be a valid serialized protocol buffer
                              of the above specified type.
                            format: byte
                        description: |-
                          `Any` contains an arbitrary serialized protocol buffer message along with a
                          URL that describes the type of the serialized message.

                          Protobuf library provides support to pack/unpack Any values in the form
                          of utility functions or additional generated methods of the Any type.

                          Example 1: Pack and unpack a message in C++.

                              Foo foo = ...;
                              Any any;
                              any.PackFrom(foo);
                              ...
                              if (any.UnpackTo(&foo)) {
                                ...
                              }

                          Example 2: Pack and unpack a message in Java.

                              Foo foo = ...;
                              Any any = Any.pack(foo);
                              ...
                              if (any.is(Foo.class)) {
                                foo = any.unpack(Foo.class);
                              }

                           Example 3: Pack and unpack a message in Python.

                              foo = Foo(...)
                              any = Any()
                              any.Pack(foo)
                              ...
                              if any.Is(Foo.DESCRIPTOR):
                                any.Unpack(foo)
                                ...

                           Example 4: Pack and unpack a message in Go

                               foo := &pb.Foo{...}
                               any, err := ptypes.MarshalAny(foo)
                               ...
                               foo := &pb.Foo{}
                               if err := ptypes.UnmarshalAny(any, foo); err != nil {
                                 ...
                               }

                          The pack methods provided by protobuf library will by default use
                          'type.googleapis.com/full.type.name' as the type URL and the unpack
                          methods only use the fully qualified type name after the last '/'
                          in the type URL, for example "foo.bar.com/x/y.z" will yield type
                          name "y.z".


                          JSON
                          ====
                          The JSON representation of an `Any` value uses the regular
                          representation of the deserialized, embedded message, with an
                          additional field `@type` which contains the type URL. Example:

                              package google.profile;
                              message Person {
                                string first_name = 1;
                                string last_name = 2;
                              }

                              {
                                "@type": "type.googleapis.com/google.profile.Person",
                                "firstName": <string>,
                                "lastName": <string>
                              }

                          If the embedded message type is well-known and has a custom JSON
                          representation, that representation will be embedded adding a field
                          `value` which holds the custom JSON in addition to the `@type`
                          field. Example (for message [google.protobuf.Duration][]):

                              {
                                "@type": "type.googleapis.com/google.protobuf.Duration",
                                "value": "1.212s"
                              }
                      status:
                        type: string
                        description: status defines the proposal status.
                        default: PROPOSAL_STATUS_UNSPECIFIED
                        enum:
                        - PROPOSAL_STATUS_UNSPECIFIED
                        - PROPOSAL_STATUS_DEPOSIT_PERIOD
                        - PROPOSAL_STATUS_VOTING_PERIOD
                        - PROPOSAL_STATUS_PASSED
                        - PROPOSAL_STATUS_REJECTED
                        - PROPOSAL_STATUS_FAILED
                      final_tally_result:
                        type: object
                        properties:
                          "yes":
                            type: string
                            description: yes is the number of yes votes on a proposal.
                          abstain:
                            type: string
                            description: abstain is the number of abstain votes on
                              a proposal.
                          "no":
                            type: string
                            description: no is the number of no votes on a proposal.
                          no_with_veto:
                            type: string
                            description: no_with_veto is the number of no with veto
                              votes on a proposal.
                        description: |-
                          final_tally_result is the final tally result of the proposal. When
                          querying a proposal via gRPC, this field is not populated until the
                          proposal's voting period has ended.
                      submit_time:
                        type: string
                        description: submit_time is the time of proposal submission.
                        format: date-time
                      deposit_end_time:
                        type: string
                        description: deposit_end_time is the end time for deposition.
                        format: date-time
                      total_deposit:
                        type: array
                        description: total_deposit is the total deposit on the proposal.
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: |-
                            Coin defines a token with a denomination and an amount.

                            NOTE: The amount field is an Int which implements the custom method
                            signatures required by gogoproto.
                      voting_start_time:
                        type: string
                        description: voting_start_time is the starting time to vote
                          on a proposal.
                        format: date-time
                      voting_end_time:
                        type: string
                        description: voting_end_time is the end time of voting on
                          a proposal.
                        format: date-time
                    description: Proposal defines the core field members of a governance
                      proposal.
                description: QueryProposalResponse is the response type for the Query/Proposal
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/gov/v1beta1/proposals/{proposal_id}/deposits:
    get:
      tags:
      - Query
      summary: Deposits queries all deposits of a single proposal.
      operationId: Deposits
      parameters:
      - name: proposal_id
        in: path
        description: proposal_id defines the unique id of the proposal.
        required: true
        schema:
          type: string
          format: uint64
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  deposits:
                    type: array
                    description: deposits defines the requested deposits.
                    items:
                      type: object
                      properties:
                        proposal_id:
                          type: string
                          description: proposal_id defines the unique id of the proposal.
                          format: uint64
                        depositor:
                          type: string
                          description: depositor defines the deposit addresses from
                            the proposals.
                        amount:
                          type: array
                          description: amount to be deposited by depositor.
                          items:
                            type: object
                            properties:
                              denom:
                                type: string
                              amount:
                                type: string
                            description: |-
                              Coin defines a token with a denomination and an amount.

                              NOTE: The amount field is an Int which implements the custom method
                              signatures required by gogoproto.
                      description: |-
                        Deposit defines an amount deposited by an account address to an active
                        proposal.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
                description: QueryDepositsResponse is the response type for the Query/Deposits
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/gov/v1beta1/proposals/{proposal_id}/deposits/{depositor}:
    get:
      tags:
      - Query
      summary: "Deposit queries single deposit information based proposalID, depositAddr."
      operationId: Deposit
      parameters:
      - name: proposal_id
        in: path
        description: proposal_id defines the unique id of the proposal.
        required: true
        schema:
          type: string
          format: uint64
      - name: depositor
        in: path
        description: depositor defines the deposit addresses from the proposals.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  deposit:
                    type: object
                    properties:
                      proposal_id:
                        type: string
                        description: proposal_id defines the unique id of the proposal.
                        format: uint64
                      depositor:
                        type: string
                        description: depositor defines the deposit addresses from
                          the proposals.
                      amount:
                        type: array
                        description: amount to be deposited by depositor.
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: |-
                            Coin defines a token with a denomination and an amount.

                            NOTE: The amount field is an Int which implements the custom method
                            signatures required by gogoproto.
                    description: |-
                      Deposit defines an amount deposited by an account address to an active
                      proposal.
                description: QueryDepositResponse is the response type for the Query/Deposit
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/gov/v1beta1/proposals/{proposal_id}/tally:
    get:
      tags:
      - Query
      summary: TallyResult queries the tally of a proposal vote.
      operationId: GovTallyResult
      parameters:
      - name: proposal_id
        in: path
        description: proposal_id defines the unique id of the proposal.
        required: true
        schema:
          type: string
          format: uint64
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  tally:
                    type: object
                    properties:
                      "yes":
                        type: string
                        description: yes is the number of yes votes on a proposal.
                      abstain:
                        type: string
                        description: abstain is the number of abstain votes on a proposal.
                      "no":
                        type: string
                        description: no is the number of no votes on a proposal.
                      no_with_veto:
                        type: string
                        description: no_with_veto is the number of no with veto votes
                          on a proposal.
                    description: tally defines the requested tally.
                description: QueryTallyResultResponse is the response type for the
                  Query/Tally RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/gov/v1beta1/proposals/{proposal_id}/votes:
    get:
      tags:
      - Query
      summary: Votes queries votes of a given proposal.
      operationId: Votes
      parameters:
      - name: proposal_id
        in: path
        description: proposal_id defines the unique id of the proposal.
        required: true
        schema:
          type: string
          format: uint64
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  votes:
                    type: array
                    description: votes defines the queried votes.
                    items:
                      type: object
                      properties:
                        proposal_id:
                          type: string
                          description: proposal_id defines the unique id of the proposal.
                          format: uint64
                        voter:
                          type: string
                          description: voter is the voter address of the proposal.
                        option:
                          type: string
                          description: |-
                            Deprecated: Prefer to use `options` instead. This field is set in queries
                            if and only if `len(options) == 1` and that option has weight 1. In all
                            other cases, this field will default to VOTE_OPTION_UNSPECIFIED.
                          default: VOTE_OPTION_UNSPECIFIED
                          enum:
                          - VOTE_OPTION_UNSPECIFIED
                          - VOTE_OPTION_YES
                          - VOTE_OPTION_ABSTAIN
                          - VOTE_OPTION_NO
                          - VOTE_OPTION_NO_WITH_VETO
                        options:
                          type: array
                          description: |-
                            options is the weighted vote options.

                            Since: cosmos-sdk 0.43
                          items:
                            type: object
                            properties:
                              option:
                                type: string
                                description: "option defines the valid vote options,\
                                  \ it must not contain duplicate vote options."
                                default: VOTE_OPTION_UNSPECIFIED
                                enum:
                                - VOTE_OPTION_UNSPECIFIED
                                - VOTE_OPTION_YES
                                - VOTE_OPTION_ABSTAIN
                                - VOTE_OPTION_NO
                                - VOTE_OPTION_NO_WITH_VETO
                              weight:
                                type: string
                                description: weight is the vote weight associated
                                  with the vote option.
                            description: |-
                              WeightedVoteOption defines a unit of vote for vote split.

                              Since: cosmos-sdk 0.43
                      description: |-
                        Vote defines a vote on a governance proposal.
                        A Vote consists of a proposal ID, the voter, and the vote option.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
                description: QueryVotesResponse is the response type for the Query/Votes
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/gov/v1beta1/proposals/{proposal_id}/votes/{voter}:
    get:
      tags:
      - Query
      summary: "Vote queries voted information based on proposalID, voterAddr."
      operationId: Vote
      parameters:
      - name: proposal_id
        in: path
        description: proposal_id defines the unique id of the proposal.
        required: true
        schema:
          type: string
          format: uint64
      - name: voter
        in: path
        description: voter defines the voter address for the proposals.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  vote:
                    type: object
                    properties:
                      proposal_id:
                        type: string
                        description: proposal_id defines the unique id of the proposal.
                        format: uint64
                      voter:
                        type: string
                        description: voter is the voter address of the proposal.
                      option:
                        type: string
                        description: |-
                          Deprecated: Prefer to use `options` instead. This field is set in queries
                          if and only if `len(options) == 1` and that option has weight 1. In all
                          other cases, this field will default to VOTE_OPTION_UNSPECIFIED.
                        default: VOTE_OPTION_UNSPECIFIED
                        enum:
                        - VOTE_OPTION_UNSPECIFIED
                        - VOTE_OPTION_YES
                        - VOTE_OPTION_ABSTAIN
                        - VOTE_OPTION_NO
                        - VOTE_OPTION_NO_WITH_VETO
                      options:
                        type: array
                        description: |-
                          options is the weighted vote options.

                          Since: cosmos-sdk 0.43
                        items:
                          type: object
                          properties:
                            option:
                              type: string
                              description: "option defines the valid vote options,\
                                \ it must not contain duplicate vote options."
                              default: VOTE_OPTION_UNSPECIFIED
                              enum:
                              - VOTE_OPTION_UNSPECIFIED
                              - VOTE_OPTION_YES
                              - VOTE_OPTION_ABSTAIN
                              - VOTE_OPTION_NO
                              - VOTE_OPTION_NO_WITH_VETO
                            weight:
                              type: string
                              description: weight is the vote weight associated with
                                the vote option.
                          description: |-
                            WeightedVoteOption defines a unit of vote for vote split.

                            Since: cosmos-sdk 0.43
                    description: |-
                      Vote defines a vote on a governance proposal.
                      A Vote consists of a proposal ID, the voter, and the vote option.
                description: QueryVoteResponse is the response type for the Query/Vote
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/gov/v1/params/{params_type}:
    get:
      tags:
      - Query
      summary: Params queries all parameters of the gov module.
      operationId: GovV1Params
      parameters:
      - name: params_type
        in: path
        description: |-
          params_type defines which parameters to query for, can be one of "voting",
          "tallying" or "deposit".
        required: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  voting_params:
                    type: object
                    properties:
                      voting_period:
                        type: string
                        description: Duration of the voting period.
                    description: |-
                      Deprecated: Prefer to use `params` instead.
                      voting_params defines the parameters related to voting.
                  deposit_params:
                    type: object
                    properties:
                      min_deposit:
                        type: array
                        description: Minimum deposit for a proposal to enter voting
                          period.
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: |-
                            Coin defines a token with a denomination and an amount.

                            NOTE: The amount field is an Int which implements the custom method
                            signatures required by gogoproto.
                      max_deposit_period:
                        type: string
                        description: |-
                          Maximum period for Atom holders to deposit on a proposal. Initial value: 2
                          months.
                    description: |-
                      Deprecated: Prefer to use `params` instead.
                      deposit_params defines the parameters related to deposit.
                  tally_params:
                    type: object
                    properties:
                      quorum:
                        type: string
                        description: |-
                          Minimum percentage of total stake needed to vote for a result to be
                          considered valid.
                      threshold:
                        type: string
                        description: "Minimum proportion of Yes votes for proposal\
                          \ to pass. Default value: 0.5."
                      veto_threshold:
                        type: string
                        description: |-
                          Minimum value of Veto votes to Total votes ratio for proposal to be
                          vetoed. Default value: 1/3.
                    description: |-
                      Deprecated: Prefer to use `params` instead.
                      tally_params defines the parameters related to tally.
                  params:
                    type: object
                    properties:
                      min_deposit:
                        type: array
                        description: Minimum deposit for a proposal to enter voting
                          period.
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: |-
                            Coin defines a token with a denomination and an amount.

                            NOTE: The amount field is an Int which implements the custom method
                            signatures required by gogoproto.
                      max_deposit_period:
                        type: string
                        description: |-
                          Maximum period for Atom holders to deposit on a proposal. Initial value: 2
                          months.
                      voting_period:
                        type: string
                        description: Duration of the voting period.
                      quorum:
                        type: string
                        description: |-
                          Minimum percentage of total stake needed to vote for a result to be
                           considered valid.
                      threshold:
                        type: string
                        description: "Minimum proportion of Yes votes for proposal\
                          \ to pass. Default value: 0.5."
                      veto_threshold:
                        type: string
                        description: |-
                          Minimum value of Veto votes to Total votes ratio for proposal to be
                           vetoed. Default value: 1/3.
                      min_initial_deposit_ratio:
                        type: string
                        description: The ratio representing the proportion of the
                          deposit value that must be paid at proposal submission.
                      burn_vote_quorum:
                        title: burn deposits if a proposal does not meet quorum
                        type: boolean
                      burn_proposal_deposit_prevote:
                        title: burn deposits if the proposal does not enter voting
                          period
                        type: boolean
                      burn_vote_veto:
                        title: burn deposits if quorum with vote type no_veto is met
                        type: boolean
                    description: |-
                      params defines all the paramaters of x/gov module.

                      Since: cosmos-sdk 0.47
                description: QueryParamsResponse is the response type for the Query/Params
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/gov/v1/proposals:
    get:
      tags:
      - Query
      summary: Proposals queries all proposals based on given status.
      operationId: GovV1Proposals
      parameters:
      - name: proposal_status
        in: query
        description: |-
          proposal_status defines the status of the proposals.

           - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default proposal status.
           - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit
          period.
           - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
          period.
           - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
          passed.
           - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has
          been rejected.
           - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has
          failed.
        schema:
          type: string
          default: PROPOSAL_STATUS_UNSPECIFIED
          enum:
          - PROPOSAL_STATUS_UNSPECIFIED
          - PROPOSAL_STATUS_DEPOSIT_PERIOD
          - PROPOSAL_STATUS_VOTING_PERIOD
          - PROPOSAL_STATUS_PASSED
          - PROPOSAL_STATUS_REJECTED
          - PROPOSAL_STATUS_FAILED
      - name: voter
        in: query
        description: voter defines the voter address for the proposals.
        schema:
          type: string
      - name: depositor
        in: query
        description: depositor defines the deposit addresses from the proposals.
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  proposals:
                    type: array
                    description: proposals defines all the requested governance proposals.
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: id defines the unique id of the proposal.
                          format: uint64
                        messages:
                          type: array
                          description: messages are the arbitrary messages to be executed
                            if the proposal passes.
                          items:
                            type: object
                            properties:
                              type_url:
                                type: string
                                description: |-
                                  A URL/resource name that uniquely identifies the type of the serialized
                                  protocol buffer message. This string must contain at least
                                  one "/" character. The last segment of the URL's path must represent
                                  the fully qualified name of the type (as in
                                  `path/google.protobuf.Duration`). The name should be in a canonical form
                                  (e.g., leading "." is not accepted).

                                  In practice, teams usually precompile into the binary all types that they
                                  expect it to use in the context of Any. However, for URLs which use the
                                  scheme `http`, `https`, or no scheme, one can optionally set up a type
                                  server that maps type URLs to message definitions as follows:

                                  * If no scheme is provided, `https` is assumed.
                                  * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                    value in binary format, or produce an error.
                                  * Applications are allowed to cache lookup results based on the
                                    URL, or have them precompiled into a binary to avoid any
                                    lookup. Therefore, binary compatibility needs to be preserved
                                    on changes to types. (Use versioned type names to manage
                                    breaking changes.)

                                  Note: this functionality is not currently available in the official
                                  protobuf release, and it is not used for type URLs beginning with
                                  type.googleapis.com.

                                  Schemes other than `http`, `https` (or the empty scheme) might be
                                  used with implementation specific semantics.
                              value:
                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                type: string
                                description: Must be a valid serialized protocol buffer
                                  of the above specified type.
                                format: byte
                            description: |-
                              `Any` contains an arbitrary serialized protocol buffer message along with a
                              URL that describes the type of the serialized message.

                              Protobuf library provides support to pack/unpack Any values in the form
                              of utility functions or additional generated methods of the Any type.

                              Example 1: Pack and unpack a message in C++.

                                  Foo foo = ...;
                                  Any any;
                                  any.PackFrom(foo);
                                  ...
                                  if (any.UnpackTo(&foo)) {
                                    ...
                                  }

                              Example 2: Pack and unpack a message in Java.

                                  Foo foo = ...;
                                  Any any = Any.pack(foo);
                                  ...
                                  if (any.is(Foo.class)) {
                                    foo = any.unpack(Foo.class);
                                  }

                               Example 3: Pack and unpack a message in Python.

                                  foo = Foo(...)
                                  any = Any()
                                  any.Pack(foo)
                                  ...
                                  if any.Is(Foo.DESCRIPTOR):
                                    any.Unpack(foo)
                                    ...

                               Example 4: Pack and unpack a message in Go

                                   foo := &pb.Foo{...}
                                   any, err := ptypes.MarshalAny(foo)
                                   ...
                                   foo := &pb.Foo{}
                                   if err := ptypes.UnmarshalAny(any, foo); err != nil {
                                     ...
                                   }

                              The pack methods provided by protobuf library will by default use
                              'type.googleapis.com/full.type.name' as the type URL and the unpack
                              methods only use the fully qualified type name after the last '/'
                              in the type URL, for example "foo.bar.com/x/y.z" will yield type
                              name "y.z".


                              JSON
                              ====
                              The JSON representation of an `Any` value uses the regular
                              representation of the deserialized, embedded message, with an
                              additional field `@type` which contains the type URL. Example:

                                  package google.profile;
                                  message Person {
                                    string first_name = 1;
                                    string last_name = 2;
                                  }

                                  {
                                    "@type": "type.googleapis.com/google.profile.Person",
                                    "firstName": <string>,
                                    "lastName": <string>
                                  }

                              If the embedded message type is well-known and has a custom JSON
                              representation, that representation will be embedded adding a field
                              `value` which holds the custom JSON in addition to the `@type`
                              field. Example (for message [google.protobuf.Duration][]):

                                  {
                                    "@type": "type.googleapis.com/google.protobuf.Duration",
                                    "value": "1.212s"
                                  }
                        status:
                          type: string
                          description: status defines the proposal status.
                          default: PROPOSAL_STATUS_UNSPECIFIED
                          enum:
                          - PROPOSAL_STATUS_UNSPECIFIED
                          - PROPOSAL_STATUS_DEPOSIT_PERIOD
                          - PROPOSAL_STATUS_VOTING_PERIOD
                          - PROPOSAL_STATUS_PASSED
                          - PROPOSAL_STATUS_REJECTED
                          - PROPOSAL_STATUS_FAILED
                        final_tally_result:
                          type: object
                          properties:
                            yes_count:
                              type: string
                              description: yes_count is the number of yes votes on
                                a proposal.
                            abstain_count:
                              type: string
                              description: abstain_count is the number of abstain
                                votes on a proposal.
                            no_count:
                              type: string
                              description: no_count is the number of no votes on a
                                proposal.
                            no_with_veto_count:
                              type: string
                              description: no_with_veto_count is the number of no
                                with veto votes on a proposal.
                          description: |-
                            final_tally_result is the final tally result of the proposal. When
                            querying a proposal via gRPC, this field is not populated until the
                            proposal's voting period has ended.
                        submit_time:
                          type: string
                          description: submit_time is the time of proposal submission.
                          format: date-time
                        deposit_end_time:
                          type: string
                          description: deposit_end_time is the end time for deposition.
                          format: date-time
                        total_deposit:
                          type: array
                          description: total_deposit is the total deposit on the proposal.
                          items:
                            type: object
                            properties:
                              denom:
                                type: string
                              amount:
                                type: string
                            description: |-
                              Coin defines a token with a denomination and an amount.

                              NOTE: The amount field is an Int which implements the custom method
                              signatures required by gogoproto.
                        voting_start_time:
                          type: string
                          description: voting_start_time is the starting time to vote
                            on a proposal.
                          format: date-time
                        voting_end_time:
                          type: string
                          description: voting_end_time is the end time of voting on
                            a proposal.
                          format: date-time
                        metadata:
                          type: string
                          description: metadata is any arbitrary metadata attached
                            to the proposal.
                        title:
                          title: title is the title of the proposal
                          type: string
                          description: "Since: cosmos-sdk 0.47"
                        summary:
                          title: summary is a short summary of the proposal
                          type: string
                          description: "Since: cosmos-sdk 0.47"
                        proposer:
                          title: Proposer is the address of the proposal sumbitter
                          type: string
                          description: "Since: cosmos-sdk 0.47"
                      description: Proposal defines the core field members of a governance
                        proposal.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
                description: |-
                  QueryProposalsResponse is the response type for the Query/Proposals RPC
                  method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/gov/v1/proposals/{proposal_id}:
    get:
      tags:
      - Query
      summary: Proposal queries proposal details based on ProposalID.
      operationId: GovV1Proposal
      parameters:
      - name: proposal_id
        in: path
        description: proposal_id defines the unique id of the proposal.
        required: true
        schema:
          type: string
          format: uint64
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  proposal:
                    type: object
                    properties:
                      id:
                        type: string
                        description: id defines the unique id of the proposal.
                        format: uint64
                      messages:
                        type: array
                        description: messages are the arbitrary messages to be executed
                          if the proposal passes.
                        items:
                          type: object
                          properties:
                            type_url:
                              type: string
                              description: |-
                                A URL/resource name that uniquely identifies the type of the serialized
                                protocol buffer message. This string must contain at least
                                one "/" character. The last segment of the URL's path must represent
                                the fully qualified name of the type (as in
                                `path/google.protobuf.Duration`). The name should be in a canonical form
                                (e.g., leading "." is not accepted).

                                In practice, teams usually precompile into the binary all types that they
                                expect it to use in the context of Any. However, for URLs which use the
                                scheme `http`, `https`, or no scheme, one can optionally set up a type
                                server that maps type URLs to message definitions as follows:

                                * If no scheme is provided, `https` is assumed.
                                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                  value in binary format, or produce an error.
                                * Applications are allowed to cache lookup results based on the
                                  URL, or have them precompiled into a binary to avoid any
                                  lookup. Therefore, binary compatibility needs to be preserved
                                  on changes to types. (Use versioned type names to manage
                                  breaking changes.)

                                Note: this functionality is not currently available in the official
                                protobuf release, and it is not used for type URLs beginning with
                                type.googleapis.com.

                                Schemes other than `http`, `https` (or the empty scheme) might be
                                used with implementation specific semantics.
                            value:
                              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                              type: string
                              description: Must be a valid serialized protocol buffer
                                of the above specified type.
                              format: byte
                          description: |-
                            `Any` contains an arbitrary serialized protocol buffer message along with a
                            URL that describes the type of the serialized message.

                            Protobuf library provides support to pack/unpack Any values in the form
                            of utility functions or additional generated methods of the Any type.

                            Example 1: Pack and unpack a message in C++.

                                Foo foo = ...;
                                Any any;
                                any.PackFrom(foo);
                                ...
                                if (any.UnpackTo(&foo)) {
                                  ...
                                }

                            Example 2: Pack and unpack a message in Java.

                                Foo foo = ...;
                                Any any = Any.pack(foo);
                                ...
                                if (any.is(Foo.class)) {
                                  foo = any.unpack(Foo.class);
                                }

                             Example 3: Pack and unpack a message in Python.

                                foo = Foo(...)
                                any = Any()
                                any.Pack(foo)
                                ...
                                if any.Is(Foo.DESCRIPTOR):
                                  any.Unpack(foo)
                                  ...

                             Example 4: Pack and unpack a message in Go

                                 foo := &pb.Foo{...}
                                 any, err := ptypes.MarshalAny(foo)
                                 ...
                                 foo := &pb.Foo{}
                                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                                   ...
                                 }

                            The pack methods provided by protobuf library will by default use
                            'type.googleapis.com/full.type.name' as the type URL and the unpack
                            methods only use the fully qualified type name after the last '/'
                            in the type URL, for example "foo.bar.com/x/y.z" will yield type
                            name "y.z".


                            JSON
                            ====
                            The JSON representation of an `Any` value uses the regular
                            representation of the deserialized, embedded message, with an
                            additional field `@type` which contains the type URL. Example:

                                package google.profile;
                                message Person {
                                  string first_name = 1;
                                  string last_name = 2;
                                }

                                {
                                  "@type": "type.googleapis.com/google.profile.Person",
                                  "firstName": <string>,
                                  "lastName": <string>
                                }

                            If the embedded message type is well-known and has a custom JSON
                            representation, that representation will be embedded adding a field
                            `value` which holds the custom JSON in addition to the `@type`
                            field. Example (for message [google.protobuf.Duration][]):

                                {
                                  "@type": "type.googleapis.com/google.protobuf.Duration",
                                  "value": "1.212s"
                                }
                      status:
                        type: string
                        description: status defines the proposal status.
                        default: PROPOSAL_STATUS_UNSPECIFIED
                        enum:
                        - PROPOSAL_STATUS_UNSPECIFIED
                        - PROPOSAL_STATUS_DEPOSIT_PERIOD
                        - PROPOSAL_STATUS_VOTING_PERIOD
                        - PROPOSAL_STATUS_PASSED
                        - PROPOSAL_STATUS_REJECTED
                        - PROPOSAL_STATUS_FAILED
                      final_tally_result:
                        type: object
                        properties:
                          yes_count:
                            type: string
                            description: yes_count is the number of yes votes on a
                              proposal.
                          abstain_count:
                            type: string
                            description: abstain_count is the number of abstain votes
                              on a proposal.
                          no_count:
                            type: string
                            description: no_count is the number of no votes on a proposal.
                          no_with_veto_count:
                            type: string
                            description: no_with_veto_count is the number of no with
                              veto votes on a proposal.
                        description: |-
                          final_tally_result is the final tally result of the proposal. When
                          querying a proposal via gRPC, this field is not populated until the
                          proposal's voting period has ended.
                      submit_time:
                        type: string
                        description: submit_time is the time of proposal submission.
                        format: date-time
                      deposit_end_time:
                        type: string
                        description: deposit_end_time is the end time for deposition.
                        format: date-time
                      total_deposit:
                        type: array
                        description: total_deposit is the total deposit on the proposal.
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: |-
                            Coin defines a token with a denomination and an amount.

                            NOTE: The amount field is an Int which implements the custom method
                            signatures required by gogoproto.
                      voting_start_time:
                        type: string
                        description: voting_start_time is the starting time to vote
                          on a proposal.
                        format: date-time
                      voting_end_time:
                        type: string
                        description: voting_end_time is the end time of voting on
                          a proposal.
                        format: date-time
                      metadata:
                        type: string
                        description: metadata is any arbitrary metadata attached to
                          the proposal.
                      title:
                        title: title is the title of the proposal
                        type: string
                        description: "Since: cosmos-sdk 0.47"
                      summary:
                        title: summary is a short summary of the proposal
                        type: string
                        description: "Since: cosmos-sdk 0.47"
                      proposer:
                        title: Proposer is the address of the proposal sumbitter
                        type: string
                        description: "Since: cosmos-sdk 0.47"
                    description: Proposal defines the core field members of a governance
                      proposal.
                description: QueryProposalResponse is the response type for the Query/Proposal
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/gov/v1/proposals/{proposal_id}/deposits:
    get:
      tags:
      - Query
      summary: Deposits queries all deposits of a single proposal.
      operationId: GovV1Deposits
      parameters:
      - name: proposal_id
        in: path
        description: proposal_id defines the unique id of the proposal.
        required: true
        schema:
          type: string
          format: uint64
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  deposits:
                    type: array
                    description: deposits defines the requested deposits.
                    items:
                      type: object
                      properties:
                        proposal_id:
                          type: string
                          description: proposal_id defines the unique id of the proposal.
                          format: uint64
                        depositor:
                          type: string
                          description: depositor defines the deposit addresses from
                            the proposals.
                        amount:
                          type: array
                          description: amount to be deposited by depositor.
                          items:
                            type: object
                            properties:
                              denom:
                                type: string
                              amount:
                                type: string
                            description: |-
                              Coin defines a token with a denomination and an amount.

                              NOTE: The amount field is an Int which implements the custom method
                              signatures required by gogoproto.
                      description: |-
                        Deposit defines an amount deposited by an account address to an active
                        proposal.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
                description: QueryDepositsResponse is the response type for the Query/Deposits
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/gov/v1/proposals/{proposal_id}/deposits/{depositor}:
    get:
      tags:
      - Query
      summary: "Deposit queries single deposit information based proposalID, depositAddr."
      operationId: GovV1Deposit
      parameters:
      - name: proposal_id
        in: path
        description: proposal_id defines the unique id of the proposal.
        required: true
        schema:
          type: string
          format: uint64
      - name: depositor
        in: path
        description: depositor defines the deposit addresses from the proposals.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  deposit:
                    type: object
                    properties:
                      proposal_id:
                        type: string
                        description: proposal_id defines the unique id of the proposal.
                        format: uint64
                      depositor:
                        type: string
                        description: depositor defines the deposit addresses from
                          the proposals.
                      amount:
                        type: array
                        description: amount to be deposited by depositor.
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: |-
                            Coin defines a token with a denomination and an amount.

                            NOTE: The amount field is an Int which implements the custom method
                            signatures required by gogoproto.
                    description: |-
                      Deposit defines an amount deposited by an account address to an active
                      proposal.
                description: QueryDepositResponse is the response type for the Query/Deposit
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/gov/v1/proposals/{proposal_id}/tally:
    get:
      tags:
      - Query
      summary: TallyResult queries the tally of a proposal vote.
      operationId: GovV1TallyResult
      parameters:
      - name: proposal_id
        in: path
        description: proposal_id defines the unique id of the proposal.
        required: true
        schema:
          type: string
          format: uint64
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  tally:
                    type: object
                    properties:
                      yes_count:
                        type: string
                        description: yes_count is the number of yes votes on a proposal.
                      abstain_count:
                        type: string
                        description: abstain_count is the number of abstain votes
                          on a proposal.
                      no_count:
                        type: string
                        description: no_count is the number of no votes on a proposal.
                      no_with_veto_count:
                        type: string
                        description: no_with_veto_count is the number of no with veto
                          votes on a proposal.
                    description: tally defines the requested tally.
                description: QueryTallyResultResponse is the response type for the
                  Query/Tally RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/gov/v1/proposals/{proposal_id}/votes:
    get:
      tags:
      - Query
      summary: Votes queries votes of a given proposal.
      operationId: GovV1Votes
      parameters:
      - name: proposal_id
        in: path
        description: proposal_id defines the unique id of the proposal.
        required: true
        schema:
          type: string
          format: uint64
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  votes:
                    type: array
                    description: votes defines the queried votes.
                    items:
                      type: object
                      properties:
                        proposal_id:
                          type: string
                          description: proposal_id defines the unique id of the proposal.
                          format: uint64
                        voter:
                          type: string
                          description: voter is the voter address of the proposal.
                        options:
                          type: array
                          description: options is the weighted vote options.
                          items:
                            type: object
                            properties:
                              option:
                                type: string
                                description: "option defines the valid vote options,\
                                  \ it must not contain duplicate vote options."
                                default: VOTE_OPTION_UNSPECIFIED
                                enum:
                                - VOTE_OPTION_UNSPECIFIED
                                - VOTE_OPTION_YES
                                - VOTE_OPTION_ABSTAIN
                                - VOTE_OPTION_NO
                                - VOTE_OPTION_NO_WITH_VETO
                              weight:
                                type: string
                                description: weight is the vote weight associated
                                  with the vote option.
                            description: WeightedVoteOption defines a unit of vote
                              for vote split.
                        metadata:
                          type: string
                          description: metadata is any  arbitrary metadata to attached
                            to the vote.
                      description: |-
                        Vote defines a vote on a governance proposal.
                        A Vote consists of a proposal ID, the voter, and the vote option.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
                description: QueryVotesResponse is the response type for the Query/Votes
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/gov/v1/proposals/{proposal_id}/votes/{voter}:
    get:
      tags:
      - Query
      summary: "Vote queries voted information based on proposalID, voterAddr."
      operationId: GovV1Vote
      parameters:
      - name: proposal_id
        in: path
        description: proposal_id defines the unique id of the proposal.
        required: true
        schema:
          type: string
          format: uint64
      - name: voter
        in: path
        description: voter defines the voter address for the proposals.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  vote:
                    type: object
                    properties:
                      proposal_id:
                        type: string
                        description: proposal_id defines the unique id of the proposal.
                        format: uint64
                      voter:
                        type: string
                        description: voter is the voter address of the proposal.
                      options:
                        type: array
                        description: options is the weighted vote options.
                        items:
                          type: object
                          properties:
                            option:
                              type: string
                              description: "option defines the valid vote options,\
                                \ it must not contain duplicate vote options."
                              default: VOTE_OPTION_UNSPECIFIED
                              enum:
                              - VOTE_OPTION_UNSPECIFIED
                              - VOTE_OPTION_YES
                              - VOTE_OPTION_ABSTAIN
                              - VOTE_OPTION_NO
                              - VOTE_OPTION_NO_WITH_VETO
                            weight:
                              type: string
                              description: weight is the vote weight associated with
                                the vote option.
                          description: WeightedVoteOption defines a unit of vote for
                            vote split.
                      metadata:
                        type: string
                        description: metadata is any  arbitrary metadata to attached
                          to the vote.
                    description: |-
                      Vote defines a vote on a governance proposal.
                      A Vote consists of a proposal ID, the voter, and the vote option.
                description: QueryVoteResponse is the response type for the Query/Vote
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/consensus/v1/params:
    get:
      tags:
      - Query
      summary: Params queries the parameters of x/consensus_param module.
      operationId: ConsensusParams
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  params:
                    type: object
                    properties:
                      block:
                        type: object
                        properties:
                          max_bytes:
                            title: |-
                              Max block size, in bytes.
                              Note: must be greater than 0
                            type: string
                            format: int64
                          max_gas:
                            title: |-
                              Max gas per block.
                              Note: must be greater or equal to -1
                            type: string
                            format: int64
                        description: BlockParams contains limits on the block size.
                      evidence:
                        type: object
                        properties:
                          max_age_num_blocks:
                            type: string
                            description: |-
                              Max age of evidence, in blocks.

                              The basic formula for calculating this is: MaxAgeDuration / {average block
                              time}.
                            format: int64
                          max_age_duration:
                            type: string
                            description: |-
                              Max age of evidence, in time.

                              It should correspond with an app's "unbonding period" or other similar
                              mechanism for handling [Nothing-At-Stake
                              attacks](https://github.com/ethereum/wiki/wiki/Proof-of-Stake-FAQ#what-is-the-nothing-at-stake-problem-and-how-can-it-be-fixed).
                          max_bytes:
                            title: |-
                              This sets the maximum size of total evidence in bytes that can be committed in a single block.
                              and should fall comfortably under the max block bytes.
                              Default is 1048576 or 1MB
                            type: string
                            format: int64
                        description: EvidenceParams determine how we handle evidence
                          of malfeasance.
                      validator:
                        type: object
                        properties:
                          pub_key_types:
                            type: array
                            items:
                              type: string
                        description: |-
                          ValidatorParams restrict the public key types validators can use.
                          NOTE: uses ABCI pubkey naming, not Amino names.
                      version:
                        type: object
                        properties:
                          app:
                            type: string
                            format: uint64
                        description: VersionParams contains the ABCI application version.
                    description: |-
                      params are the tendermint consensus params stored in the consensus module.
                      Please note that `params.version` is not populated in this response, it is
                      tracked separately in the x/upgrade module.
                description: QueryParamsResponse defines the response type for querying
                  x/consensus parameters.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
  /cosmos/group/v1/group_info/{group_id}:
    get:
      tags:
      - Query
      summary: GroupInfo queries group info based on group id.
      operationId: GroupInfo
      parameters:
      - name: group_id
        in: path
        description: group_id is the unique ID of the group.
        required: true
        schema:
          type: string
          format: uint64
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  info:
                    type: object
                    properties:
                      id:
                        type: string
                        description: id is the unique ID of the group.
                        format: uint64
                      admin:
                        type: string
                        description: admin is the account address of the group's admin.
                      metadata:
                        type: string
                        description: metadata is any arbitrary metadata to attached
                          to the group.
                      version:
                        title: |-
                          version is used to track changes to a group's membership structure that
                          would break existing proposals. Whenever any members weight is changed,
                          or any member is added or removed this version is incremented and will
                          cause proposals based on older versions of this group to fail
                        type: string
                        format: uint64
                      total_weight:
                        type: string
                        description: total_weight is the sum of the group members'
                          weights.
                      created_at:
                        type: string
                        description: created_at is a timestamp specifying when a group
                          was created.
                        format: date-time
                    description: info is the GroupInfo of the group.
                description: QueryGroupInfoResponse is the Query/GroupInfo response
                  type.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/group/v1/group_members/{group_id}:
    get:
      tags:
      - Query
      summary: GroupMembers queries members of a group by group id.
      operationId: GroupMembers
      parameters:
      - name: group_id
        in: path
        description: group_id is the unique ID of the group.
        required: true
        schema:
          type: string
          format: uint64
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  members:
                    type: array
                    description: members are the members of the group with given group_id.
                    items:
                      type: object
                      properties:
                        group_id:
                          type: string
                          description: group_id is the unique ID of the group.
                          format: uint64
                        member:
                          type: object
                          properties:
                            address:
                              type: string
                              description: address is the member's account address.
                            weight:
                              type: string
                              description: weight is the member's voting weight that
                                should be greater than 0.
                            metadata:
                              type: string
                              description: metadata is any arbitrary metadata attached
                                to the member.
                            added_at:
                              type: string
                              description: added_at is a timestamp specifying when
                                a member was added.
                              format: date-time
                          description: member is the member data.
                      description: GroupMember represents the relationship between
                        a group and a member.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
                description: QueryGroupMembersResponse is the Query/GroupMembersResponse
                  response type.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/group/v1/group_policies_by_admin/{admin}:
    get:
      tags:
      - Query
      summary: GroupPoliciesByAdmin queries group policies by admin address.
      operationId: GroupPoliciesByAdmin
      parameters:
      - name: admin
        in: path
        description: admin is the admin address of the group policy.
        required: true
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  group_policies:
                    type: array
                    description: group_policies are the group policies info with provided
                      admin.
                    items:
                      type: object
                      properties:
                        address:
                          type: string
                          description: address is the account address of group policy.
                        group_id:
                          type: string
                          description: group_id is the unique ID of the group.
                          format: uint64
                        admin:
                          type: string
                          description: admin is the account address of the group admin.
                        metadata:
                          title: |-
                            metadata is any arbitrary metadata attached to the group policy.
                            the recommended format of the metadata is to be found here:
                            https://docs.cosmos.network/v0.47/modules/group#decision-policy-1
                          type: string
                        version:
                          type: string
                          description: |-
                            version is used to track changes to a group's GroupPolicyInfo structure that
                            would create a different result on a running proposal.
                          format: uint64
                        decision_policy:
                          type: object
                          properties:
                            type_url:
                              type: string
                              description: |-
                                A URL/resource name that uniquely identifies the type of the serialized
                                protocol buffer message. This string must contain at least
                                one "/" character. The last segment of the URL's path must represent
                                the fully qualified name of the type (as in
                                `path/google.protobuf.Duration`). The name should be in a canonical form
                                (e.g., leading "." is not accepted).

                                In practice, teams usually precompile into the binary all types that they
                                expect it to use in the context of Any. However, for URLs which use the
                                scheme `http`, `https`, or no scheme, one can optionally set up a type
                                server that maps type URLs to message definitions as follows:

                                * If no scheme is provided, `https` is assumed.
                                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                  value in binary format, or produce an error.
                                * Applications are allowed to cache lookup results based on the
                                  URL, or have them precompiled into a binary to avoid any
                                  lookup. Therefore, binary compatibility needs to be preserved
                                  on changes to types. (Use versioned type names to manage
                                  breaking changes.)

                                Note: this functionality is not currently available in the official
                                protobuf release, and it is not used for type URLs beginning with
                                type.googleapis.com.

                                Schemes other than `http`, `https` (or the empty scheme) might be
                                used with implementation specific semantics.
                            value:
                              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                              type: string
                              description: Must be a valid serialized protocol buffer
                                of the above specified type.
                              format: byte
                          description: |-
                            `Any` contains an arbitrary serialized protocol buffer message along with a
                            URL that describes the type of the serialized message.

                            Protobuf library provides support to pack/unpack Any values in the form
                            of utility functions or additional generated methods of the Any type.

                            Example 1: Pack and unpack a message in C++.

                                Foo foo = ...;
                                Any any;
                                any.PackFrom(foo);
                                ...
                                if (any.UnpackTo(&foo)) {
                                  ...
                                }

                            Example 2: Pack and unpack a message in Java.

                                Foo foo = ...;
                                Any any = Any.pack(foo);
                                ...
                                if (any.is(Foo.class)) {
                                  foo = any.unpack(Foo.class);
                                }

                             Example 3: Pack and unpack a message in Python.

                                foo = Foo(...)
                                any = Any()
                                any.Pack(foo)
                                ...
                                if any.Is(Foo.DESCRIPTOR):
                                  any.Unpack(foo)
                                  ...

                             Example 4: Pack and unpack a message in Go

                                 foo := &pb.Foo{...}
                                 any, err := ptypes.MarshalAny(foo)
                                 ...
                                 foo := &pb.Foo{}
                                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                                   ...
                                 }

                            The pack methods provided by protobuf library will by default use
                            'type.googleapis.com/full.type.name' as the type URL and the unpack
                            methods only use the fully qualified type name after the last '/'
                            in the type URL, for example "foo.bar.com/x/y.z" will yield type
                            name "y.z".


                            JSON
                            ====
                            The JSON representation of an `Any` value uses the regular
                            representation of the deserialized, embedded message, with an
                            additional field `@type` which contains the type URL. Example:

                                package google.profile;
                                message Person {
                                  string first_name = 1;
                                  string last_name = 2;
                                }

                                {
                                  "@type": "type.googleapis.com/google.profile.Person",
                                  "firstName": <string>,
                                  "lastName": <string>
                                }

                            If the embedded message type is well-known and has a custom JSON
                            representation, that representation will be embedded adding a field
                            `value` which holds the custom JSON in addition to the `@type`
                            field. Example (for message [google.protobuf.Duration][]):

                                {
                                  "@type": "type.googleapis.com/google.protobuf.Duration",
                                  "value": "1.212s"
                                }
                        created_at:
                          type: string
                          description: created_at is a timestamp specifying when a
                            group policy was created.
                          format: date-time
                      description: GroupPolicyInfo represents the high-level on-chain
                        information for a group policy.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
                description: QueryGroupPoliciesByAdminResponse is the Query/GroupPoliciesByAdmin
                  response type.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/group/v1/group_policies_by_group/{group_id}:
    get:
      tags:
      - Query
      summary: GroupPoliciesByGroup queries group policies by group id.
      operationId: GroupPoliciesByGroup
      parameters:
      - name: group_id
        in: path
        description: group_id is the unique ID of the group policy's group.
        required: true
        schema:
          type: string
          format: uint64
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  group_policies:
                    type: array
                    description: group_policies are the group policies info associated
                      with the provided group.
                    items:
                      type: object
                      properties:
                        address:
                          type: string
                          description: address is the account address of group policy.
                        group_id:
                          type: string
                          description: group_id is the unique ID of the group.
                          format: uint64
                        admin:
                          type: string
                          description: admin is the account address of the group admin.
                        metadata:
                          title: |-
                            metadata is any arbitrary metadata attached to the group policy.
                            the recommended format of the metadata is to be found here:
                            https://docs.cosmos.network/v0.47/modules/group#decision-policy-1
                          type: string
                        version:
                          type: string
                          description: |-
                            version is used to track changes to a group's GroupPolicyInfo structure that
                            would create a different result on a running proposal.
                          format: uint64
                        decision_policy:
                          type: object
                          properties:
                            type_url:
                              type: string
                              description: |-
                                A URL/resource name that uniquely identifies the type of the serialized
                                protocol buffer message. This string must contain at least
                                one "/" character. The last segment of the URL's path must represent
                                the fully qualified name of the type (as in
                                `path/google.protobuf.Duration`). The name should be in a canonical form
                                (e.g., leading "." is not accepted).

                                In practice, teams usually precompile into the binary all types that they
                                expect it to use in the context of Any. However, for URLs which use the
                                scheme `http`, `https`, or no scheme, one can optionally set up a type
                                server that maps type URLs to message definitions as follows:

                                * If no scheme is provided, `https` is assumed.
                                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                  value in binary format, or produce an error.
                                * Applications are allowed to cache lookup results based on the
                                  URL, or have them precompiled into a binary to avoid any
                                  lookup. Therefore, binary compatibility needs to be preserved
                                  on changes to types. (Use versioned type names to manage
                                  breaking changes.)

                                Note: this functionality is not currently available in the official
                                protobuf release, and it is not used for type URLs beginning with
                                type.googleapis.com.

                                Schemes other than `http`, `https` (or the empty scheme) might be
                                used with implementation specific semantics.
                            value:
                              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                              type: string
                              description: Must be a valid serialized protocol buffer
                                of the above specified type.
                              format: byte
                          description: |-
                            `Any` contains an arbitrary serialized protocol buffer message along with a
                            URL that describes the type of the serialized message.

                            Protobuf library provides support to pack/unpack Any values in the form
                            of utility functions or additional generated methods of the Any type.

                            Example 1: Pack and unpack a message in C++.

                                Foo foo = ...;
                                Any any;
                                any.PackFrom(foo);
                                ...
                                if (any.UnpackTo(&foo)) {
                                  ...
                                }

                            Example 2: Pack and unpack a message in Java.

                                Foo foo = ...;
                                Any any = Any.pack(foo);
                                ...
                                if (any.is(Foo.class)) {
                                  foo = any.unpack(Foo.class);
                                }

                             Example 3: Pack and unpack a message in Python.

                                foo = Foo(...)
                                any = Any()
                                any.Pack(foo)
                                ...
                                if any.Is(Foo.DESCRIPTOR):
                                  any.Unpack(foo)
                                  ...

                             Example 4: Pack and unpack a message in Go

                                 foo := &pb.Foo{...}
                                 any, err := ptypes.MarshalAny(foo)
                                 ...
                                 foo := &pb.Foo{}
                                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                                   ...
                                 }

                            The pack methods provided by protobuf library will by default use
                            'type.googleapis.com/full.type.name' as the type URL and the unpack
                            methods only use the fully qualified type name after the last '/'
                            in the type URL, for example "foo.bar.com/x/y.z" will yield type
                            name "y.z".


                            JSON
                            ====
                            The JSON representation of an `Any` value uses the regular
                            representation of the deserialized, embedded message, with an
                            additional field `@type` which contains the type URL. Example:

                                package google.profile;
                                message Person {
                                  string first_name = 1;
                                  string last_name = 2;
                                }

                                {
                                  "@type": "type.googleapis.com/google.profile.Person",
                                  "firstName": <string>,
                                  "lastName": <string>
                                }

                            If the embedded message type is well-known and has a custom JSON
                            representation, that representation will be embedded adding a field
                            `value` which holds the custom JSON in addition to the `@type`
                            field. Example (for message [google.protobuf.Duration][]):

                                {
                                  "@type": "type.googleapis.com/google.protobuf.Duration",
                                  "value": "1.212s"
                                }
                        created_at:
                          type: string
                          description: created_at is a timestamp specifying when a
                            group policy was created.
                          format: date-time
                      description: GroupPolicyInfo represents the high-level on-chain
                        information for a group policy.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
                description: QueryGroupPoliciesByGroupResponse is the Query/GroupPoliciesByGroup
                  response type.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/group/v1/group_policy_info/{address}:
    get:
      tags:
      - Query
      summary: GroupPolicyInfo queries group policy info based on account address
        of group policy.
      operationId: GroupPolicyInfo
      parameters:
      - name: address
        in: path
        description: address is the account address of the group policy.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  info:
                    type: object
                    properties:
                      address:
                        type: string
                        description: address is the account address of group policy.
                      group_id:
                        type: string
                        description: group_id is the unique ID of the group.
                        format: uint64
                      admin:
                        type: string
                        description: admin is the account address of the group admin.
                      metadata:
                        title: |-
                          metadata is any arbitrary metadata attached to the group policy.
                          the recommended format of the metadata is to be found here:
                          https://docs.cosmos.network/v0.47/modules/group#decision-policy-1
                        type: string
                      version:
                        type: string
                        description: |-
                          version is used to track changes to a group's GroupPolicyInfo structure that
                          would create a different result on a running proposal.
                        format: uint64
                      decision_policy:
                        type: object
                        properties:
                          type_url:
                            type: string
                            description: |-
                              A URL/resource name that uniquely identifies the type of the serialized
                              protocol buffer message. This string must contain at least
                              one "/" character. The last segment of the URL's path must represent
                              the fully qualified name of the type (as in
                              `path/google.protobuf.Duration`). The name should be in a canonical form
                              (e.g., leading "." is not accepted).

                              In practice, teams usually precompile into the binary all types that they
                              expect it to use in the context of Any. However, for URLs which use the
                              scheme `http`, `https`, or no scheme, one can optionally set up a type
                              server that maps type URLs to message definitions as follows:

                              * If no scheme is provided, `https` is assumed.
                              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                value in binary format, or produce an error.
                              * Applications are allowed to cache lookup results based on the
                                URL, or have them precompiled into a binary to avoid any
                                lookup. Therefore, binary compatibility needs to be preserved
                                on changes to types. (Use versioned type names to manage
                                breaking changes.)

                              Note: this functionality is not currently available in the official
                              protobuf release, and it is not used for type URLs beginning with
                              type.googleapis.com.

                              Schemes other than `http`, `https` (or the empty scheme) might be
                              used with implementation specific semantics.
                          value:
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            description: Must be a valid serialized protocol buffer
                              of the above specified type.
                            format: byte
                        description: |-
                          `Any` contains an arbitrary serialized protocol buffer message along with a
                          URL that describes the type of the serialized message.

                          Protobuf library provides support to pack/unpack Any values in the form
                          of utility functions or additional generated methods of the Any type.

                          Example 1: Pack and unpack a message in C++.

                              Foo foo = ...;
                              Any any;
                              any.PackFrom(foo);
                              ...
                              if (any.UnpackTo(&foo)) {
                                ...
                              }

                          Example 2: Pack and unpack a message in Java.

                              Foo foo = ...;
                              Any any = Any.pack(foo);
                              ...
                              if (any.is(Foo.class)) {
                                foo = any.unpack(Foo.class);
                              }

                           Example 3: Pack and unpack a message in Python.

                              foo = Foo(...)
                              any = Any()
                              any.Pack(foo)
                              ...
                              if any.Is(Foo.DESCRIPTOR):
                                any.Unpack(foo)
                                ...

                           Example 4: Pack and unpack a message in Go

                               foo := &pb.Foo{...}
                               any, err := ptypes.MarshalAny(foo)
                               ...
                               foo := &pb.Foo{}
                               if err := ptypes.UnmarshalAny(any, foo); err != nil {
                                 ...
                               }

                          The pack methods provided by protobuf library will by default use
                          'type.googleapis.com/full.type.name' as the type URL and the unpack
                          methods only use the fully qualified type name after the last '/'
                          in the type URL, for example "foo.bar.com/x/y.z" will yield type
                          name "y.z".


                          JSON
                          ====
                          The JSON representation of an `Any` value uses the regular
                          representation of the deserialized, embedded message, with an
                          additional field `@type` which contains the type URL. Example:

                              package google.profile;
                              message Person {
                                string first_name = 1;
                                string last_name = 2;
                              }

                              {
                                "@type": "type.googleapis.com/google.profile.Person",
                                "firstName": <string>,
                                "lastName": <string>
                              }

                          If the embedded message type is well-known and has a custom JSON
                          representation, that representation will be embedded adding a field
                          `value` which holds the custom JSON in addition to the `@type`
                          field. Example (for message [google.protobuf.Duration][]):

                              {
                                "@type": "type.googleapis.com/google.protobuf.Duration",
                                "value": "1.212s"
                              }
                      created_at:
                        type: string
                        description: created_at is a timestamp specifying when a group
                          policy was created.
                        format: date-time
                    description: GroupPolicyInfo represents the high-level on-chain
                      information for a group policy.
                description: QueryGroupPolicyInfoResponse is the Query/GroupPolicyInfo
                  response type.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/group/v1/groups:
    get:
      tags:
      - Query
      summary: Groups queries all groups in state.
      description: "Since: cosmos-sdk 0.47.1"
      operationId: Groups
      parameters:
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  groups:
                    type: array
                    description: '`groups` is all the groups present in state.'
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: id is the unique ID of the group.
                          format: uint64
                        admin:
                          type: string
                          description: admin is the account address of the group's
                            admin.
                        metadata:
                          type: string
                          description: metadata is any arbitrary metadata to attached
                            to the group.
                        version:
                          title: |-
                            version is used to track changes to a group's membership structure that
                            would break existing proposals. Whenever any members weight is changed,
                            or any member is added or removed this version is incremented and will
                            cause proposals based on older versions of this group to fail
                          type: string
                          format: uint64
                        total_weight:
                          type: string
                          description: total_weight is the sum of the group members'
                            weights.
                        created_at:
                          type: string
                          description: created_at is a timestamp specifying when a
                            group was created.
                          format: date-time
                      description: GroupInfo represents the high-level on-chain information
                        for a group.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
                description: |-
                  QueryGroupsResponse is the Query/Groups response type.

                  Since: cosmos-sdk 0.47.1
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/group/v1/groups_by_admin/{admin}:
    get:
      tags:
      - Query
      summary: GroupsByAdmin queries groups by admin address.
      operationId: GroupsByAdmin
      parameters:
      - name: admin
        in: path
        description: admin is the account address of a group's admin.
        required: true
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  groups:
                    type: array
                    description: groups are the groups info with the provided admin.
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: id is the unique ID of the group.
                          format: uint64
                        admin:
                          type: string
                          description: admin is the account address of the group's
                            admin.
                        metadata:
                          type: string
                          description: metadata is any arbitrary metadata to attached
                            to the group.
                        version:
                          title: |-
                            version is used to track changes to a group's membership structure that
                            would break existing proposals. Whenever any members weight is changed,
                            or any member is added or removed this version is incremented and will
                            cause proposals based on older versions of this group to fail
                          type: string
                          format: uint64
                        total_weight:
                          type: string
                          description: total_weight is the sum of the group members'
                            weights.
                        created_at:
                          type: string
                          description: created_at is a timestamp specifying when a
                            group was created.
                          format: date-time
                      description: GroupInfo represents the high-level on-chain information
                        for a group.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
                description: QueryGroupsByAdminResponse is the Query/GroupsByAdminResponse
                  response type.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/group/v1/groups_by_member/{address}:
    get:
      tags:
      - Query
      summary: GroupsByMember queries groups by member address.
      operationId: GroupsByMember
      parameters:
      - name: address
        in: path
        description: address is the group member address.
        required: true
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  groups:
                    type: array
                    description: groups are the groups info with the provided group
                      member.
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: id is the unique ID of the group.
                          format: uint64
                        admin:
                          type: string
                          description: admin is the account address of the group's
                            admin.
                        metadata:
                          type: string
                          description: metadata is any arbitrary metadata to attached
                            to the group.
                        version:
                          title: |-
                            version is used to track changes to a group's membership structure that
                            would break existing proposals. Whenever any members weight is changed,
                            or any member is added or removed this version is incremented and will
                            cause proposals based on older versions of this group to fail
                          type: string
                          format: uint64
                        total_weight:
                          type: string
                          description: total_weight is the sum of the group members'
                            weights.
                        created_at:
                          type: string
                          description: created_at is a timestamp specifying when a
                            group was created.
                          format: date-time
                      description: GroupInfo represents the high-level on-chain information
                        for a group.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
                description: QueryGroupsByMemberResponse is the Query/GroupsByMember
                  response type.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/group/v1/proposal/{proposal_id}:
    get:
      tags:
      - Query
      summary: Proposal queries a proposal based on proposal id.
      operationId: Proposal
      parameters:
      - name: proposal_id
        in: path
        description: proposal_id is the unique ID of a proposal.
        required: true
        schema:
          type: string
          format: uint64
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  proposal:
                    type: object
                    properties:
                      id:
                        type: string
                        description: id is the unique id of the proposal.
                        format: uint64
                      group_policy_address:
                        type: string
                        description: group_policy_address is the account address of
                          group policy.
                      metadata:
                        title: |-
                          metadata is any arbitrary metadata attached to the proposal.
                          the recommended format of the metadata is to be found here:
                          https://docs.cosmos.network/v0.47/modules/group#proposal-4
                        type: string
                      proposers:
                        type: array
                        description: proposers are the account addresses of the proposers.
                        items:
                          type: string
                      submit_time:
                        type: string
                        description: submit_time is a timestamp specifying when a
                          proposal was submitted.
                        format: date-time
                      group_version:
                        type: string
                        description: |-
                          group_version tracks the version of the group at proposal submission.
                          This field is here for informational purposes only.
                        format: uint64
                      group_policy_version:
                        type: string
                        description: |-
                          group_policy_version tracks the version of the group policy at proposal submission.
                          When a decision policy is changed, existing proposals from previous policy
                          versions will become invalid with the `ABORTED` status.
                          This field is here for informational purposes only.
                        format: uint64
                      status:
                        type: string
                        description: status represents the high level position in
                          the life cycle of the proposal. Initial value is Submitted.
                        default: PROPOSAL_STATUS_UNSPECIFIED
                        enum:
                        - PROPOSAL_STATUS_UNSPECIFIED
                        - PROPOSAL_STATUS_SUBMITTED
                        - PROPOSAL_STATUS_ACCEPTED
                        - PROPOSAL_STATUS_REJECTED
                        - PROPOSAL_STATUS_ABORTED
                        - PROPOSAL_STATUS_WITHDRAWN
                      final_tally_result:
                        type: object
                        properties:
                          yes_count:
                            type: string
                            description: yes_count is the weighted sum of yes votes.
                          abstain_count:
                            type: string
                            description: abstain_count is the weighted sum of abstainers.
                          no_count:
                            type: string
                            description: no_count is the weighted sum of no votes.
                          no_with_veto_count:
                            type: string
                            description: no_with_veto_count is the weighted sum of
                              veto.
                        description: |-
                          final_tally_result contains the sums of all weighted votes for this
                          proposal for each vote option. It is empty at submission, and only
                          populated after tallying, at voting period end or at proposal execution,
                          whichever happens first.
                      voting_period_end:
                        type: string
                        description: |-
                          voting_period_end is the timestamp before which voting must be done.
                          Unless a successful MsgExec is called before (to execute a proposal whose
                          tally is successful before the voting period ends), tallying will be done
                          at this point, and the `final_tally_result`and `status` fields will be
                          accordingly updated.
                        format: date-time
                      executor_result:
                        type: string
                        description: executor_result is the final result of the proposal
                          execution. Initial value is NotRun.
                        default: PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED
                        enum:
                        - PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED
                        - PROPOSAL_EXECUTOR_RESULT_NOT_RUN
                        - PROPOSAL_EXECUTOR_RESULT_SUCCESS
                        - PROPOSAL_EXECUTOR_RESULT_FAILURE
                      messages:
                        type: array
                        description: messages is a list of `sdk.Msg`s that will be
                          executed if the proposal passes.
                        items:
                          type: object
                          properties:
                            type_url:
                              type: string
                              description: |-
                                A URL/resource name that uniquely identifies the type of the serialized
                                protocol buffer message. This string must contain at least
                                one "/" character. The last segment of the URL's path must represent
                                the fully qualified name of the type (as in
                                `path/google.protobuf.Duration`). The name should be in a canonical form
                                (e.g., leading "." is not accepted).

                                In practice, teams usually precompile into the binary all types that they
                                expect it to use in the context of Any. However, for URLs which use the
                                scheme `http`, `https`, or no scheme, one can optionally set up a type
                                server that maps type URLs to message definitions as follows:

                                * If no scheme is provided, `https` is assumed.
                                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                  value in binary format, or produce an error.
                                * Applications are allowed to cache lookup results based on the
                                  URL, or have them precompiled into a binary to avoid any
                                  lookup. Therefore, binary compatibility needs to be preserved
                                  on changes to types. (Use versioned type names to manage
                                  breaking changes.)

                                Note: this functionality is not currently available in the official
                                protobuf release, and it is not used for type URLs beginning with
                                type.googleapis.com.

                                Schemes other than `http`, `https` (or the empty scheme) might be
                                used with implementation specific semantics.
                            value:
                              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                              type: string
                              description: Must be a valid serialized protocol buffer
                                of the above specified type.
                              format: byte
                          description: |-
                            `Any` contains an arbitrary serialized protocol buffer message along with a
                            URL that describes the type of the serialized message.

                            Protobuf library provides support to pack/unpack Any values in the form
                            of utility functions or additional generated methods of the Any type.

                            Example 1: Pack and unpack a message in C++.

                                Foo foo = ...;
                                Any any;
                                any.PackFrom(foo);
                                ...
                                if (any.UnpackTo(&foo)) {
                                  ...
                                }

                            Example 2: Pack and unpack a message in Java.

                                Foo foo = ...;
                                Any any = Any.pack(foo);
                                ...
                                if (any.is(Foo.class)) {
                                  foo = any.unpack(Foo.class);
                                }

                             Example 3: Pack and unpack a message in Python.

                                foo = Foo(...)
                                any = Any()
                                any.Pack(foo)
                                ...
                                if any.Is(Foo.DESCRIPTOR):
                                  any.Unpack(foo)
                                  ...

                             Example 4: Pack and unpack a message in Go

                                 foo := &pb.Foo{...}
                                 any, err := ptypes.MarshalAny(foo)
                                 ...
                                 foo := &pb.Foo{}
                                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                                   ...
                                 }

                            The pack methods provided by protobuf library will by default use
                            'type.googleapis.com/full.type.name' as the type URL and the unpack
                            methods only use the fully qualified type name after the last '/'
                            in the type URL, for example "foo.bar.com/x/y.z" will yield type
                            name "y.z".


                            JSON
                            ====
                            The JSON representation of an `Any` value uses the regular
                            representation of the deserialized, embedded message, with an
                            additional field `@type` which contains the type URL. Example:

                                package google.profile;
                                message Person {
                                  string first_name = 1;
                                  string last_name = 2;
                                }

                                {
                                  "@type": "type.googleapis.com/google.profile.Person",
                                  "firstName": <string>,
                                  "lastName": <string>
                                }

                            If the embedded message type is well-known and has a custom JSON
                            representation, that representation will be embedded adding a field
                            `value` which holds the custom JSON in addition to the `@type`
                            field. Example (for message [google.protobuf.Duration][]):

                                {
                                  "@type": "type.googleapis.com/google.protobuf.Duration",
                                  "value": "1.212s"
                                }
                      title:
                        title: title is the title of the proposal
                        type: string
                        description: "Since: cosmos-sdk 0.47"
                      summary:
                        title: summary is a short summary of the proposal
                        type: string
                        description: "Since: cosmos-sdk 0.47"
                    description: proposal is the proposal info.
                description: QueryProposalResponse is the Query/Proposal response
                  type.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/group/v1/proposals/{proposal_id}/tally:
    get:
      tags:
      - Query
      summary: |-
        TallyResult returns the tally result of a proposal. If the proposal is
        still in voting period, then this query computes the current tally state,
        which might not be final. On the other hand, if the proposal is final,
        then it simply returns the `final_tally_result` state stored in the
        proposal itself.
      operationId: TallyResult
      parameters:
      - name: proposal_id
        in: path
        description: proposal_id is the unique id of a proposal.
        required: true
        schema:
          type: string
          format: uint64
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  tally:
                    type: object
                    properties:
                      yes_count:
                        type: string
                        description: yes_count is the weighted sum of yes votes.
                      abstain_count:
                        type: string
                        description: abstain_count is the weighted sum of abstainers.
                      no_count:
                        type: string
                        description: no_count is the weighted sum of no votes.
                      no_with_veto_count:
                        type: string
                        description: no_with_veto_count is the weighted sum of veto.
                    description: tally defines the requested tally.
                description: QueryTallyResultResponse is the Query/TallyResult response
                  type.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/group/v1/proposals_by_group_policy/{address}:
    get:
      tags:
      - Query
      summary: ProposalsByGroupPolicy queries proposals based on account address of
        group policy.
      operationId: ProposalsByGroupPolicy
      parameters:
      - name: address
        in: path
        description: address is the account address of the group policy related to
          proposals.
        required: true
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  proposals:
                    type: array
                    description: proposals are the proposals with given group policy.
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: id is the unique id of the proposal.
                          format: uint64
                        group_policy_address:
                          type: string
                          description: group_policy_address is the account address
                            of group policy.
                        metadata:
                          title: |-
                            metadata is any arbitrary metadata attached to the proposal.
                            the recommended format of the metadata is to be found here:
                            https://docs.cosmos.network/v0.47/modules/group#proposal-4
                          type: string
                        proposers:
                          type: array
                          description: proposers are the account addresses of the
                            proposers.
                          items:
                            type: string
                        submit_time:
                          type: string
                          description: submit_time is a timestamp specifying when
                            a proposal was submitted.
                          format: date-time
                        group_version:
                          type: string
                          description: |-
                            group_version tracks the version of the group at proposal submission.
                            This field is here for informational purposes only.
                          format: uint64
                        group_policy_version:
                          type: string
                          description: |-
                            group_policy_version tracks the version of the group policy at proposal submission.
                            When a decision policy is changed, existing proposals from previous policy
                            versions will become invalid with the `ABORTED` status.
                            This field is here for informational purposes only.
                          format: uint64
                        status:
                          type: string
                          description: status represents the high level position in
                            the life cycle of the proposal. Initial value is Submitted.
                          default: PROPOSAL_STATUS_UNSPECIFIED
                          enum:
                          - PROPOSAL_STATUS_UNSPECIFIED
                          - PROPOSAL_STATUS_SUBMITTED
                          - PROPOSAL_STATUS_ACCEPTED
                          - PROPOSAL_STATUS_REJECTED
                          - PROPOSAL_STATUS_ABORTED
                          - PROPOSAL_STATUS_WITHDRAWN
                        final_tally_result:
                          type: object
                          properties:
                            yes_count:
                              type: string
                              description: yes_count is the weighted sum of yes votes.
                            abstain_count:
                              type: string
                              description: abstain_count is the weighted sum of abstainers.
                            no_count:
                              type: string
                              description: no_count is the weighted sum of no votes.
                            no_with_veto_count:
                              type: string
                              description: no_with_veto_count is the weighted sum
                                of veto.
                          description: |-
                            final_tally_result contains the sums of all weighted votes for this
                            proposal for each vote option. It is empty at submission, and only
                            populated after tallying, at voting period end or at proposal execution,
                            whichever happens first.
                        voting_period_end:
                          type: string
                          description: |-
                            voting_period_end is the timestamp before which voting must be done.
                            Unless a successful MsgExec is called before (to execute a proposal whose
                            tally is successful before the voting period ends), tallying will be done
                            at this point, and the `final_tally_result`and `status` fields will be
                            accordingly updated.
                          format: date-time
                        executor_result:
                          type: string
                          description: executor_result is the final result of the
                            proposal execution. Initial value is NotRun.
                          default: PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED
                          enum:
                          - PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED
                          - PROPOSAL_EXECUTOR_RESULT_NOT_RUN
                          - PROPOSAL_EXECUTOR_RESULT_SUCCESS
                          - PROPOSAL_EXECUTOR_RESULT_FAILURE
                        messages:
                          type: array
                          description: messages is a list of `sdk.Msg`s that will
                            be executed if the proposal passes.
                          items:
                            type: object
                            properties:
                              type_url:
                                type: string
                                description: |-
                                  A URL/resource name that uniquely identifies the type of the serialized
                                  protocol buffer message. This string must contain at least
                                  one "/" character. The last segment of the URL's path must represent
                                  the fully qualified name of the type (as in
                                  `path/google.protobuf.Duration`). The name should be in a canonical form
                                  (e.g., leading "." is not accepted).

                                  In practice, teams usually precompile into the binary all types that they
                                  expect it to use in the context of Any. However, for URLs which use the
                                  scheme `http`, `https`, or no scheme, one can optionally set up a type
                                  server that maps type URLs to message definitions as follows:

                                  * If no scheme is provided, `https` is assumed.
                                  * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                    value in binary format, or produce an error.
                                  * Applications are allowed to cache lookup results based on the
                                    URL, or have them precompiled into a binary to avoid any
                                    lookup. Therefore, binary compatibility needs to be preserved
                                    on changes to types. (Use versioned type names to manage
                                    breaking changes.)

                                  Note: this functionality is not currently available in the official
                                  protobuf release, and it is not used for type URLs beginning with
                                  type.googleapis.com.

                                  Schemes other than `http`, `https` (or the empty scheme) might be
                                  used with implementation specific semantics.
                              value:
                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                type: string
                                description: Must be a valid serialized protocol buffer
                                  of the above specified type.
                                format: byte
                            description: |-
                              `Any` contains an arbitrary serialized protocol buffer message along with a
                              URL that describes the type of the serialized message.

                              Protobuf library provides support to pack/unpack Any values in the form
                              of utility functions or additional generated methods of the Any type.

                              Example 1: Pack and unpack a message in C++.

                                  Foo foo = ...;
                                  Any any;
                                  any.PackFrom(foo);
                                  ...
                                  if (any.UnpackTo(&foo)) {
                                    ...
                                  }

                              Example 2: Pack and unpack a message in Java.

                                  Foo foo = ...;
                                  Any any = Any.pack(foo);
                                  ...
                                  if (any.is(Foo.class)) {
                                    foo = any.unpack(Foo.class);
                                  }

                               Example 3: Pack and unpack a message in Python.

                                  foo = Foo(...)
                                  any = Any()
                                  any.Pack(foo)
                                  ...
                                  if any.Is(Foo.DESCRIPTOR):
                                    any.Unpack(foo)
                                    ...

                               Example 4: Pack and unpack a message in Go

                                   foo := &pb.Foo{...}
                                   any, err := ptypes.MarshalAny(foo)
                                   ...
                                   foo := &pb.Foo{}
                                   if err := ptypes.UnmarshalAny(any, foo); err != nil {
                                     ...
                                   }

                              The pack methods provided by protobuf library will by default use
                              'type.googleapis.com/full.type.name' as the type URL and the unpack
                              methods only use the fully qualified type name after the last '/'
                              in the type URL, for example "foo.bar.com/x/y.z" will yield type
                              name "y.z".


                              JSON
                              ====
                              The JSON representation of an `Any` value uses the regular
                              representation of the deserialized, embedded message, with an
                              additional field `@type` which contains the type URL. Example:

                                  package google.profile;
                                  message Person {
                                    string first_name = 1;
                                    string last_name = 2;
                                  }

                                  {
                                    "@type": "type.googleapis.com/google.profile.Person",
                                    "firstName": <string>,
                                    "lastName": <string>
                                  }

                              If the embedded message type is well-known and has a custom JSON
                              representation, that representation will be embedded adding a field
                              `value` which holds the custom JSON in addition to the `@type`
                              field. Example (for message [google.protobuf.Duration][]):

                                  {
                                    "@type": "type.googleapis.com/google.protobuf.Duration",
                                    "value": "1.212s"
                                  }
                        title:
                          title: title is the title of the proposal
                          type: string
                          description: "Since: cosmos-sdk 0.47"
                        summary:
                          title: summary is a short summary of the proposal
                          type: string
                          description: "Since: cosmos-sdk 0.47"
                      description: |-
                        Proposal defines a group proposal. Any member of a group can submit a proposal
                        for a group policy to decide upon.
                        A proposal consists of a set of `sdk.Msg`s that will be executed if the proposal
                        passes as well as some optional metadata associated with the proposal.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
                description: QueryProposalsByGroupPolicyResponse is the Query/ProposalByGroupPolicy
                  response type.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/group/v1/vote_by_proposal_voter/{proposal_id}/{voter}:
    get:
      tags:
      - Query
      summary: VoteByProposalVoter queries a vote by proposal id and voter.
      operationId: VoteByProposalVoter
      parameters:
      - name: proposal_id
        in: path
        description: proposal_id is the unique ID of a proposal.
        required: true
        schema:
          type: string
          format: uint64
      - name: voter
        in: path
        description: voter is a proposal voter account address.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  vote:
                    type: object
                    properties:
                      proposal_id:
                        type: string
                        description: proposal is the unique ID of the proposal.
                        format: uint64
                      voter:
                        type: string
                        description: voter is the account address of the voter.
                      option:
                        type: string
                        description: option is the voter's choice on the proposal.
                        default: VOTE_OPTION_UNSPECIFIED
                        enum:
                        - VOTE_OPTION_UNSPECIFIED
                        - VOTE_OPTION_YES
                        - VOTE_OPTION_ABSTAIN
                        - VOTE_OPTION_NO
                        - VOTE_OPTION_NO_WITH_VETO
                      metadata:
                        type: string
                        description: metadata is any arbitrary metadata attached to
                          the vote.
                      submit_time:
                        type: string
                        description: submit_time is the timestamp when the vote was
                          submitted.
                        format: date-time
                    description: vote is the vote with given proposal_id and voter.
                description: QueryVoteByProposalVoterResponse is the Query/VoteByProposalVoter
                  response type.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/group/v1/votes_by_proposal/{proposal_id}:
    get:
      tags:
      - Query
      summary: VotesByProposal queries a vote by proposal id.
      operationId: VotesByProposal
      parameters:
      - name: proposal_id
        in: path
        description: proposal_id is the unique ID of a proposal.
        required: true
        schema:
          type: string
          format: uint64
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  votes:
                    type: array
                    description: votes are the list of votes for given proposal_id.
                    items:
                      type: object
                      properties:
                        proposal_id:
                          type: string
                          description: proposal is the unique ID of the proposal.
                          format: uint64
                        voter:
                          type: string
                          description: voter is the account address of the voter.
                        option:
                          type: string
                          description: option is the voter's choice on the proposal.
                          default: VOTE_OPTION_UNSPECIFIED
                          enum:
                          - VOTE_OPTION_UNSPECIFIED
                          - VOTE_OPTION_YES
                          - VOTE_OPTION_ABSTAIN
                          - VOTE_OPTION_NO
                          - VOTE_OPTION_NO_WITH_VETO
                        metadata:
                          type: string
                          description: metadata is any arbitrary metadata attached
                            to the vote.
                        submit_time:
                          type: string
                          description: submit_time is the timestamp when the vote
                            was submitted.
                          format: date-time
                      description: Vote represents a vote for a proposal.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
                description: QueryVotesByProposalResponse is the Query/VotesByProposal
                  response type.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/group/v1/votes_by_voter/{voter}:
    get:
      tags:
      - Query
      summary: VotesByVoter queries a vote by voter.
      operationId: VotesByVoter
      parameters:
      - name: voter
        in: path
        description: voter is a proposal voter account address.
        required: true
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  votes:
                    type: array
                    description: votes are the list of votes by given voter.
                    items:
                      type: object
                      properties:
                        proposal_id:
                          type: string
                          description: proposal is the unique ID of the proposal.
                          format: uint64
                        voter:
                          type: string
                          description: voter is the account address of the voter.
                        option:
                          type: string
                          description: option is the voter's choice on the proposal.
                          default: VOTE_OPTION_UNSPECIFIED
                          enum:
                          - VOTE_OPTION_UNSPECIFIED
                          - VOTE_OPTION_YES
                          - VOTE_OPTION_ABSTAIN
                          - VOTE_OPTION_NO
                          - VOTE_OPTION_NO_WITH_VETO
                        metadata:
                          type: string
                          description: metadata is any arbitrary metadata attached
                            to the vote.
                        submit_time:
                          type: string
                          description: submit_time is the timestamp when the vote
                            was submitted.
                          format: date-time
                      description: Vote represents a vote for a proposal.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
                description: QueryVotesByVoterResponse is the Query/VotesByVoter response
                  type.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/mint/v1beta1/annual_provisions:
    get:
      tags:
      - Query
      summary: AnnualProvisions current minting annual provisions value.
      operationId: AnnualProvisions
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  annual_provisions:
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    description: annual_provisions is the current minting annual provisions
                      value.
                    format: byte
                description: |-
                  QueryAnnualProvisionsResponse is the response type for the
                  Query/AnnualProvisions RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
  /cosmos/mint/v1beta1/inflation:
    get:
      tags:
      - Query
      summary: Inflation returns the current minting inflation value.
      operationId: Inflation
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  inflation:
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    description: inflation is the current minting inflation value.
                    format: byte
                description: |-
                  QueryInflationResponse is the response type for the Query/Inflation RPC
                  method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
  /cosmos/mint/v1beta1/params:
    get:
      tags:
      - Query
      summary: Params returns the total set of minting parameters.
      operationId: MintParams
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  params:
                    type: object
                    properties:
                      mint_denom:
                        title: type of coin to mint
                        type: string
                      inflation_rate_change:
                        title: maximum annual change in inflation rate
                        type: string
                      inflation_max:
                        title: maximum inflation rate
                        type: string
                      inflation_min:
                        title: minimum inflation rate
                        type: string
                      goal_bonded:
                        title: goal of percent bonded atoms
                        type: string
                      blocks_per_year:
                        title: expected blocks per year
                        type: string
                        format: uint64
                    description: params defines the parameters of the module.
                description: QueryParamsResponse is the response type for the Query/Params
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
  /cosmos/params/v1beta1/params:
    get:
      tags:
      - Query
      summary: |-
        Params queries a specific parameter of a module, given its subspace and
        key.
      operationId: Params
      parameters:
      - name: subspace
        in: query
        description: subspace defines the module to query the parameter for.
        schema:
          type: string
      - name: key
        in: query
        description: key defines the key of the parameter in the subspace.
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  param:
                    type: object
                    properties:
                      subspace:
                        type: string
                      key:
                        type: string
                      value:
                        type: string
                    description: param defines the queried parameter.
                description: QueryParamsResponse is response type for the Query/Params
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
  /cosmos/params/v1beta1/subspaces:
    get:
      tags:
      - Query
      summary: Subspaces queries for all registered subspaces and all keys for a subspace.
      description: "Since: cosmos-sdk 0.46"
      operationId: Subspaces
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  subspaces:
                    type: array
                    items:
                      type: object
                      properties:
                        subspace:
                          type: string
                        keys:
                          type: array
                          items:
                            type: string
                      description: |-
                        Subspace defines a parameter subspace name and all the keys that exist for
                        the subspace.

                        Since: cosmos-sdk 0.46
                description: |-
                  QuerySubspacesResponse defines the response types for querying for all
                  registered subspaces and all keys for a subspace.

                  Since: cosmos-sdk 0.46
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
  /cosmos/slashing/v1beta1/params:
    get:
      tags:
      - Query
      summary: Params queries the parameters of slashing module
      operationId: SlashingParams
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                title: QueryParamsResponse is the response type for the Query/Params
                  RPC method
                type: object
                properties:
                  params:
                    type: object
                    properties:
                      signed_blocks_window:
                        type: string
                        format: int64
                      min_signed_per_window:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        format: byte
                      downtime_jail_duration:
                        type: string
                      slash_fraction_double_sign:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        format: byte
                      slash_fraction_downtime:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        format: byte
                    description: Params represents the parameters used for by the
                      slashing module.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
  /cosmos/slashing/v1beta1/signing_infos:
    get:
      tags:
      - Query
      summary: SigningInfos queries signing info of all validators
      operationId: SigningInfos
      parameters:
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                title: |-
                  QuerySigningInfosResponse is the response type for the Query/SigningInfos RPC
                  method
                type: object
                properties:
                  info:
                    title: info is the signing info of all validators
                    type: array
                    items:
                      type: object
                      properties:
                        address:
                          type: string
                        start_height:
                          title: Height at which validator was first a candidate OR
                            was unjailed
                          type: string
                          format: int64
                        index_offset:
                          type: string
                          description: |-
                            Index which is incremented each time the validator was a bonded
                            in a block and may have signed a precommit or not. This in conjunction with the
                            `SignedBlocksWindow` param determines the index in the `MissedBlocksBitArray`.
                          format: int64
                        jailed_until:
                          type: string
                          description: Timestamp until which the validator is jailed
                            due to liveness downtime.
                          format: date-time
                        tombstoned:
                          type: boolean
                          description: |-
                            Whether or not a validator has been tombstoned (killed out of validator set). It is set
                            once the validator commits an equivocation or for any other configured misbehiavor.
                        missed_blocks_counter:
                          type: string
                          description: |-
                            A counter kept to avoid unnecessary array reads.
                            Note that `Sum(MissedBlocksBitArray)` always equals `MissedBlocksCounter`.
                          format: int64
                      description: |-
                        ValidatorSigningInfo defines a validator's signing info for monitoring their
                        liveness activity.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: |-
                      PageResponse is to be embedded in gRPC response messages where the
                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
  /cosmos/slashing/v1beta1/signing_infos/{cons_address}:
    get:
      tags:
      - Query
      summary: SigningInfo queries the signing info of given cons address
      operationId: SigningInfo
      parameters:
      - name: cons_address
        in: path
        description: cons_address is the address to query signing info of
        required: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                title: |-
                  QuerySigningInfoResponse is the response type for the Query/SigningInfo RPC
                  method
                type: object
                properties:
                  val_signing_info:
                    title: val_signing_info is the signing info of requested val cons
                      address
                    type: object
                    properties:
                      address:
                        type: string
                      start_height:
                        title: Height at which validator was first a candidate OR
                          was unjailed
                        type: string
                        format: int64
                      index_offset:
                        type: string
                        description: |-
                          Index which is incremented each time the validator was a bonded
                          in a block and may have signed a precommit or not. This in conjunction with the
                          `SignedBlocksWindow` param determines the index in the `MissedBlocksBitArray`.
                        format: int64
                      jailed_until:
                        type: string
                        description: Timestamp until which the validator is jailed
                          due to liveness downtime.
                        format: date-time
                      tombstoned:
                        type: boolean
                        description: |-
                          Whether or not a validator has been tombstoned (killed out of validator set). It is set
                          once the validator commits an equivocation or for any other configured misbehiavor.
                      missed_blocks_counter:
                        type: string
                        description: |-
                          A counter kept to avoid unnecessary array reads.
                          Note that `Sum(MissedBlocksBitArray)` always equals `MissedBlocksCounter`.
                        format: int64
                    description: |-
                      ValidatorSigningInfo defines a validator's signing info for monitoring their
                      liveness activity.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
  /cosmos/staking/v1beta1/delegations/{delegator_addr}:
    get:
      tags:
      - Query
      summary: DelegatorDelegations queries all delegations of a given delegator address.
      description: |-
        When called from another module, this query might consume a high amount of
        gas if the pagination field is incorrectly set.
      operationId: DelegatorDelegations
      parameters:
      - name: delegator_addr
        in: path
        description: delegator_addr defines the delegator address to query for.
        required: true
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  delegation_responses:
                    type: array
                    description: delegation_responses defines all the delegations'
                      info of a delegator.
                    items:
                      type: object
                      properties:
                        delegation:
                          type: object
                          properties:
                            delegator_address:
                              type: string
                              description: delegator_address is the bech32-encoded
                                address of the delegator.
                            validator_address:
                              type: string
                              description: validator_address is the bech32-encoded
                                address of the validator.
                            shares:
                              type: string
                              description: shares define the delegation shares received.
                          description: |-
                            Delegation represents the bond with tokens held by an account. It is
                            owned by one delegator, and is associated with the voting power of one
                            validator.
                        balance:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: |-
                            Coin defines a token with a denomination and an amount.

                            NOTE: The amount field is an Int which implements the custom method
                            signatures required by gogoproto.
                      description: |-
                        DelegationResponse is equivalent to Delegation except that it contains a
                        balance in addition to shares which is more suitable for client responses.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
                description: |-
                  QueryDelegatorDelegationsResponse is response type for the
                  Query/DelegatorDelegations RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/staking/v1beta1/delegators/{delegator_addr}/redelegations:
    get:
      tags:
      - Query
      summary: Redelegations queries redelegations of given address.
      description: |-
        When called from another module, this query might consume a high amount of
        gas if the pagination field is incorrectly set.
      operationId: Redelegations
      parameters:
      - name: delegator_addr
        in: path
        description: delegator_addr defines the delegator address to query for.
        required: true
        schema:
          type: string
      - name: src_validator_addr
        in: query
        description: src_validator_addr defines the validator address to redelegate
          from.
        schema:
          type: string
      - name: dst_validator_addr
        in: query
        description: dst_validator_addr defines the validator address to redelegate
          to.
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  redelegation_responses:
                    type: array
                    items:
                      type: object
                      properties:
                        redelegation:
                          type: object
                          properties:
                            delegator_address:
                              type: string
                              description: delegator_address is the bech32-encoded
                                address of the delegator.
                            validator_src_address:
                              type: string
                              description: validator_src_address is the validator
                                redelegation source operator address.
                            validator_dst_address:
                              type: string
                              description: validator_dst_address is the validator
                                redelegation destination operator address.
                            entries:
                              type: array
                              description: entries are the redelegation entries.
                              items:
                                type: object
                                properties:
                                  creation_height:
                                    type: string
                                    description: creation_height  defines the height
                                      which the redelegation took place.
                                    format: int64
                                  completion_time:
                                    type: string
                                    description: completion_time defines the unix
                                      time for redelegation completion.
                                    format: date-time
                                  initial_balance:
                                    type: string
                                    description: initial_balance defines the initial
                                      balance when redelegation started.
                                  shares_dst:
                                    type: string
                                    description: shares_dst is the amount of destination-validator
                                      shares created by redelegation.
                                  unbonding_id:
                                    title: Incrementing id that uniquely identifies
                                      this entry
                                    type: string
                                    format: uint64
                                  unbonding_on_hold_ref_count:
                                    title: Strictly positive if this entry's unbonding
                                      has been stopped by external modules
                                    type: string
                                    format: int64
                                description: RedelegationEntry defines a redelegation
                                  object with relevant metadata.
                          description: |-
                            Redelegation contains the list of a particular delegator's redelegating bonds
                            from a particular source validator to a particular destination validator.
                        entries:
                          type: array
                          items:
                            type: object
                            properties:
                              redelegation_entry:
                                type: object
                                properties:
                                  creation_height:
                                    type: string
                                    description: creation_height  defines the height
                                      which the redelegation took place.
                                    format: int64
                                  completion_time:
                                    type: string
                                    description: completion_time defines the unix
                                      time for redelegation completion.
                                    format: date-time
                                  initial_balance:
                                    type: string
                                    description: initial_balance defines the initial
                                      balance when redelegation started.
                                  shares_dst:
                                    type: string
                                    description: shares_dst is the amount of destination-validator
                                      shares created by redelegation.
                                  unbonding_id:
                                    title: Incrementing id that uniquely identifies
                                      this entry
                                    type: string
                                    format: uint64
                                  unbonding_on_hold_ref_count:
                                    title: Strictly positive if this entry's unbonding
                                      has been stopped by external modules
                                    type: string
                                    format: int64
                                description: RedelegationEntry defines a redelegation
                                  object with relevant metadata.
                              balance:
                                type: string
                            description: |-
                              RedelegationEntryResponse is equivalent to a RedelegationEntry except that it
                              contains a balance in addition to shares which is more suitable for client
                              responses.
                      description: |-
                        RedelegationResponse is equivalent to a Redelegation except that its entries
                        contain a balance in addition to shares which is more suitable for client
                        responses.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
                description: |-
                  QueryRedelegationsResponse is response type for the Query/Redelegations RPC
                  method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/staking/v1beta1/delegators/{delegator_addr}/unbonding_delegations:
    get:
      tags:
      - Query
      summary: |-
        DelegatorUnbondingDelegations queries all unbonding delegations of a given
        delegator address.
      description: |-
        When called from another module, this query might consume a high amount of
        gas if the pagination field is incorrectly set.
      operationId: DelegatorUnbondingDelegations
      parameters:
      - name: delegator_addr
        in: path
        description: delegator_addr defines the delegator address to query for.
        required: true
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  unbonding_responses:
                    type: array
                    items:
                      type: object
                      properties:
                        delegator_address:
                          type: string
                          description: delegator_address is the bech32-encoded address
                            of the delegator.
                        validator_address:
                          type: string
                          description: validator_address is the bech32-encoded address
                            of the validator.
                        entries:
                          type: array
                          description: entries are the unbonding delegation entries.
                          items:
                            type: object
                            properties:
                              creation_height:
                                type: string
                                description: creation_height is the height which the
                                  unbonding took place.
                                format: int64
                              completion_time:
                                type: string
                                description: completion_time is the unix time for
                                  unbonding completion.
                                format: date-time
                              initial_balance:
                                type: string
                                description: initial_balance defines the tokens initially
                                  scheduled to receive at completion.
                              balance:
                                type: string
                                description: balance defines the tokens to receive
                                  at completion.
                              unbonding_id:
                                title: Incrementing id that uniquely identifies this
                                  entry
                                type: string
                                format: uint64
                              unbonding_on_hold_ref_count:
                                title: Strictly positive if this entry's unbonding
                                  has been stopped by external modules
                                type: string
                                format: int64
                            description: UnbondingDelegationEntry defines an unbonding
                              object with relevant metadata.
                      description: |-
                        UnbondingDelegation stores all of a single delegator's unbonding bonds
                        for a single validator in an time-ordered list.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
                description: |-
                  QueryUnbondingDelegatorDelegationsResponse is response type for the
                  Query/UnbondingDelegatorDelegations RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/staking/v1beta1/delegators/{delegator_addr}/validators:
    get:
      tags:
      - Query
      summary: |-
        DelegatorValidators queries all validators info for given delegator
        address.
      description: |-
        When called from another module, this query might consume a high amount of
        gas if the pagination field is incorrectly set.
      operationId: StakingDelegatorValidators
      parameters:
      - name: delegator_addr
        in: path
        description: delegator_addr defines the delegator address to query for.
        required: true
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  validators:
                    type: array
                    description: validators defines the validators' info of a delegator.
                    items:
                      type: object
                      properties:
                        operator_address:
                          type: string
                          description: operator_address defines the address of the
                            validator's operator; bech encoded in JSON.
                        consensus_pubkey:
                          type: object
                          properties:
                            type_url:
                              type: string
                              description: |-
                                A URL/resource name that uniquely identifies the type of the serialized
                                protocol buffer message. This string must contain at least
                                one "/" character. The last segment of the URL's path must represent
                                the fully qualified name of the type (as in
                                `path/google.protobuf.Duration`). The name should be in a canonical form
                                (e.g., leading "." is not accepted).

                                In practice, teams usually precompile into the binary all types that they
                                expect it to use in the context of Any. However, for URLs which use the
                                scheme `http`, `https`, or no scheme, one can optionally set up a type
                                server that maps type URLs to message definitions as follows:

                                * If no scheme is provided, `https` is assumed.
                                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                  value in binary format, or produce an error.
                                * Applications are allowed to cache lookup results based on the
                                  URL, or have them precompiled into a binary to avoid any
                                  lookup. Therefore, binary compatibility needs to be preserved
                                  on changes to types. (Use versioned type names to manage
                                  breaking changes.)

                                Note: this functionality is not currently available in the official
                                protobuf release, and it is not used for type URLs beginning with
                                type.googleapis.com.

                                Schemes other than `http`, `https` (or the empty scheme) might be
                                used with implementation specific semantics.
                            value:
                              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                              type: string
                              description: Must be a valid serialized protocol buffer
                                of the above specified type.
                              format: byte
                          description: |-
                            `Any` contains an arbitrary serialized protocol buffer message along with a
                            URL that describes the type of the serialized message.

                            Protobuf library provides support to pack/unpack Any values in the form
                            of utility functions or additional generated methods of the Any type.

                            Example 1: Pack and unpack a message in C++.

                                Foo foo = ...;
                                Any any;
                                any.PackFrom(foo);
                                ...
                                if (any.UnpackTo(&foo)) {
                                  ...
                                }

                            Example 2: Pack and unpack a message in Java.

                                Foo foo = ...;
                                Any any = Any.pack(foo);
                                ...
                                if (any.is(Foo.class)) {
                                  foo = any.unpack(Foo.class);
                                }

                             Example 3: Pack and unpack a message in Python.

                                foo = Foo(...)
                                any = Any()
                                any.Pack(foo)
                                ...
                                if any.Is(Foo.DESCRIPTOR):
                                  any.Unpack(foo)
                                  ...

                             Example 4: Pack and unpack a message in Go

                                 foo := &pb.Foo{...}
                                 any, err := ptypes.MarshalAny(foo)
                                 ...
                                 foo := &pb.Foo{}
                                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                                   ...
                                 }

                            The pack methods provided by protobuf library will by default use
                            'type.googleapis.com/full.type.name' as the type URL and the unpack
                            methods only use the fully qualified type name after the last '/'
                            in the type URL, for example "foo.bar.com/x/y.z" will yield type
                            name "y.z".


                            JSON
                            ====
                            The JSON representation of an `Any` value uses the regular
                            representation of the deserialized, embedded message, with an
                            additional field `@type` which contains the type URL. Example:

                                package google.profile;
                                message Person {
                                  string first_name = 1;
                                  string last_name = 2;
                                }

                                {
                                  "@type": "type.googleapis.com/google.profile.Person",
                                  "firstName": <string>,
                                  "lastName": <string>
                                }

                            If the embedded message type is well-known and has a custom JSON
                            representation, that representation will be embedded adding a field
                            `value` which holds the custom JSON in addition to the `@type`
                            field. Example (for message [google.protobuf.Duration][]):

                                {
                                  "@type": "type.googleapis.com/google.protobuf.Duration",
                                  "value": "1.212s"
                                }
                        jailed:
                          type: boolean
                          description: jailed defined whether the validator has been
                            jailed from bonded status or not.
                        status:
                          type: string
                          description: status is the validator status (bonded/unbonding/unbonded).
                          default: BOND_STATUS_UNSPECIFIED
                          enum:
                          - BOND_STATUS_UNSPECIFIED
                          - BOND_STATUS_UNBONDED
                          - BOND_STATUS_UNBONDING
                          - BOND_STATUS_BONDED
                        tokens:
                          type: string
                          description: tokens define the delegated tokens (incl. self-delegation).
                        delegator_shares:
                          type: string
                          description: delegator_shares defines total shares issued
                            to a validator's delegators.
                        description:
                          type: object
                          properties:
                            moniker:
                              type: string
                              description: moniker defines a human-readable name for
                                the validator.
                            identity:
                              type: string
                              description: identity defines an optional identity signature
                                (ex. UPort or Keybase).
                            website:
                              type: string
                              description: website defines an optional website link.
                            security_contact:
                              type: string
                              description: security_contact defines an optional email
                                for security contact.
                            details:
                              type: string
                              description: details define other optional details.
                          description: description defines the description terms for
                            the validator.
                        unbonding_height:
                          type: string
                          description: "unbonding_height defines, if unbonding, the\
                            \ height at which this validator has begun unbonding."
                          format: int64
                        unbonding_time:
                          type: string
                          description: "unbonding_time defines, if unbonding, the\
                            \ min time for the validator to complete unbonding."
                          format: date-time
                        commission:
                          type: object
                          properties:
                            commission_rates:
                              type: object
                              properties:
                                rate:
                                  type: string
                                  description: "rate is the commission rate charged\
                                    \ to delegators, as a fraction."
                                max_rate:
                                  type: string
                                  description: "max_rate defines the maximum commission\
                                    \ rate which validator can ever charge, as a fraction."
                                max_change_rate:
                                  type: string
                                  description: "max_change_rate defines the maximum\
                                    \ daily increase of the validator commission,\
                                    \ as a fraction."
                              description: commission_rates defines the initial commission
                                rates to be used for creating a validator.
                            update_time:
                              type: string
                              description: update_time is the last time the commission
                                rate was changed.
                              format: date-time
                          description: commission defines the commission parameters.
                        min_self_delegation:
                          type: string
                          description: |-
                            min_self_delegation is the validator's self declared minimum self delegation.

                            Since: cosmos-sdk 0.46
                        unbonding_on_hold_ref_count:
                          title: strictly positive if this validator's unbonding has
                            been stopped by external modules
                          type: string
                          format: int64
                        unbonding_ids:
                          title: "list of unbonding ids, each uniquely identifing\
                            \ an unbonding of this validator"
                          type: array
                          items:
                            type: string
                            format: uint64
                      description: |-
                        Validator defines a validator, together with the total amount of the
                        Validator's bond shares and their exchange rate to coins. Slashing results in
                        a decrease in the exchange rate, allowing correct calculation of future
                        undelegations without iterating over delegators. When coins are delegated to
                        this validator, the validator is credited with a delegation whose number of
                        bond shares is based on the amount of coins delegated divided by the current
                        exchange rate. Voting power can be calculated as total bonded shares
                        multiplied by exchange rate.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
                description: |-
                  QueryDelegatorValidatorsResponse is response type for the
                  Query/DelegatorValidators RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/staking/v1beta1/delegators/{delegator_addr}/validators/{validator_addr}:
    get:
      tags:
      - Query
      summary: |-
        DelegatorValidator queries validator info for given delegator validator
        pair.
      operationId: DelegatorValidator
      parameters:
      - name: delegator_addr
        in: path
        description: delegator_addr defines the delegator address to query for.
        required: true
        schema:
          type: string
      - name: validator_addr
        in: path
        description: validator_addr defines the validator address to query for.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  validator:
                    type: object
                    properties:
                      operator_address:
                        type: string
                        description: operator_address defines the address of the validator's
                          operator; bech encoded in JSON.
                      consensus_pubkey:
                        type: object
                        properties:
                          type_url:
                            type: string
                            description: |-
                              A URL/resource name that uniquely identifies the type of the serialized
                              protocol buffer message. This string must contain at least
                              one "/" character. The last segment of the URL's path must represent
                              the fully qualified name of the type (as in
                              `path/google.protobuf.Duration`). The name should be in a canonical form
                              (e.g., leading "." is not accepted).

                              In practice, teams usually precompile into the binary all types that they
                              expect it to use in the context of Any. However, for URLs which use the
                              scheme `http`, `https`, or no scheme, one can optionally set up a type
                              server that maps type URLs to message definitions as follows:

                              * If no scheme is provided, `https` is assumed.
                              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                value in binary format, or produce an error.
                              * Applications are allowed to cache lookup results based on the
                                URL, or have them precompiled into a binary to avoid any
                                lookup. Therefore, binary compatibility needs to be preserved
                                on changes to types. (Use versioned type names to manage
                                breaking changes.)

                              Note: this functionality is not currently available in the official
                              protobuf release, and it is not used for type URLs beginning with
                              type.googleapis.com.

                              Schemes other than `http`, `https` (or the empty scheme) might be
                              used with implementation specific semantics.
                          value:
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            description: Must be a valid serialized protocol buffer
                              of the above specified type.
                            format: byte
                        description: |-
                          `Any` contains an arbitrary serialized protocol buffer message along with a
                          URL that describes the type of the serialized message.

                          Protobuf library provides support to pack/unpack Any values in the form
                          of utility functions or additional generated methods of the Any type.

                          Example 1: Pack and unpack a message in C++.

                              Foo foo = ...;
                              Any any;
                              any.PackFrom(foo);
                              ...
                              if (any.UnpackTo(&foo)) {
                                ...
                              }

                          Example 2: Pack and unpack a message in Java.

                              Foo foo = ...;
                              Any any = Any.pack(foo);
                              ...
                              if (any.is(Foo.class)) {
                                foo = any.unpack(Foo.class);
                              }

                           Example 3: Pack and unpack a message in Python.

                              foo = Foo(...)
                              any = Any()
                              any.Pack(foo)
                              ...
                              if any.Is(Foo.DESCRIPTOR):
                                any.Unpack(foo)
                                ...

                           Example 4: Pack and unpack a message in Go

                               foo := &pb.Foo{...}
                               any, err := ptypes.MarshalAny(foo)
                               ...
                               foo := &pb.Foo{}
                               if err := ptypes.UnmarshalAny(any, foo); err != nil {
                                 ...
                               }

                          The pack methods provided by protobuf library will by default use
                          'type.googleapis.com/full.type.name' as the type URL and the unpack
                          methods only use the fully qualified type name after the last '/'
                          in the type URL, for example "foo.bar.com/x/y.z" will yield type
                          name "y.z".


                          JSON
                          ====
                          The JSON representation of an `Any` value uses the regular
                          representation of the deserialized, embedded message, with an
                          additional field `@type` which contains the type URL. Example:

                              package google.profile;
                              message Person {
                                string first_name = 1;
                                string last_name = 2;
                              }

                              {
                                "@type": "type.googleapis.com/google.profile.Person",
                                "firstName": <string>,
                                "lastName": <string>
                              }

                          If the embedded message type is well-known and has a custom JSON
                          representation, that representation will be embedded adding a field
                          `value` which holds the custom JSON in addition to the `@type`
                          field. Example (for message [google.protobuf.Duration][]):

                              {
                                "@type": "type.googleapis.com/google.protobuf.Duration",
                                "value": "1.212s"
                              }
                      jailed:
                        type: boolean
                        description: jailed defined whether the validator has been
                          jailed from bonded status or not.
                      status:
                        type: string
                        description: status is the validator status (bonded/unbonding/unbonded).
                        default: BOND_STATUS_UNSPECIFIED
                        enum:
                        - BOND_STATUS_UNSPECIFIED
                        - BOND_STATUS_UNBONDED
                        - BOND_STATUS_UNBONDING
                        - BOND_STATUS_BONDED
                      tokens:
                        type: string
                        description: tokens define the delegated tokens (incl. self-delegation).
                      delegator_shares:
                        type: string
                        description: delegator_shares defines total shares issued
                          to a validator's delegators.
                      description:
                        type: object
                        properties:
                          moniker:
                            type: string
                            description: moniker defines a human-readable name for
                              the validator.
                          identity:
                            type: string
                            description: identity defines an optional identity signature
                              (ex. UPort or Keybase).
                          website:
                            type: string
                            description: website defines an optional website link.
                          security_contact:
                            type: string
                            description: security_contact defines an optional email
                              for security contact.
                          details:
                            type: string
                            description: details define other optional details.
                        description: description defines the description terms for
                          the validator.
                      unbonding_height:
                        type: string
                        description: "unbonding_height defines, if unbonding, the\
                          \ height at which this validator has begun unbonding."
                        format: int64
                      unbonding_time:
                        type: string
                        description: "unbonding_time defines, if unbonding, the min\
                          \ time for the validator to complete unbonding."
                        format: date-time
                      commission:
                        type: object
                        properties:
                          commission_rates:
                            type: object
                            properties:
                              rate:
                                type: string
                                description: "rate is the commission rate charged\
                                  \ to delegators, as a fraction."
                              max_rate:
                                type: string
                                description: "max_rate defines the maximum commission\
                                  \ rate which validator can ever charge, as a fraction."
                              max_change_rate:
                                type: string
                                description: "max_change_rate defines the maximum\
                                  \ daily increase of the validator commission, as\
                                  \ a fraction."
                            description: commission_rates defines the initial commission
                              rates to be used for creating a validator.
                          update_time:
                            type: string
                            description: update_time is the last time the commission
                              rate was changed.
                            format: date-time
                        description: commission defines the commission parameters.
                      min_self_delegation:
                        type: string
                        description: |-
                          min_self_delegation is the validator's self declared minimum self delegation.

                          Since: cosmos-sdk 0.46
                      unbonding_on_hold_ref_count:
                        title: strictly positive if this validator's unbonding has
                          been stopped by external modules
                        type: string
                        format: int64
                      unbonding_ids:
                        title: "list of unbonding ids, each uniquely identifing an\
                          \ unbonding of this validator"
                        type: array
                        items:
                          type: string
                          format: uint64
                    description: |-
                      Validator defines a validator, together with the total amount of the
                      Validator's bond shares and their exchange rate to coins. Slashing results in
                      a decrease in the exchange rate, allowing correct calculation of future
                      undelegations without iterating over delegators. When coins are delegated to
                      this validator, the validator is credited with a delegation whose number of
                      bond shares is based on the amount of coins delegated divided by the current
                      exchange rate. Voting power can be calculated as total bonded shares
                      multiplied by exchange rate.
                description: |-
                  QueryDelegatorValidatorResponse response type for the
                  Query/DelegatorValidator RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/staking/v1beta1/historical_info/{height}:
    get:
      tags:
      - Query
      summary: HistoricalInfo queries the historical info for given height.
      operationId: HistoricalInfo
      parameters:
      - name: height
        in: path
        description: height defines at which height to query the historical info.
        required: true
        schema:
          type: string
          format: int64
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  hist:
                    type: object
                    properties:
                      header:
                        type: object
                        properties:
                          version:
                            title: basic block info
                            type: object
                            properties:
                              block:
                                type: string
                                format: uint64
                              app:
                                type: string
                                format: uint64
                            description: |-
                              Consensus captures the consensus rules for processing a block in the blockchain,
                              including all blockchain data structures and the rules of the application's
                              state transition machine.
                          chain_id:
                            type: string
                          height:
                            type: string
                            format: int64
                          time:
                            type: string
                            format: date-time
                          last_block_id:
                            title: prev block info
                            type: object
                            properties:
                              hash:
                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                type: string
                                format: byte
                              part_set_header:
                                title: PartsetHeader
                                type: object
                                properties:
                                  total:
                                    type: integer
                                    format: int64
                                  hash:
                                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                    type: string
                                    format: byte
                          last_commit_hash:
                            title: hashes of block data
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            format: byte
                          data_hash:
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            format: byte
                          validators_hash:
                            title: hashes from the app output from the prev block
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            format: byte
                          next_validators_hash:
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            format: byte
                          consensus_hash:
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            format: byte
                          app_hash:
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            format: byte
                          last_results_hash:
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            format: byte
                          evidence_hash:
                            title: consensus info
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            format: byte
                          proposer_address:
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            format: byte
                        description: Header defines the structure of a block header.
                      valset:
                        type: array
                        items:
                          type: object
                          properties:
                            operator_address:
                              type: string
                              description: operator_address defines the address of
                                the validator's operator; bech encoded in JSON.
                            consensus_pubkey:
                              type: object
                              properties:
                                type_url:
                                  type: string
                                  description: |-
                                    A URL/resource name that uniquely identifies the type of the serialized
                                    protocol buffer message. This string must contain at least
                                    one "/" character. The last segment of the URL's path must represent
                                    the fully qualified name of the type (as in
                                    `path/google.protobuf.Duration`). The name should be in a canonical form
                                    (e.g., leading "." is not accepted).

                                    In practice, teams usually precompile into the binary all types that they
                                    expect it to use in the context of Any. However, for URLs which use the
                                    scheme `http`, `https`, or no scheme, one can optionally set up a type
                                    server that maps type URLs to message definitions as follows:

                                    * If no scheme is provided, `https` is assumed.
                                    * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                      value in binary format, or produce an error.
                                    * Applications are allowed to cache lookup results based on the
                                      URL, or have them precompiled into a binary to avoid any
                                      lookup. Therefore, binary compatibility needs to be preserved
                                      on changes to types. (Use versioned type names to manage
                                      breaking changes.)

                                    Note: this functionality is not currently available in the official
                                    protobuf release, and it is not used for type URLs beginning with
                                    type.googleapis.com.

                                    Schemes other than `http`, `https` (or the empty scheme) might be
                                    used with implementation specific semantics.
                                value:
                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                  type: string
                                  description: Must be a valid serialized protocol
                                    buffer of the above specified type.
                                  format: byte
                              description: |-
                                `Any` contains an arbitrary serialized protocol buffer message along with a
                                URL that describes the type of the serialized message.

                                Protobuf library provides support to pack/unpack Any values in the form
                                of utility functions or additional generated methods of the Any type.

                                Example 1: Pack and unpack a message in C++.

                                    Foo foo = ...;
                                    Any any;
                                    any.PackFrom(foo);
                                    ...
                                    if (any.UnpackTo(&foo)) {
                                      ...
                                    }

                                Example 2: Pack and unpack a message in Java.

                                    Foo foo = ...;
                                    Any any = Any.pack(foo);
                                    ...
                                    if (any.is(Foo.class)) {
                                      foo = any.unpack(Foo.class);
                                    }

                                 Example 3: Pack and unpack a message in Python.

                                    foo = Foo(...)
                                    any = Any()
                                    any.Pack(foo)
                                    ...
                                    if any.Is(Foo.DESCRIPTOR):
                                      any.Unpack(foo)
                                      ...

                                 Example 4: Pack and unpack a message in Go

                                     foo := &pb.Foo{...}
                                     any, err := ptypes.MarshalAny(foo)
                                     ...
                                     foo := &pb.Foo{}
                                     if err := ptypes.UnmarshalAny(any, foo); err != nil {
                                       ...
                                     }

                                The pack methods provided by protobuf library will by default use
                                'type.googleapis.com/full.type.name' as the type URL and the unpack
                                methods only use the fully qualified type name after the last '/'
                                in the type URL, for example "foo.bar.com/x/y.z" will yield type
                                name "y.z".


                                JSON
                                ====
                                The JSON representation of an `Any` value uses the regular
                                representation of the deserialized, embedded message, with an
                                additional field `@type` which contains the type URL. Example:

                                    package google.profile;
                                    message Person {
                                      string first_name = 1;
                                      string last_name = 2;
                                    }

                                    {
                                      "@type": "type.googleapis.com/google.profile.Person",
                                      "firstName": <string>,
                                      "lastName": <string>
                                    }

                                If the embedded message type is well-known and has a custom JSON
                                representation, that representation will be embedded adding a field
                                `value` which holds the custom JSON in addition to the `@type`
                                field. Example (for message [google.protobuf.Duration][]):

                                    {
                                      "@type": "type.googleapis.com/google.protobuf.Duration",
                                      "value": "1.212s"
                                    }
                            jailed:
                              type: boolean
                              description: jailed defined whether the validator has
                                been jailed from bonded status or not.
                            status:
                              type: string
                              description: status is the validator status (bonded/unbonding/unbonded).
                              default: BOND_STATUS_UNSPECIFIED
                              enum:
                              - BOND_STATUS_UNSPECIFIED
                              - BOND_STATUS_UNBONDED
                              - BOND_STATUS_UNBONDING
                              - BOND_STATUS_BONDED
                            tokens:
                              type: string
                              description: tokens define the delegated tokens (incl.
                                self-delegation).
                            delegator_shares:
                              type: string
                              description: delegator_shares defines total shares issued
                                to a validator's delegators.
                            description:
                              type: object
                              properties:
                                moniker:
                                  type: string
                                  description: moniker defines a human-readable name
                                    for the validator.
                                identity:
                                  type: string
                                  description: identity defines an optional identity
                                    signature (ex. UPort or Keybase).
                                website:
                                  type: string
                                  description: website defines an optional website
                                    link.
                                security_contact:
                                  type: string
                                  description: security_contact defines an optional
                                    email for security contact.
                                details:
                                  type: string
                                  description: details define other optional details.
                              description: description defines the description terms
                                for the validator.
                            unbonding_height:
                              type: string
                              description: "unbonding_height defines, if unbonding,\
                                \ the height at which this validator has begun unbonding."
                              format: int64
                            unbonding_time:
                              type: string
                              description: "unbonding_time defines, if unbonding,\
                                \ the min time for the validator to complete unbonding."
                              format: date-time
                            commission:
                              type: object
                              properties:
                                commission_rates:
                                  type: object
                                  properties:
                                    rate:
                                      type: string
                                      description: "rate is the commission rate charged\
                                        \ to delegators, as a fraction."
                                    max_rate:
                                      type: string
                                      description: "max_rate defines the maximum commission\
                                        \ rate which validator can ever charge, as\
                                        \ a fraction."
                                    max_change_rate:
                                      type: string
                                      description: "max_change_rate defines the maximum\
                                        \ daily increase of the validator commission,\
                                        \ as a fraction."
                                  description: commission_rates defines the initial
                                    commission rates to be used for creating a validator.
                                update_time:
                                  type: string
                                  description: update_time is the last time the commission
                                    rate was changed.
                                  format: date-time
                              description: commission defines the commission parameters.
                            min_self_delegation:
                              type: string
                              description: |-
                                min_self_delegation is the validator's self declared minimum self delegation.

                                Since: cosmos-sdk 0.46
                            unbonding_on_hold_ref_count:
                              title: strictly positive if this validator's unbonding
                                has been stopped by external modules
                              type: string
                              format: int64
                            unbonding_ids:
                              title: "list of unbonding ids, each uniquely identifing\
                                \ an unbonding of this validator"
                              type: array
                              items:
                                type: string
                                format: uint64
                          description: |-
                            Validator defines a validator, together with the total amount of the
                            Validator's bond shares and their exchange rate to coins. Slashing results in
                            a decrease in the exchange rate, allowing correct calculation of future
                            undelegations without iterating over delegators. When coins are delegated to
                            this validator, the validator is credited with a delegation whose number of
                            bond shares is based on the amount of coins delegated divided by the current
                            exchange rate. Voting power can be calculated as total bonded shares
                            multiplied by exchange rate.
                    description: hist defines the historical info at the given height.
                description: |-
                  QueryHistoricalInfoResponse is response type for the Query/HistoricalInfo RPC
                  method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/staking/v1beta1/params:
    get:
      tags:
      - Query
      summary: Parameters queries the staking parameters.
      operationId: StakingParams
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  params:
                    type: object
                    properties:
                      unbonding_time:
                        type: string
                        description: unbonding_time is the time duration of unbonding.
                      max_validators:
                        type: integer
                        description: max_validators is the maximum number of validators.
                        format: int64
                      max_entries:
                        type: integer
                        description: max_entries is the max entries for either unbonding
                          delegation or redelegation (per pair/trio).
                        format: int64
                      historical_entries:
                        type: integer
                        description: historical_entries is the number of historical
                          entries to persist.
                        format: int64
                      bond_denom:
                        type: string
                        description: bond_denom defines the bondable coin denomination.
                      min_commission_rate:
                        title: min_commission_rate is the chain-wide minimum commission
                          rate that a validator can charge their delegators
                        type: string
                    description: params holds all the parameters of this module.
                description: QueryParamsResponse is response type for the Query/Params
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/staking/v1beta1/pool:
    get:
      tags:
      - Query
      summary: Pool queries the pool info.
      operationId: Pool
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  pool:
                    type: object
                    properties:
                      not_bonded_tokens:
                        type: string
                      bonded_tokens:
                        type: string
                    description: pool defines the pool info.
                description: QueryPoolResponse is response type for the Query/Pool
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/staking/v1beta1/validators:
    get:
      tags:
      - Query
      summary: Validators queries all validators that match the given status.
      description: |-
        When called from another module, this query might consume a high amount of
        gas if the pagination field is incorrectly set.
      operationId: Validators
      parameters:
      - name: status
        in: query
        description: status enables to query for validators matching a given status.
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                title: QueryValidatorsResponse is response type for the Query/Validators
                  RPC method
                type: object
                properties:
                  validators:
                    type: array
                    description: validators contains all the queried validators.
                    items:
                      type: object
                      properties:
                        operator_address:
                          type: string
                          description: operator_address defines the address of the
                            validator's operator; bech encoded in JSON.
                        consensus_pubkey:
                          type: object
                          properties:
                            type_url:
                              type: string
                              description: |-
                                A URL/resource name that uniquely identifies the type of the serialized
                                protocol buffer message. This string must contain at least
                                one "/" character. The last segment of the URL's path must represent
                                the fully qualified name of the type (as in
                                `path/google.protobuf.Duration`). The name should be in a canonical form
                                (e.g., leading "." is not accepted).

                                In practice, teams usually precompile into the binary all types that they
                                expect it to use in the context of Any. However, for URLs which use the
                                scheme `http`, `https`, or no scheme, one can optionally set up a type
                                server that maps type URLs to message definitions as follows:

                                * If no scheme is provided, `https` is assumed.
                                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                  value in binary format, or produce an error.
                                * Applications are allowed to cache lookup results based on the
                                  URL, or have them precompiled into a binary to avoid any
                                  lookup. Therefore, binary compatibility needs to be preserved
                                  on changes to types. (Use versioned type names to manage
                                  breaking changes.)

                                Note: this functionality is not currently available in the official
                                protobuf release, and it is not used for type URLs beginning with
                                type.googleapis.com.

                                Schemes other than `http`, `https` (or the empty scheme) might be
                                used with implementation specific semantics.
                            value:
                              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                              type: string
                              description: Must be a valid serialized protocol buffer
                                of the above specified type.
                              format: byte
                          description: |-
                            `Any` contains an arbitrary serialized protocol buffer message along with a
                            URL that describes the type of the serialized message.

                            Protobuf library provides support to pack/unpack Any values in the form
                            of utility functions or additional generated methods of the Any type.

                            Example 1: Pack and unpack a message in C++.

                                Foo foo = ...;
                                Any any;
                                any.PackFrom(foo);
                                ...
                                if (any.UnpackTo(&foo)) {
                                  ...
                                }

                            Example 2: Pack and unpack a message in Java.

                                Foo foo = ...;
                                Any any = Any.pack(foo);
                                ...
                                if (any.is(Foo.class)) {
                                  foo = any.unpack(Foo.class);
                                }

                             Example 3: Pack and unpack a message in Python.

                                foo = Foo(...)
                                any = Any()
                                any.Pack(foo)
                                ...
                                if any.Is(Foo.DESCRIPTOR):
                                  any.Unpack(foo)
                                  ...

                             Example 4: Pack and unpack a message in Go

                                 foo := &pb.Foo{...}
                                 any, err := ptypes.MarshalAny(foo)
                                 ...
                                 foo := &pb.Foo{}
                                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                                   ...
                                 }

                            The pack methods provided by protobuf library will by default use
                            'type.googleapis.com/full.type.name' as the type URL and the unpack
                            methods only use the fully qualified type name after the last '/'
                            in the type URL, for example "foo.bar.com/x/y.z" will yield type
                            name "y.z".


                            JSON
                            ====
                            The JSON representation of an `Any` value uses the regular
                            representation of the deserialized, embedded message, with an
                            additional field `@type` which contains the type URL. Example:

                                package google.profile;
                                message Person {
                                  string first_name = 1;
                                  string last_name = 2;
                                }

                                {
                                  "@type": "type.googleapis.com/google.profile.Person",
                                  "firstName": <string>,
                                  "lastName": <string>
                                }

                            If the embedded message type is well-known and has a custom JSON
                            representation, that representation will be embedded adding a field
                            `value` which holds the custom JSON in addition to the `@type`
                            field. Example (for message [google.protobuf.Duration][]):

                                {
                                  "@type": "type.googleapis.com/google.protobuf.Duration",
                                  "value": "1.212s"
                                }
                        jailed:
                          type: boolean
                          description: jailed defined whether the validator has been
                            jailed from bonded status or not.
                        status:
                          type: string
                          description: status is the validator status (bonded/unbonding/unbonded).
                          default: BOND_STATUS_UNSPECIFIED
                          enum:
                          - BOND_STATUS_UNSPECIFIED
                          - BOND_STATUS_UNBONDED
                          - BOND_STATUS_UNBONDING
                          - BOND_STATUS_BONDED
                        tokens:
                          type: string
                          description: tokens define the delegated tokens (incl. self-delegation).
                        delegator_shares:
                          type: string
                          description: delegator_shares defines total shares issued
                            to a validator's delegators.
                        description:
                          type: object
                          properties:
                            moniker:
                              type: string
                              description: moniker defines a human-readable name for
                                the validator.
                            identity:
                              type: string
                              description: identity defines an optional identity signature
                                (ex. UPort or Keybase).
                            website:
                              type: string
                              description: website defines an optional website link.
                            security_contact:
                              type: string
                              description: security_contact defines an optional email
                                for security contact.
                            details:
                              type: string
                              description: details define other optional details.
                          description: description defines the description terms for
                            the validator.
                        unbonding_height:
                          type: string
                          description: "unbonding_height defines, if unbonding, the\
                            \ height at which this validator has begun unbonding."
                          format: int64
                        unbonding_time:
                          type: string
                          description: "unbonding_time defines, if unbonding, the\
                            \ min time for the validator to complete unbonding."
                          format: date-time
                        commission:
                          type: object
                          properties:
                            commission_rates:
                              type: object
                              properties:
                                rate:
                                  type: string
                                  description: "rate is the commission rate charged\
                                    \ to delegators, as a fraction."
                                max_rate:
                                  type: string
                                  description: "max_rate defines the maximum commission\
                                    \ rate which validator can ever charge, as a fraction."
                                max_change_rate:
                                  type: string
                                  description: "max_change_rate defines the maximum\
                                    \ daily increase of the validator commission,\
                                    \ as a fraction."
                              description: commission_rates defines the initial commission
                                rates to be used for creating a validator.
                            update_time:
                              type: string
                              description: update_time is the last time the commission
                                rate was changed.
                              format: date-time
                          description: commission defines the commission parameters.
                        min_self_delegation:
                          type: string
                          description: |-
                            min_self_delegation is the validator's self declared minimum self delegation.

                            Since: cosmos-sdk 0.46
                        unbonding_on_hold_ref_count:
                          title: strictly positive if this validator's unbonding has
                            been stopped by external modules
                          type: string
                          format: int64
                        unbonding_ids:
                          title: "list of unbonding ids, each uniquely identifing\
                            \ an unbonding of this validator"
                          type: array
                          items:
                            type: string
                            format: uint64
                      description: |-
                        Validator defines a validator, together with the total amount of the
                        Validator's bond shares and their exchange rate to coins. Slashing results in
                        a decrease in the exchange rate, allowing correct calculation of future
                        undelegations without iterating over delegators. When coins are delegated to
                        this validator, the validator is credited with a delegation whose number of
                        bond shares is based on the amount of coins delegated divided by the current
                        exchange rate. Voting power can be calculated as total bonded shares
                        multiplied by exchange rate.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/staking/v1beta1/validators/{validator_addr}:
    get:
      tags:
      - Query
      summary: Validator queries validator info for given validator address.
      operationId: Validator
      parameters:
      - name: validator_addr
        in: path
        description: validator_addr defines the validator address to query for.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                title: QueryValidatorResponse is response type for the Query/Validator
                  RPC method
                type: object
                properties:
                  validator:
                    type: object
                    properties:
                      operator_address:
                        type: string
                        description: operator_address defines the address of the validator's
                          operator; bech encoded in JSON.
                      consensus_pubkey:
                        type: object
                        properties:
                          type_url:
                            type: string
                            description: |-
                              A URL/resource name that uniquely identifies the type of the serialized
                              protocol buffer message. This string must contain at least
                              one "/" character. The last segment of the URL's path must represent
                              the fully qualified name of the type (as in
                              `path/google.protobuf.Duration`). The name should be in a canonical form
                              (e.g., leading "." is not accepted).

                              In practice, teams usually precompile into the binary all types that they
                              expect it to use in the context of Any. However, for URLs which use the
                              scheme `http`, `https`, or no scheme, one can optionally set up a type
                              server that maps type URLs to message definitions as follows:

                              * If no scheme is provided, `https` is assumed.
                              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                value in binary format, or produce an error.
                              * Applications are allowed to cache lookup results based on the
                                URL, or have them precompiled into a binary to avoid any
                                lookup. Therefore, binary compatibility needs to be preserved
                                on changes to types. (Use versioned type names to manage
                                breaking changes.)

                              Note: this functionality is not currently available in the official
                              protobuf release, and it is not used for type URLs beginning with
                              type.googleapis.com.

                              Schemes other than `http`, `https` (or the empty scheme) might be
                              used with implementation specific semantics.
                          value:
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            description: Must be a valid serialized protocol buffer
                              of the above specified type.
                            format: byte
                        description: |-
                          `Any` contains an arbitrary serialized protocol buffer message along with a
                          URL that describes the type of the serialized message.

                          Protobuf library provides support to pack/unpack Any values in the form
                          of utility functions or additional generated methods of the Any type.

                          Example 1: Pack and unpack a message in C++.

                              Foo foo = ...;
                              Any any;
                              any.PackFrom(foo);
                              ...
                              if (any.UnpackTo(&foo)) {
                                ...
                              }

                          Example 2: Pack and unpack a message in Java.

                              Foo foo = ...;
                              Any any = Any.pack(foo);
                              ...
                              if (any.is(Foo.class)) {
                                foo = any.unpack(Foo.class);
                              }

                           Example 3: Pack and unpack a message in Python.

                              foo = Foo(...)
                              any = Any()
                              any.Pack(foo)
                              ...
                              if any.Is(Foo.DESCRIPTOR):
                                any.Unpack(foo)
                                ...

                           Example 4: Pack and unpack a message in Go

                               foo := &pb.Foo{...}
                               any, err := ptypes.MarshalAny(foo)
                               ...
                               foo := &pb.Foo{}
                               if err := ptypes.UnmarshalAny(any, foo); err != nil {
                                 ...
                               }

                          The pack methods provided by protobuf library will by default use
                          'type.googleapis.com/full.type.name' as the type URL and the unpack
                          methods only use the fully qualified type name after the last '/'
                          in the type URL, for example "foo.bar.com/x/y.z" will yield type
                          name "y.z".


                          JSON
                          ====
                          The JSON representation of an `Any` value uses the regular
                          representation of the deserialized, embedded message, with an
                          additional field `@type` which contains the type URL. Example:

                              package google.profile;
                              message Person {
                                string first_name = 1;
                                string last_name = 2;
                              }

                              {
                                "@type": "type.googleapis.com/google.profile.Person",
                                "firstName": <string>,
                                "lastName": <string>
                              }

                          If the embedded message type is well-known and has a custom JSON
                          representation, that representation will be embedded adding a field
                          `value` which holds the custom JSON in addition to the `@type`
                          field. Example (for message [google.protobuf.Duration][]):

                              {
                                "@type": "type.googleapis.com/google.protobuf.Duration",
                                "value": "1.212s"
                              }
                      jailed:
                        type: boolean
                        description: jailed defined whether the validator has been
                          jailed from bonded status or not.
                      status:
                        type: string
                        description: status is the validator status (bonded/unbonding/unbonded).
                        default: BOND_STATUS_UNSPECIFIED
                        enum:
                        - BOND_STATUS_UNSPECIFIED
                        - BOND_STATUS_UNBONDED
                        - BOND_STATUS_UNBONDING
                        - BOND_STATUS_BONDED
                      tokens:
                        type: string
                        description: tokens define the delegated tokens (incl. self-delegation).
                      delegator_shares:
                        type: string
                        description: delegator_shares defines total shares issued
                          to a validator's delegators.
                      description:
                        type: object
                        properties:
                          moniker:
                            type: string
                            description: moniker defines a human-readable name for
                              the validator.
                          identity:
                            type: string
                            description: identity defines an optional identity signature
                              (ex. UPort or Keybase).
                          website:
                            type: string
                            description: website defines an optional website link.
                          security_contact:
                            type: string
                            description: security_contact defines an optional email
                              for security contact.
                          details:
                            type: string
                            description: details define other optional details.
                        description: description defines the description terms for
                          the validator.
                      unbonding_height:
                        type: string
                        description: "unbonding_height defines, if unbonding, the\
                          \ height at which this validator has begun unbonding."
                        format: int64
                      unbonding_time:
                        type: string
                        description: "unbonding_time defines, if unbonding, the min\
                          \ time for the validator to complete unbonding."
                        format: date-time
                      commission:
                        type: object
                        properties:
                          commission_rates:
                            type: object
                            properties:
                              rate:
                                type: string
                                description: "rate is the commission rate charged\
                                  \ to delegators, as a fraction."
                              max_rate:
                                type: string
                                description: "max_rate defines the maximum commission\
                                  \ rate which validator can ever charge, as a fraction."
                              max_change_rate:
                                type: string
                                description: "max_change_rate defines the maximum\
                                  \ daily increase of the validator commission, as\
                                  \ a fraction."
                            description: commission_rates defines the initial commission
                              rates to be used for creating a validator.
                          update_time:
                            type: string
                            description: update_time is the last time the commission
                              rate was changed.
                            format: date-time
                        description: commission defines the commission parameters.
                      min_self_delegation:
                        type: string
                        description: |-
                          min_self_delegation is the validator's self declared minimum self delegation.

                          Since: cosmos-sdk 0.46
                      unbonding_on_hold_ref_count:
                        title: strictly positive if this validator's unbonding has
                          been stopped by external modules
                        type: string
                        format: int64
                      unbonding_ids:
                        title: "list of unbonding ids, each uniquely identifing an\
                          \ unbonding of this validator"
                        type: array
                        items:
                          type: string
                          format: uint64
                    description: |-
                      Validator defines a validator, together with the total amount of the
                      Validator's bond shares and their exchange rate to coins. Slashing results in
                      a decrease in the exchange rate, allowing correct calculation of future
                      undelegations without iterating over delegators. When coins are delegated to
                      this validator, the validator is credited with a delegation whose number of
                      bond shares is based on the amount of coins delegated divided by the current
                      exchange rate. Voting power can be calculated as total bonded shares
                      multiplied by exchange rate.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/staking/v1beta1/validators/{validator_addr}/delegations:
    get:
      tags:
      - Query
      summary: ValidatorDelegations queries delegate info for given validator.
      description: |-
        When called from another module, this query might consume a high amount of
        gas if the pagination field is incorrectly set.
      operationId: ValidatorDelegations
      parameters:
      - name: validator_addr
        in: path
        description: validator_addr defines the validator address to query for.
        required: true
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                title: |-
                  QueryValidatorDelegationsResponse is response type for the
                  Query/ValidatorDelegations RPC method
                type: object
                properties:
                  delegation_responses:
                    type: array
                    items:
                      type: object
                      properties:
                        delegation:
                          type: object
                          properties:
                            delegator_address:
                              type: string
                              description: delegator_address is the bech32-encoded
                                address of the delegator.
                            validator_address:
                              type: string
                              description: validator_address is the bech32-encoded
                                address of the validator.
                            shares:
                              type: string
                              description: shares define the delegation shares received.
                          description: |-
                            Delegation represents the bond with tokens held by an account. It is
                            owned by one delegator, and is associated with the voting power of one
                            validator.
                        balance:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: |-
                            Coin defines a token with a denomination and an amount.

                            NOTE: The amount field is an Int which implements the custom method
                            signatures required by gogoproto.
                      description: |-
                        DelegationResponse is equivalent to Delegation except that it contains a
                        balance in addition to shares which is more suitable for client responses.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/staking/v1beta1/validators/{validator_addr}/delegations/{delegator_addr}:
    get:
      tags:
      - Query
      summary: Delegation queries delegate info for given validator delegator pair.
      operationId: Delegation
      parameters:
      - name: validator_addr
        in: path
        description: validator_addr defines the validator address to query for.
        required: true
        schema:
          type: string
      - name: delegator_addr
        in: path
        description: delegator_addr defines the delegator address to query for.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  delegation_response:
                    type: object
                    properties:
                      delegation:
                        type: object
                        properties:
                          delegator_address:
                            type: string
                            description: delegator_address is the bech32-encoded address
                              of the delegator.
                          validator_address:
                            type: string
                            description: validator_address is the bech32-encoded address
                              of the validator.
                          shares:
                            type: string
                            description: shares define the delegation shares received.
                        description: |-
                          Delegation represents the bond with tokens held by an account. It is
                          owned by one delegator, and is associated with the voting power of one
                          validator.
                      balance:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: |-
                          Coin defines a token with a denomination and an amount.

                          NOTE: The amount field is an Int which implements the custom method
                          signatures required by gogoproto.
                    description: |-
                      DelegationResponse is equivalent to Delegation except that it contains a
                      balance in addition to shares which is more suitable for client responses.
                description: QueryDelegationResponse is response type for the Query/Delegation
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/staking/v1beta1/validators/{validator_addr}/delegations/{delegator_addr}/unbonding_delegation:
    get:
      tags:
      - Query
      summary: |-
        UnbondingDelegation queries unbonding info for given validator delegator
        pair.
      operationId: UnbondingDelegation
      parameters:
      - name: validator_addr
        in: path
        description: validator_addr defines the validator address to query for.
        required: true
        schema:
          type: string
      - name: delegator_addr
        in: path
        description: delegator_addr defines the delegator address to query for.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  unbond:
                    type: object
                    properties:
                      delegator_address:
                        type: string
                        description: delegator_address is the bech32-encoded address
                          of the delegator.
                      validator_address:
                        type: string
                        description: validator_address is the bech32-encoded address
                          of the validator.
                      entries:
                        type: array
                        description: entries are the unbonding delegation entries.
                        items:
                          type: object
                          properties:
                            creation_height:
                              type: string
                              description: creation_height is the height which the
                                unbonding took place.
                              format: int64
                            completion_time:
                              type: string
                              description: completion_time is the unix time for unbonding
                                completion.
                              format: date-time
                            initial_balance:
                              type: string
                              description: initial_balance defines the tokens initially
                                scheduled to receive at completion.
                            balance:
                              type: string
                              description: balance defines the tokens to receive at
                                completion.
                            unbonding_id:
                              title: Incrementing id that uniquely identifies this
                                entry
                              type: string
                              format: uint64
                            unbonding_on_hold_ref_count:
                              title: Strictly positive if this entry's unbonding has
                                been stopped by external modules
                              type: string
                              format: int64
                          description: UnbondingDelegationEntry defines an unbonding
                            object with relevant metadata.
                    description: |-
                      UnbondingDelegation stores all of a single delegator's unbonding bonds
                      for a single validator in an time-ordered list.
                description: |-
                  QueryDelegationResponse is response type for the Query/UnbondingDelegation
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/staking/v1beta1/validators/{validator_addr}/unbonding_delegations:
    get:
      tags:
      - Query
      summary: ValidatorUnbondingDelegations queries unbonding delegations of a validator.
      description: |-
        When called from another module, this query might consume a high amount of
        gas if the pagination field is incorrectly set.
      operationId: ValidatorUnbondingDelegations
      parameters:
      - name: validator_addr
        in: path
        description: validator_addr defines the validator address to query for.
        required: true
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  unbonding_responses:
                    type: array
                    items:
                      type: object
                      properties:
                        delegator_address:
                          type: string
                          description: delegator_address is the bech32-encoded address
                            of the delegator.
                        validator_address:
                          type: string
                          description: validator_address is the bech32-encoded address
                            of the validator.
                        entries:
                          type: array
                          description: entries are the unbonding delegation entries.
                          items:
                            type: object
                            properties:
                              creation_height:
                                type: string
                                description: creation_height is the height which the
                                  unbonding took place.
                                format: int64
                              completion_time:
                                type: string
                                description: completion_time is the unix time for
                                  unbonding completion.
                                format: date-time
                              initial_balance:
                                type: string
                                description: initial_balance defines the tokens initially
                                  scheduled to receive at completion.
                              balance:
                                type: string
                                description: balance defines the tokens to receive
                                  at completion.
                              unbonding_id:
                                title: Incrementing id that uniquely identifies this
                                  entry
                                type: string
                                format: uint64
                              unbonding_on_hold_ref_count:
                                title: Strictly positive if this entry's unbonding
                                  has been stopped by external modules
                                type: string
                                format: int64
                            description: UnbondingDelegationEntry defines an unbonding
                              object with relevant metadata.
                      description: |-
                        UnbondingDelegation stores all of a single delegator's unbonding bonds
                        for a single validator in an time-ordered list.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
                description: |-
                  QueryValidatorUnbondingDelegationsResponse is response type for the
                  Query/ValidatorUnbondingDelegations RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/tx/v1beta1/decode:
    post:
      tags:
      - Service
      summary: TxDecode decodes the transaction.
      description: "Since: cosmos-sdk 0.47"
      operationId: TxDecode
      requestBody:
        content:
          '*/*':
            schema:
              type: object
              properties:
                tx_bytes:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  description: tx_bytes is the raw transaction.
                  format: byte
              description: |-
                TxDecodeRequest is the request type for the Service.TxDecode
                RPC method.

                Since: cosmos-sdk 0.47
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/cosmos.tx.v1beta1.TxDecodeResponse'
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
      x-codegen-request-body-name: body
  /cosmos/tx/v1beta1/decode/amino:
    post:
      tags:
      - Service
      summary: TxDecodeAmino decodes an Amino transaction from encoded bytes to JSON.
      description: "Since: cosmos-sdk 0.47"
      operationId: TxDecodeAmino
      requestBody:
        content:
          '*/*':
            schema:
              type: object
              properties:
                amino_binary:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
              description: |-
                TxDecodeAminoRequest is the request type for the Service.TxDecodeAmino
                RPC method.

                Since: cosmos-sdk 0.47
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  amino_json:
                    type: string
                description: |-
                  TxDecodeAminoResponse is the response type for the Service.TxDecodeAmino
                  RPC method.

                  Since: cosmos-sdk 0.47
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
      x-codegen-request-body-name: body
  /cosmos/tx/v1beta1/encode:
    post:
      tags:
      - Service
      summary: TxEncode encodes the transaction.
      description: "Since: cosmos-sdk 0.47"
      operationId: TxEncode
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/cosmos.tx.v1beta1.TxEncodeRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  tx_bytes:
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    description: tx_bytes is the encoded transaction bytes.
                    format: byte
                description: |-
                  TxEncodeResponse is the response type for the
                  Service.TxEncode method.

                  Since: cosmos-sdk 0.47
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
      x-codegen-request-body-name: body
  /cosmos/tx/v1beta1/encode/amino:
    post:
      tags:
      - Service
      summary: TxEncodeAmino encodes an Amino transaction from JSON to encoded bytes.
      description: "Since: cosmos-sdk 0.47"
      operationId: TxEncodeAmino
      requestBody:
        content:
          '*/*':
            schema:
              type: object
              properties:
                amino_json:
                  type: string
              description: |-
                TxEncodeAminoRequest is the request type for the Service.TxEncodeAmino
                RPC method.

                Since: cosmos-sdk 0.47
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  amino_binary:
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    format: byte
                description: |-
                  TxEncodeAminoResponse is the response type for the Service.TxEncodeAmino
                  RPC method.

                  Since: cosmos-sdk 0.47
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
      x-codegen-request-body-name: body
  /cosmos/tx/v1beta1/simulate:
    post:
      tags:
      - Service
      summary: Simulate simulates executing a transaction for estimating gas usage.
      operationId: Simulate
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/cosmos.tx.v1beta1.SimulateRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  gas_info:
                    type: object
                    properties:
                      gas_wanted:
                        type: string
                        description: GasWanted is the maximum units of work we allow
                          this tx to perform.
                        format: uint64
                      gas_used:
                        type: string
                        description: GasUsed is the amount of gas actually consumed.
                        format: uint64
                    description: gas_info is the information about gas used in the
                      simulation.
                  result:
                    type: object
                    properties:
                      data:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: |-
                          Data is any data returned from message or handler execution. It MUST be
                          length prefixed in order to separate data from multiple message executions.
                          Deprecated. This field is still populated, but prefer msg_response instead
                          because it also contains the Msg response typeURL.
                        format: byte
                      log:
                        type: string
                        description: Log contains the log information from message
                          or handler execution.
                      events:
                        type: array
                        description: |-
                          Events contains a slice of Event objects that were emitted during message
                          or handler execution.
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                            attributes:
                              type: array
                              items:
                                type: object
                                properties:
                                  key:
                                    type: string
                                  value:
                                    type: string
                                  index:
                                    type: boolean
                                description: "EventAttribute is a single key-value\
                                  \ pair, associated with an event."
                          description: |-
                            Event allows application developers to attach additional information to
                            ResponseBeginBlock, ResponseEndBlock, ResponseCheckTx and ResponseDeliverTx.
                            Later, transactions may be queried using these events.
                      msg_responses:
                        type: array
                        description: |-
                          msg_responses contains the Msg handler responses type packed in Anys.

                          Since: cosmos-sdk 0.46
                        items:
                          type: object
                          properties:
                            type_url:
                              type: string
                              description: |-
                                A URL/resource name that uniquely identifies the type of the serialized
                                protocol buffer message. This string must contain at least
                                one "/" character. The last segment of the URL's path must represent
                                the fully qualified name of the type (as in
                                `path/google.protobuf.Duration`). The name should be in a canonical form
                                (e.g., leading "." is not accepted).

                                In practice, teams usually precompile into the binary all types that they
                                expect it to use in the context of Any. However, for URLs which use the
                                scheme `http`, `https`, or no scheme, one can optionally set up a type
                                server that maps type URLs to message definitions as follows:

                                * If no scheme is provided, `https` is assumed.
                                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                  value in binary format, or produce an error.
                                * Applications are allowed to cache lookup results based on the
                                  URL, or have them precompiled into a binary to avoid any
                                  lookup. Therefore, binary compatibility needs to be preserved
                                  on changes to types. (Use versioned type names to manage
                                  breaking changes.)

                                Note: this functionality is not currently available in the official
                                protobuf release, and it is not used for type URLs beginning with
                                type.googleapis.com.

                                Schemes other than `http`, `https` (or the empty scheme) might be
                                used with implementation specific semantics.
                            value:
                              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                              type: string
                              description: Must be a valid serialized protocol buffer
                                of the above specified type.
                              format: byte
                          description: |-
                            `Any` contains an arbitrary serialized protocol buffer message along with a
                            URL that describes the type of the serialized message.

                            Protobuf library provides support to pack/unpack Any values in the form
                            of utility functions or additional generated methods of the Any type.

                            Example 1: Pack and unpack a message in C++.

                                Foo foo = ...;
                                Any any;
                                any.PackFrom(foo);
                                ...
                                if (any.UnpackTo(&foo)) {
                                  ...
                                }

                            Example 2: Pack and unpack a message in Java.

                                Foo foo = ...;
                                Any any = Any.pack(foo);
                                ...
                                if (any.is(Foo.class)) {
                                  foo = any.unpack(Foo.class);
                                }

                             Example 3: Pack and unpack a message in Python.

                                foo = Foo(...)
                                any = Any()
                                any.Pack(foo)
                                ...
                                if any.Is(Foo.DESCRIPTOR):
                                  any.Unpack(foo)
                                  ...

                             Example 4: Pack and unpack a message in Go

                                 foo := &pb.Foo{...}
                                 any, err := ptypes.MarshalAny(foo)
                                 ...
                                 foo := &pb.Foo{}
                                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                                   ...
                                 }

                            The pack methods provided by protobuf library will by default use
                            'type.googleapis.com/full.type.name' as the type URL and the unpack
                            methods only use the fully qualified type name after the last '/'
                            in the type URL, for example "foo.bar.com/x/y.z" will yield type
                            name "y.z".


                            JSON
                            ====
                            The JSON representation of an `Any` value uses the regular
                            representation of the deserialized, embedded message, with an
                            additional field `@type` which contains the type URL. Example:

                                package google.profile;
                                message Person {
                                  string first_name = 1;
                                  string last_name = 2;
                                }

                                {
                                  "@type": "type.googleapis.com/google.profile.Person",
                                  "firstName": <string>,
                                  "lastName": <string>
                                }

                            If the embedded message type is well-known and has a custom JSON
                            representation, that representation will be embedded adding a field
                            `value` which holds the custom JSON in addition to the `@type`
                            field. Example (for message [google.protobuf.Duration][]):

                                {
                                  "@type": "type.googleapis.com/google.protobuf.Duration",
                                  "value": "1.212s"
                                }
                    description: result is the result of the simulation.
                description: |-
                  SimulateResponse is the response type for the
                  Service.SimulateRPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
      x-codegen-request-body-name: body
  /cosmos/tx/v1beta1/txs:
    get:
      tags:
      - Service
      summary: GetTxsEvent fetches txs by event.
      operationId: GetTxsEvent
      parameters:
      - name: events
        in: query
        description: events is the list of transaction event type.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      - name: order_by
        in: query
        description: |2-
           - ORDER_BY_UNSPECIFIED: ORDER_BY_UNSPECIFIED specifies an unknown sorting order. OrderBy defaults to ASC in this case.
           - ORDER_BY_ASC: ORDER_BY_ASC defines ascending order
           - ORDER_BY_DESC: ORDER_BY_DESC defines descending order
        schema:
          type: string
          default: ORDER_BY_UNSPECIFIED
          enum:
          - ORDER_BY_UNSPECIFIED
          - ORDER_BY_ASC
          - ORDER_BY_DESC
      - name: page
        in: query
        description: "page is the page number to query, starts at 1. If not provided,\
          \ will default to first page."
        schema:
          type: string
          format: uint64
      - name: limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/cosmos.tx.v1beta1.GetTxsEventResponse'
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
    post:
      tags:
      - Service
      summary: BroadcastTx broadcast transaction.
      operationId: BroadcastTx
      requestBody:
        content:
          '*/*':
            schema:
              type: object
              properties:
                tx_bytes:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  description: tx_bytes is the raw transaction.
                  format: byte
                mode:
                  type: string
                  description: |-
                    BroadcastMode specifies the broadcast mode for the TxService.Broadcast RPC method.

                     - BROADCAST_MODE_UNSPECIFIED: zero-value for mode ordering
                     - BROADCAST_MODE_BLOCK: DEPRECATED: use BROADCAST_MODE_SYNC instead,
                    BROADCAST_MODE_BLOCK is not supported by the SDK from v0.47.x onwards.
                     - BROADCAST_MODE_SYNC: BROADCAST_MODE_SYNC defines a tx broadcasting mode where the client waits for
                    a CheckTx execution response only.
                     - BROADCAST_MODE_ASYNC: BROADCAST_MODE_ASYNC defines a tx broadcasting mode where the client returns
                    immediately.
                  default: BROADCAST_MODE_UNSPECIFIED
                  enum:
                  - BROADCAST_MODE_UNSPECIFIED
                  - BROADCAST_MODE_BLOCK
                  - BROADCAST_MODE_SYNC
                  - BROADCAST_MODE_ASYNC
              description: |-
                BroadcastTxRequest is the request type for the Service.BroadcastTxRequest
                RPC method.
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  tx_response:
                    type: object
                    properties:
                      height:
                        title: The block height
                        type: string
                        format: int64
                      txhash:
                        type: string
                        description: The transaction hash.
                      codespace:
                        title: Namespace for the Code
                        type: string
                      code:
                        type: integer
                        description: Response code.
                        format: int64
                      data:
                        type: string
                        description: "Result bytes, if any."
                      raw_log:
                        type: string
                        description: |-
                          The output of the application's logger (raw string). May be
                          non-deterministic.
                      logs:
                        type: array
                        description: The output of the application's logger (typed).
                          May be non-deterministic.
                        items:
                          type: object
                          properties:
                            msg_index:
                              type: integer
                              format: int64
                            log:
                              type: string
                            events:
                              type: array
                              description: |-
                                Events contains a slice of Event objects that were emitted during some
                                execution.
                              items:
                                type: object
                                properties:
                                  type:
                                    type: string
                                  attributes:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        key:
                                          type: string
                                        value:
                                          type: string
                                      description: |-
                                        Attribute defines an attribute wrapper where the key and value are
                                        strings instead of raw bytes.
                                description: |-
                                  StringEvent defines en Event object wrapper where all the attributes
                                  contain key/value pairs that are strings instead of raw bytes.
                          description: ABCIMessageLog defines a structure containing
                            an indexed tx ABCI message log.
                      info:
                        type: string
                        description: Additional information. May be non-deterministic.
                      gas_wanted:
                        type: string
                        description: Amount of gas requested for transaction.
                        format: int64
                      gas_used:
                        type: string
                        description: Amount of gas consumed by transaction.
                        format: int64
                      tx:
                        type: object
                        properties:
                          type_url:
                            type: string
                            description: |-
                              A URL/resource name that uniquely identifies the type of the serialized
                              protocol buffer message. This string must contain at least
                              one "/" character. The last segment of the URL's path must represent
                              the fully qualified name of the type (as in
                              `path/google.protobuf.Duration`). The name should be in a canonical form
                              (e.g., leading "." is not accepted).

                              In practice, teams usually precompile into the binary all types that they
                              expect it to use in the context of Any. However, for URLs which use the
                              scheme `http`, `https`, or no scheme, one can optionally set up a type
                              server that maps type URLs to message definitions as follows:

                              * If no scheme is provided, `https` is assumed.
                              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                value in binary format, or produce an error.
                              * Applications are allowed to cache lookup results based on the
                                URL, or have them precompiled into a binary to avoid any
                                lookup. Therefore, binary compatibility needs to be preserved
                                on changes to types. (Use versioned type names to manage
                                breaking changes.)

                              Note: this functionality is not currently available in the official
                              protobuf release, and it is not used for type URLs beginning with
                              type.googleapis.com.

                              Schemes other than `http`, `https` (or the empty scheme) might be
                              used with implementation specific semantics.
                          value:
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            description: Must be a valid serialized protocol buffer
                              of the above specified type.
                            format: byte
                        description: |-
                          `Any` contains an arbitrary serialized protocol buffer message along with a
                          URL that describes the type of the serialized message.

                          Protobuf library provides support to pack/unpack Any values in the form
                          of utility functions or additional generated methods of the Any type.

                          Example 1: Pack and unpack a message in C++.

                              Foo foo = ...;
                              Any any;
                              any.PackFrom(foo);
                              ...
                              if (any.UnpackTo(&foo)) {
                                ...
                              }

                          Example 2: Pack and unpack a message in Java.

                              Foo foo = ...;
                              Any any = Any.pack(foo);
                              ...
                              if (any.is(Foo.class)) {
                                foo = any.unpack(Foo.class);
                              }

                           Example 3: Pack and unpack a message in Python.

                              foo = Foo(...)
                              any = Any()
                              any.Pack(foo)
                              ...
                              if any.Is(Foo.DESCRIPTOR):
                                any.Unpack(foo)
                                ...

                           Example 4: Pack and unpack a message in Go

                               foo := &pb.Foo{...}
                               any, err := ptypes.MarshalAny(foo)
                               ...
                               foo := &pb.Foo{}
                               if err := ptypes.UnmarshalAny(any, foo); err != nil {
                                 ...
                               }

                          The pack methods provided by protobuf library will by default use
                          'type.googleapis.com/full.type.name' as the type URL and the unpack
                          methods only use the fully qualified type name after the last '/'
                          in the type URL, for example "foo.bar.com/x/y.z" will yield type
                          name "y.z".


                          JSON
                          ====
                          The JSON representation of an `Any` value uses the regular
                          representation of the deserialized, embedded message, with an
                          additional field `@type` which contains the type URL. Example:

                              package google.profile;
                              message Person {
                                string first_name = 1;
                                string last_name = 2;
                              }

                              {
                                "@type": "type.googleapis.com/google.profile.Person",
                                "firstName": <string>,
                                "lastName": <string>
                              }

                          If the embedded message type is well-known and has a custom JSON
                          representation, that representation will be embedded adding a field
                          `value` which holds the custom JSON in addition to the `@type`
                          field. Example (for message [google.protobuf.Duration][]):

                              {
                                "@type": "type.googleapis.com/google.protobuf.Duration",
                                "value": "1.212s"
                              }
                      timestamp:
                        type: string
                        description: |-
                          Time of the previous block. For heights > 1, it's the weighted median of
                          the timestamps of the valid votes in the block.LastCommit. For height == 1,
                          it's genesis time.
                      events:
                        type: array
                        description: |-
                          Events defines all the events emitted by processing a transaction. Note,
                          these events include those emitted by processing all the messages and those
                          emitted from the ante. Whereas Logs contains the events, with
                          additional metadata, emitted only by processing the messages.

                          Since: cosmos-sdk 0.42.11, 0.44.5, 0.45
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                            attributes:
                              type: array
                              items:
                                type: object
                                properties:
                                  key:
                                    type: string
                                  value:
                                    type: string
                                  index:
                                    type: boolean
                                description: "EventAttribute is a single key-value\
                                  \ pair, associated with an event."
                          description: |-
                            Event allows application developers to attach additional information to
                            ResponseBeginBlock, ResponseEndBlock, ResponseCheckTx and ResponseDeliverTx.
                            Later, transactions may be queried using these events.
                    description: |-
                      TxResponse defines a structure containing relevant tx data and metadata. The
                      tags are stringified and the log is JSON decoded.
                description: |-
                  BroadcastTxResponse is the response type for the
                  Service.BroadcastTx method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
      x-codegen-request-body-name: body
  /cosmos/tx/v1beta1/txs/block/{height}:
    get:
      tags:
      - Service
      summary: GetBlockWithTxs fetches a block with decoded txs.
      description: "Since: cosmos-sdk 0.45.2"
      operationId: GetBlockWithTxs
      parameters:
      - name: height
        in: path
        description: height is the height of the block to query.
        required: true
        schema:
          type: string
          format: int64
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/cosmos.tx.v1beta1.GetBlockWithTxsResponse'
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/tx/v1beta1/txs/{hash}:
    get:
      tags:
      - Service
      summary: GetTx fetches a tx by hash.
      operationId: GetTx
      parameters:
      - name: hash
        in: path
        description: "hash is the tx hash to query, encoded as a hex string."
        required: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/cosmos.tx.v1beta1.GetTxResponse'
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/upgrade/v1beta1/applied_plan/{name}:
    get:
      tags:
      - Query
      summary: AppliedPlan queries a previously applied upgrade plan by its name.
      operationId: AppliedPlan
      parameters:
      - name: name
        in: path
        description: name is the name of the applied plan to query for.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  height:
                    type: string
                    description: height is the block height at which the plan was
                      applied.
                    format: int64
                description: |-
                  QueryAppliedPlanResponse is the response type for the Query/AppliedPlan RPC
                  method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/upgrade/v1beta1/authority:
    get:
      tags:
      - Query
      summary: Returns the account with authority to conduct upgrades
      description: "Since: cosmos-sdk 0.46"
      operationId: Authority
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                title: QueryAuthorityResponse is the response type for Query/Authority
                type: object
                properties:
                  address:
                    type: string
                description: "Since: cosmos-sdk 0.46"
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/upgrade/v1beta1/current_plan:
    get:
      tags:
      - Query
      summary: CurrentPlan queries the current upgrade plan.
      operationId: CurrentPlan
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  plan:
                    type: object
                    properties:
                      name:
                        type: string
                        description: |-
                          Sets the name for the upgrade. This name will be used by the upgraded
                          version of the software to apply any special "on-upgrade" commands during
                          the first BeginBlock method after the upgrade is applied. It is also used
                          to detect whether a software version can handle a given upgrade. If no
                          upgrade handler with this name has been set in the software, it will be
                          assumed that the software is out-of-date when the upgrade Time or Height is
                          reached and the software will exit.
                      time:
                        type: string
                        description: |-
                          Deprecated: Time based upgrades have been deprecated. Time based upgrade logic
                          has been removed from the SDK.
                          If this field is not empty, an error will be thrown.
                        format: date-time
                      height:
                        type: string
                        description: The height at which the upgrade must be performed.
                        format: int64
                      info:
                        title: |-
                          Any application specific upgrade info to be included on-chain
                          such as a git commit that validators could automatically upgrade to
                        type: string
                      upgraded_client_state:
                        type: object
                        properties:
                          type_url:
                            type: string
                            description: |-
                              A URL/resource name that uniquely identifies the type of the serialized
                              protocol buffer message. This string must contain at least
                              one "/" character. The last segment of the URL's path must represent
                              the fully qualified name of the type (as in
                              `path/google.protobuf.Duration`). The name should be in a canonical form
                              (e.g., leading "." is not accepted).

                              In practice, teams usually precompile into the binary all types that they
                              expect it to use in the context of Any. However, for URLs which use the
                              scheme `http`, `https`, or no scheme, one can optionally set up a type
                              server that maps type URLs to message definitions as follows:

                              * If no scheme is provided, `https` is assumed.
                              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                value in binary format, or produce an error.
                              * Applications are allowed to cache lookup results based on the
                                URL, or have them precompiled into a binary to avoid any
                                lookup. Therefore, binary compatibility needs to be preserved
                                on changes to types. (Use versioned type names to manage
                                breaking changes.)

                              Note: this functionality is not currently available in the official
                              protobuf release, and it is not used for type URLs beginning with
                              type.googleapis.com.

                              Schemes other than `http`, `https` (or the empty scheme) might be
                              used with implementation specific semantics.
                          value:
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            description: Must be a valid serialized protocol buffer
                              of the above specified type.
                            format: byte
                        description: |-
                          `Any` contains an arbitrary serialized protocol buffer message along with a
                          URL that describes the type of the serialized message.

                          Protobuf library provides support to pack/unpack Any values in the form
                          of utility functions or additional generated methods of the Any type.

                          Example 1: Pack and unpack a message in C++.

                              Foo foo = ...;
                              Any any;
                              any.PackFrom(foo);
                              ...
                              if (any.UnpackTo(&foo)) {
                                ...
                              }

                          Example 2: Pack and unpack a message in Java.

                              Foo foo = ...;
                              Any any = Any.pack(foo);
                              ...
                              if (any.is(Foo.class)) {
                                foo = any.unpack(Foo.class);
                              }

                           Example 3: Pack and unpack a message in Python.

                              foo = Foo(...)
                              any = Any()
                              any.Pack(foo)
                              ...
                              if any.Is(Foo.DESCRIPTOR):
                                any.Unpack(foo)
                                ...

                           Example 4: Pack and unpack a message in Go

                               foo := &pb.Foo{...}
                               any, err := ptypes.MarshalAny(foo)
                               ...
                               foo := &pb.Foo{}
                               if err := ptypes.UnmarshalAny(any, foo); err != nil {
                                 ...
                               }

                          The pack methods provided by protobuf library will by default use
                          'type.googleapis.com/full.type.name' as the type URL and the unpack
                          methods only use the fully qualified type name after the last '/'
                          in the type URL, for example "foo.bar.com/x/y.z" will yield type
                          name "y.z".


                          JSON
                          ====
                          The JSON representation of an `Any` value uses the regular
                          representation of the deserialized, embedded message, with an
                          additional field `@type` which contains the type URL. Example:

                              package google.profile;
                              message Person {
                                string first_name = 1;
                                string last_name = 2;
                              }

                              {
                                "@type": "type.googleapis.com/google.profile.Person",
                                "firstName": <string>,
                                "lastName": <string>
                              }

                          If the embedded message type is well-known and has a custom JSON
                          representation, that representation will be embedded adding a field
                          `value` which holds the custom JSON in addition to the `@type`
                          field. Example (for message [google.protobuf.Duration][]):

                              {
                                "@type": "type.googleapis.com/google.protobuf.Duration",
                                "value": "1.212s"
                              }
                    description: plan is the current upgrade plan.
                description: |-
                  QueryCurrentPlanResponse is the response type for the Query/CurrentPlan RPC
                  method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/upgrade/v1beta1/module_versions:
    get:
      tags:
      - Query
      summary: ModuleVersions queries the list of module versions from state.
      description: "Since: cosmos-sdk 0.43"
      operationId: ModuleVersions
      parameters:
      - name: module_name
        in: query
        description: |-
          module_name is a field to query a specific module
          consensus version from state. Leaving this empty will
          fetch the full list of module versions from state.
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  module_versions:
                    type: array
                    description: module_versions is a list of module names with their
                      consensus versions.
                    items:
                      type: object
                      properties:
                        name:
                          title: name of the app module
                          type: string
                        version:
                          title: consensus version of the app module
                          type: string
                          format: uint64
                      description: |-
                        ModuleVersion specifies a module and its consensus version.

                        Since: cosmos-sdk 0.43
                description: |-
                  QueryModuleVersionsResponse is the response type for the Query/ModuleVersions
                  RPC method.

                  Since: cosmos-sdk 0.43
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/upgrade/v1beta1/upgraded_consensus_state/{last_height}:
    get:
      tags:
      - Query
      summary: |-
        UpgradedConsensusState queries the consensus state that will serve
        as a trusted kernel for the next version of this chain. It will only be
        stored at the last height of this chain.
        UpgradedConsensusState RPC not supported with legacy querier
        This rpc is deprecated now that IBC has its own replacement
        (https://github.com/cosmos/ibc-go/blob/2c880a22e9f9cc75f62b527ca94aa75ce1106001/proto/ibc/core/client/v1/query.proto#L54)
      operationId: UpgradedConsensusState
      parameters:
      - name: last_height
        in: path
        description: |-
          last height of the current chain must be sent in request
          as this is the height under which next consensus state is stored
        required: true
        schema:
          type: string
          format: int64
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  upgraded_consensus_state:
                    title: "Since: cosmos-sdk 0.43"
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    format: byte
                description: |-
                  QueryUpgradedConsensusStateResponse is the response type for the Query/UpgradedConsensusState
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmwasm/wasm/v1/code:
    get:
      tags:
      - Query
      summary: Codes gets the metadata for all stored wasm codes
      operationId: Codes
      parameters:
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                title: QueryCodesResponse is the response type for the Query/Codes
                  RPC method
                type: object
                properties:
                  code_infos:
                    type: array
                    items:
                      title: CodeInfoResponse contains code meta data from CodeInfo
                      type: object
                      properties:
                        code_id:
                          type: string
                          format: uint64
                        creator:
                          type: string
                        data_hash:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
                        instantiate_permission:
                          type: object
                          properties:
                            permission:
                              title: AccessType permission types
                              type: string
                              description: |-
                                - ACCESS_TYPE_UNSPECIFIED: AccessTypeUnspecified placeholder for empty value
                                 - ACCESS_TYPE_NOBODY: AccessTypeNobody forbidden
                                 - ACCESS_TYPE_EVERYBODY: AccessTypeEverybody unrestricted
                                 - ACCESS_TYPE_ANY_OF_ADDRESSES: AccessTypeAnyOfAddresses allow any of the addresses
                              default: ACCESS_TYPE_UNSPECIFIED
                              enum:
                              - ACCESS_TYPE_UNSPECIFIED
                              - ACCESS_TYPE_NOBODY
                              - ACCESS_TYPE_EVERYBODY
                              - ACCESS_TYPE_ANY_OF_ADDRESSES
                            addresses:
                              type: array
                              items:
                                type: string
                          description: AccessConfig access control type.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmwasm/wasm/v1/code/{code_id}:
    get:
      tags:
      - Query
      summary: Code gets the binary code and metadata for a singe wasm code
      operationId: Code
      parameters:
      - name: code_id
        in: path
        required: true
        schema:
          type: string
          format: uint64
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                title: QueryCodeResponse is the response type for the Query/Code RPC
                  method
                type: object
                properties:
                  code_info:
                    title: CodeInfoResponse contains code meta data from CodeInfo
                    type: object
                    properties:
                      code_id:
                        type: string
                        format: uint64
                      creator:
                        type: string
                      data_hash:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        format: byte
                      instantiate_permission:
                        type: object
                        properties:
                          permission:
                            title: AccessType permission types
                            type: string
                            description: |-
                              - ACCESS_TYPE_UNSPECIFIED: AccessTypeUnspecified placeholder for empty value
                               - ACCESS_TYPE_NOBODY: AccessTypeNobody forbidden
                               - ACCESS_TYPE_EVERYBODY: AccessTypeEverybody unrestricted
                               - ACCESS_TYPE_ANY_OF_ADDRESSES: AccessTypeAnyOfAddresses allow any of the addresses
                            default: ACCESS_TYPE_UNSPECIFIED
                            enum:
                            - ACCESS_TYPE_UNSPECIFIED
                            - ACCESS_TYPE_NOBODY
                            - ACCESS_TYPE_EVERYBODY
                            - ACCESS_TYPE_ANY_OF_ADDRESSES
                          addresses:
                            type: array
                            items:
                              type: string
                        description: AccessConfig access control type.
                  data:
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    format: byte
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmwasm/wasm/v1/code/{code_id}/contracts:
    get:
      tags:
      - Query
      summary: ContractsByCode lists all smart contracts for a code id
      operationId: ContractsByCode
      parameters:
      - name: code_id
        in: path
        required: true
        schema:
          type: string
          format: uint64
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                title: |-
                  QueryContractsByCodeResponse is the response type for the
                  Query/ContractsByCode RPC method
                type: object
                properties:
                  contracts:
                    title: contracts are a set of contract addresses
                    type: array
                    items:
                      type: string
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmwasm/wasm/v1/codes/params:
    get:
      tags:
      - Query
      summary: Params gets the module params
      operationId: WasmParams
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  params:
                    type: object
                    properties:
                      code_upload_access:
                        type: object
                        properties:
                          permission:
                            title: AccessType permission types
                            type: string
                            description: |-
                              - ACCESS_TYPE_UNSPECIFIED: AccessTypeUnspecified placeholder for empty value
                               - ACCESS_TYPE_NOBODY: AccessTypeNobody forbidden
                               - ACCESS_TYPE_EVERYBODY: AccessTypeEverybody unrestricted
                               - ACCESS_TYPE_ANY_OF_ADDRESSES: AccessTypeAnyOfAddresses allow any of the addresses
                            default: ACCESS_TYPE_UNSPECIFIED
                            enum:
                            - ACCESS_TYPE_UNSPECIFIED
                            - ACCESS_TYPE_NOBODY
                            - ACCESS_TYPE_EVERYBODY
                            - ACCESS_TYPE_ANY_OF_ADDRESSES
                          addresses:
                            type: array
                            items:
                              type: string
                        description: AccessConfig access control type.
                      instantiate_default_permission:
                        title: AccessType permission types
                        type: string
                        description: |-
                          - ACCESS_TYPE_UNSPECIFIED: AccessTypeUnspecified placeholder for empty value
                           - ACCESS_TYPE_NOBODY: AccessTypeNobody forbidden
                           - ACCESS_TYPE_EVERYBODY: AccessTypeEverybody unrestricted
                           - ACCESS_TYPE_ANY_OF_ADDRESSES: AccessTypeAnyOfAddresses allow any of the addresses
                        default: ACCESS_TYPE_UNSPECIFIED
                        enum:
                        - ACCESS_TYPE_UNSPECIFIED
                        - ACCESS_TYPE_NOBODY
                        - ACCESS_TYPE_EVERYBODY
                        - ACCESS_TYPE_ANY_OF_ADDRESSES
                    description: params defines the parameters of the module.
                description: QueryParamsResponse is the response type for the Query/Params
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmwasm/wasm/v1/codes/pinned:
    get:
      tags:
      - Query
      summary: PinnedCodes gets the pinned code ids
      operationId: PinnedCodes
      parameters:
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                title: |-
                  QueryPinnedCodesResponse is the response type for the
                  Query/PinnedCodes RPC method
                type: object
                properties:
                  code_ids:
                    type: array
                    items:
                      type: string
                      format: uint64
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmwasm/wasm/v1/contract/{address}:
    get:
      tags:
      - Query
      summary: ContractInfo gets the contract meta data
      operationId: ContractInfo
      parameters:
      - name: address
        in: path
        description: address is the address of the contract to query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                title: |-
                  QueryContractInfoResponse is the response type for the Query/ContractInfo RPC
                  method
                type: object
                properties:
                  address:
                    title: address is the address of the contract
                    type: string
                  contract_info:
                    title: ContractInfo stores a WASM contract instance
                    type: object
                    properties:
                      code_id:
                        title: CodeID is the reference to the stored Wasm code
                        type: string
                        format: uint64
                      creator:
                        title: Creator address who initially instantiated the contract
                        type: string
                      admin:
                        title: Admin is an optional address that can execute migrations
                        type: string
                      label:
                        type: string
                        description: Label is optional metadata to be stored with
                          a contract instance.
                      created:
                        type: object
                        properties:
                          block_height:
                            title: BlockHeight is the block the contract was created
                              at
                            type: string
                            format: uint64
                          tx_index:
                            title: |-
                              TxIndex is a monotonic counter within the block (actual transaction index,
                              or gas consumed)
                            type: string
                            format: uint64
                        description: Created Tx position when the contract was instantiated.
                      ibc_port_id:
                        type: string
                      extension:
                        type: object
                        properties:
                          type_url:
                            type: string
                            description: |-
                              A URL/resource name that uniquely identifies the type of the serialized
                              protocol buffer message. This string must contain at least
                              one "/" character. The last segment of the URL's path must represent
                              the fully qualified name of the type (as in
                              `path/google.protobuf.Duration`). The name should be in a canonical form
                              (e.g., leading "." is not accepted).

                              In practice, teams usually precompile into the binary all types that they
                              expect it to use in the context of Any. However, for URLs which use the
                              scheme `http`, `https`, or no scheme, one can optionally set up a type
                              server that maps type URLs to message definitions as follows:

                              * If no scheme is provided, `https` is assumed.
                              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                value in binary format, or produce an error.
                              * Applications are allowed to cache lookup results based on the
                                URL, or have them precompiled into a binary to avoid any
                                lookup. Therefore, binary compatibility needs to be preserved
                                on changes to types. (Use versioned type names to manage
                                breaking changes.)

                              Note: this functionality is not currently available in the official
                              protobuf release, and it is not used for type URLs beginning with
                              type.googleapis.com.

                              Schemes other than `http`, `https` (or the empty scheme) might be
                              used with implementation specific semantics.
                          value:
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            description: Must be a valid serialized protocol buffer
                              of the above specified type.
                            format: byte
                        description: |-
                          `Any` contains an arbitrary serialized protocol buffer message along with a
                          URL that describes the type of the serialized message.

                          Protobuf library provides support to pack/unpack Any values in the form
                          of utility functions or additional generated methods of the Any type.

                          Example 1: Pack and unpack a message in C++.

                              Foo foo = ...;
                              Any any;
                              any.PackFrom(foo);
                              ...
                              if (any.UnpackTo(&foo)) {
                                ...
                              }

                          Example 2: Pack and unpack a message in Java.

                              Foo foo = ...;
                              Any any = Any.pack(foo);
                              ...
                              if (any.is(Foo.class)) {
                                foo = any.unpack(Foo.class);
                              }

                           Example 3: Pack and unpack a message in Python.

                              foo = Foo(...)
                              any = Any()
                              any.Pack(foo)
                              ...
                              if any.Is(Foo.DESCRIPTOR):
                                any.Unpack(foo)
                                ...

                           Example 4: Pack and unpack a message in Go

                               foo := &pb.Foo{...}
                               any, err := ptypes.MarshalAny(foo)
                               ...
                               foo := &pb.Foo{}
                               if err := ptypes.UnmarshalAny(any, foo); err != nil {
                                 ...
                               }

                          The pack methods provided by protobuf library will by default use
                          'type.googleapis.com/full.type.name' as the type URL and the unpack
                          methods only use the fully qualified type name after the last '/'
                          in the type URL, for example "foo.bar.com/x/y.z" will yield type
                          name "y.z".


                          JSON
                          ====
                          The JSON representation of an `Any` value uses the regular
                          representation of the deserialized, embedded message, with an
                          additional field `@type` which contains the type URL. Example:

                              package google.profile;
                              message Person {
                                string first_name = 1;
                                string last_name = 2;
                              }

                              {
                                "@type": "type.googleapis.com/google.profile.Person",
                                "firstName": <string>,
                                "lastName": <string>
                              }

                          If the embedded message type is well-known and has a custom JSON
                          representation, that representation will be embedded adding a field
                          `value` which holds the custom JSON in addition to the `@type`
                          field. Example (for message [google.protobuf.Duration][]):

                              {
                                "@type": "type.googleapis.com/google.protobuf.Duration",
                                "value": "1.212s"
                              }
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmwasm/wasm/v1/contract/{address}/history:
    get:
      tags:
      - Query
      summary: ContractHistory gets the contract code history
      operationId: ContractHistory
      parameters:
      - name: address
        in: path
        description: address is the address of the contract to query
        required: true
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                title: |-
                  QueryContractHistoryResponse is the response type for the
                  Query/ContractHistory RPC method
                type: object
                properties:
                  entries:
                    type: array
                    items:
                      type: object
                      properties:
                        operation:
                          title: ContractCodeHistoryOperationType actions that caused
                            a code change
                          type: string
                          description: |-
                            - CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED: ContractCodeHistoryOperationTypeUnspecified placeholder for empty value
                             - CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT: ContractCodeHistoryOperationTypeInit on chain contract instantiation
                             - CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE: ContractCodeHistoryOperationTypeMigrate code migration
                             - CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS: ContractCodeHistoryOperationTypeGenesis based on genesis data
                          default: CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED
                          enum:
                          - CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED
                          - CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT
                          - CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE
                          - CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS
                        code_id:
                          title: CodeID is the reference to the stored WASM code
                          type: string
                          format: uint64
                        updated:
                          type: object
                          properties:
                            block_height:
                              title: BlockHeight is the block the contract was created
                                at
                              type: string
                              format: uint64
                            tx_index:
                              title: |-
                                TxIndex is a monotonic counter within the block (actual transaction index,
                                or gas consumed)
                              type: string
                              format: uint64
                          description: Updated Tx position when the operation was
                            executed.
                        msg:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
                      description: ContractCodeHistoryEntry metadata to a contract.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmwasm/wasm/v1/contract/{address}/raw/{query_data}:
    get:
      tags:
      - Query
      summary: RawContractState gets single key from the raw store data of a contract
      operationId: RawContractState
      parameters:
      - name: address
        in: path
        description: address is the address of the contract
        required: true
        schema:
          type: string
      - name: query_data
        in: path
        required: true
        schema:
          type: string
          format: byte
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                title: |-
                  QueryRawContractStateResponse is the response type for the
                  Query/RawContractState RPC method
                type: object
                properties:
                  data:
                    title: Data contains the raw store data
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    format: byte
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmwasm/wasm/v1/contract/{address}/smart/{query_data}:
    get:
      tags:
      - Query
      summary: SmartContractState get smart query result from the contract
      operationId: SmartContractState
      parameters:
      - name: address
        in: path
        description: address is the address of the contract
        required: true
        schema:
          type: string
      - name: query_data
        in: path
        description: QueryData contains the query data passed to the contract
        required: true
        schema:
          type: string
          format: byte
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                title: |-
                  QuerySmartContractStateResponse is the response type for the
                  Query/SmartContractState RPC method
                type: object
                properties:
                  data:
                    title: Data contains the json data returned from the smart contract
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    format: byte
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmwasm/wasm/v1/contract/{address}/state:
    get:
      tags:
      - Query
      summary: AllContractState gets all raw store data for a single contract
      operationId: AllContractState
      parameters:
      - name: address
        in: path
        description: address is the address of the contract
        required: true
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                title: |-
                  QueryAllContractStateResponse is the response type for the
                  Query/AllContractState RPC method
                type: object
                properties:
                  models:
                    type: array
                    items:
                      title: Model is a struct that holds a KV pair
                      type: object
                      properties:
                        key:
                          title: hex-encode key to read it better (this is often ascii)
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
                        value:
                          title: base64-encode raw value
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmwasm/wasm/v1/contracts/creator/{creator_address}:
    get:
      tags:
      - Query
      summary: ContractsByCreator gets the contracts by creator
      operationId: ContractsByCreator
      parameters:
      - name: creator_address
        in: path
        description: CreatorAddress is the address of contract creator
        required: true
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  contract_addresses:
                    title: ContractAddresses result set
                    type: array
                    items:
                      type: string
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: Pagination defines the pagination in the response.
                description: |-
                  QueryContractsByCreatorResponse is the response type for the
                  Query/ContractsByCreator RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/core/channel/v1/channels:
    get:
      tags:
      - Query
      summary: Channels queries all the IBC channels of a chain.
      operationId: Channels
      parameters:
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  channels:
                    type: array
                    description: list of stored channels of the chain.
                    items:
                      type: object
                      properties:
                        state:
                          title: current state of the channel end
                          type: string
                          description: |-
                            State defines if a channel is in one of the following states:
                            CLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.

                             - STATE_UNINITIALIZED_UNSPECIFIED: Default State
                             - STATE_INIT: A channel has just started the opening handshake.
                             - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.
                             - STATE_OPEN: A channel has completed the handshake. Open channels are
                            ready to send and receive packets.
                             - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive
                            packets.
                          default: STATE_UNINITIALIZED_UNSPECIFIED
                          enum:
                          - STATE_UNINITIALIZED_UNSPECIFIED
                          - STATE_INIT
                          - STATE_TRYOPEN
                          - STATE_OPEN
                          - STATE_CLOSED
                        ordering:
                          title: whether the channel is ordered or unordered
                          type: string
                          description: |-
                            - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering
                             - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
                            which they were sent.
                             - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
                          default: ORDER_NONE_UNSPECIFIED
                          enum:
                          - ORDER_NONE_UNSPECIFIED
                          - ORDER_UNORDERED
                          - ORDER_ORDERED
                        counterparty:
                          title: counterparty channel end
                          type: object
                          properties:
                            port_id:
                              type: string
                              description: port on the counterparty chain which owns
                                the other end of the channel.
                            channel_id:
                              title: channel end on the counterparty chain
                              type: string
                        connection_hops:
                          title: |-
                            list of connection identifiers, in order, along which packets sent on
                            this channel will travel
                          type: array
                          items:
                            type: string
                        version:
                          title: "opaque channel version, which is agreed upon during\
                            \ the handshake"
                          type: string
                        port_id:
                          title: port identifier
                          type: string
                        channel_id:
                          title: channel identifier
                          type: string
                      description: |-
                        IdentifiedChannel defines a channel with additional port and channel
                        identifier fields.
                  pagination:
                    title: pagination response
                    type: object
                    properties:
                      next_key:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: |-
                      PageResponse is to be embedded in gRPC response messages where the
                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
                  height:
                    title: query block height
                    type: object
                    properties:
                      revision_number:
                        title: the revision that the client is currently on
                        type: string
                        format: uint64
                      revision_height:
                        title: the height within the given revision
                        type: string
                        format: uint64
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
                description: QueryChannelsResponse is the response type for the Query/Channels
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}:
    get:
      tags:
      - Query
      summary: Channel queries an IBC Channel.
      operationId: Channel
      parameters:
      - name: channel_id
        in: path
        description: channel unique identifier
        required: true
        schema:
          type: string
      - name: port_id
        in: path
        description: port unique identifier
        required: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  channel:
                    title: channel associated with the request identifiers
                    type: object
                    properties:
                      state:
                        title: current state of the channel end
                        type: string
                        description: |-
                          State defines if a channel is in one of the following states:
                          CLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.

                           - STATE_UNINITIALIZED_UNSPECIFIED: Default State
                           - STATE_INIT: A channel has just started the opening handshake.
                           - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.
                           - STATE_OPEN: A channel has completed the handshake. Open channels are
                          ready to send and receive packets.
                           - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive
                          packets.
                        default: STATE_UNINITIALIZED_UNSPECIFIED
                        enum:
                        - STATE_UNINITIALIZED_UNSPECIFIED
                        - STATE_INIT
                        - STATE_TRYOPEN
                        - STATE_OPEN
                        - STATE_CLOSED
                      ordering:
                        title: whether the channel is ordered or unordered
                        type: string
                        description: |-
                          - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering
                           - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
                          which they were sent.
                           - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
                        default: ORDER_NONE_UNSPECIFIED
                        enum:
                        - ORDER_NONE_UNSPECIFIED
                        - ORDER_UNORDERED
                        - ORDER_ORDERED
                      counterparty:
                        title: counterparty channel end
                        type: object
                        properties:
                          port_id:
                            type: string
                            description: port on the counterparty chain which owns
                              the other end of the channel.
                          channel_id:
                            title: channel end on the counterparty chain
                            type: string
                      connection_hops:
                        title: |-
                          list of connection identifiers, in order, along which packets sent on
                          this channel will travel
                        type: array
                        items:
                          type: string
                      version:
                        title: "opaque channel version, which is agreed upon during\
                          \ the handshake"
                        type: string
                    description: |-
                      Channel defines pipeline for exactly-once packet delivery between specific
                      modules on separate blockchains, which has at least one end capable of
                      sending packets and one end capable of receiving packets.
                  proof:
                    title: merkle proof of existence
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    format: byte
                  proof_height:
                    title: height at which the proof was retrieved
                    type: object
                    properties:
                      revision_number:
                        title: the revision that the client is currently on
                        type: string
                        format: uint64
                      revision_height:
                        title: the height within the given revision
                        type: string
                        format: uint64
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
                description: |-
                  QueryChannelResponse is the response type for the Query/Channel RPC method.
                  Besides the Channel end, it includes a proof and the height from which the
                  proof was retrieved.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/client_state:
    get:
      tags:
      - Query
      summary: |-
        ChannelClientState queries for the client state for the channel associated
        with the provided channel identifiers.
      operationId: ChannelClientState
      parameters:
      - name: channel_id
        in: path
        description: channel unique identifier
        required: true
        schema:
          type: string
      - name: port_id
        in: path
        description: port unique identifier
        required: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                title: |-
                  QueryChannelClientStateResponse is the Response type for the
                  Query/QueryChannelClientState RPC method
                type: object
                properties:
                  identified_client_state:
                    title: client state associated with the channel
                    type: object
                    properties:
                      client_id:
                        title: client identifier
                        type: string
                      client_state:
                        title: client state
                        type: object
                        properties:
                          type_url:
                            type: string
                            description: |-
                              A URL/resource name that uniquely identifies the type of the serialized
                              protocol buffer message. This string must contain at least
                              one "/" character. The last segment of the URL's path must represent
                              the fully qualified name of the type (as in
                              `path/google.protobuf.Duration`). The name should be in a canonical form
                              (e.g., leading "." is not accepted).

                              In practice, teams usually precompile into the binary all types that they
                              expect it to use in the context of Any. However, for URLs which use the
                              scheme `http`, `https`, or no scheme, one can optionally set up a type
                              server that maps type URLs to message definitions as follows:

                              * If no scheme is provided, `https` is assumed.
                              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                value in binary format, or produce an error.
                              * Applications are allowed to cache lookup results based on the
                                URL, or have them precompiled into a binary to avoid any
                                lookup. Therefore, binary compatibility needs to be preserved
                                on changes to types. (Use versioned type names to manage
                                breaking changes.)

                              Note: this functionality is not currently available in the official
                              protobuf release, and it is not used for type URLs beginning with
                              type.googleapis.com.

                              Schemes other than `http`, `https` (or the empty scheme) might be
                              used with implementation specific semantics.
                          value:
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            description: Must be a valid serialized protocol buffer
                              of the above specified type.
                            format: byte
                        description: |-
                          `Any` contains an arbitrary serialized protocol buffer message along with a
                          URL that describes the type of the serialized message.

                          Protobuf library provides support to pack/unpack Any values in the form
                          of utility functions or additional generated methods of the Any type.

                          Example 1: Pack and unpack a message in C++.

                              Foo foo = ...;
                              Any any;
                              any.PackFrom(foo);
                              ...
                              if (any.UnpackTo(&foo)) {
                                ...
                              }

                          Example 2: Pack and unpack a message in Java.

                              Foo foo = ...;
                              Any any = Any.pack(foo);
                              ...
                              if (any.is(Foo.class)) {
                                foo = any.unpack(Foo.class);
                              }

                           Example 3: Pack and unpack a message in Python.

                              foo = Foo(...)
                              any = Any()
                              any.Pack(foo)
                              ...
                              if any.Is(Foo.DESCRIPTOR):
                                any.Unpack(foo)
                                ...

                           Example 4: Pack and unpack a message in Go

                               foo := &pb.Foo{...}
                               any, err := ptypes.MarshalAny(foo)
                               ...
                               foo := &pb.Foo{}
                               if err := ptypes.UnmarshalAny(any, foo); err != nil {
                                 ...
                               }

                          The pack methods provided by protobuf library will by default use
                          'type.googleapis.com/full.type.name' as the type URL and the unpack
                          methods only use the fully qualified type name after the last '/'
                          in the type URL, for example "foo.bar.com/x/y.z" will yield type
                          name "y.z".


                          JSON
                          ====
                          The JSON representation of an `Any` value uses the regular
                          representation of the deserialized, embedded message, with an
                          additional field `@type` which contains the type URL. Example:

                              package google.profile;
                              message Person {
                                string first_name = 1;
                                string last_name = 2;
                              }

                              {
                                "@type": "type.googleapis.com/google.profile.Person",
                                "firstName": <string>,
                                "lastName": <string>
                              }

                          If the embedded message type is well-known and has a custom JSON
                          representation, that representation will be embedded adding a field
                          `value` which holds the custom JSON in addition to the `@type`
                          field. Example (for message [google.protobuf.Duration][]):

                              {
                                "@type": "type.googleapis.com/google.protobuf.Duration",
                                "value": "1.212s"
                              }
                    description: |-
                      IdentifiedClientState defines a client state with an additional client
                      identifier field.
                  proof:
                    title: merkle proof of existence
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    format: byte
                  proof_height:
                    title: height at which the proof was retrieved
                    type: object
                    properties:
                      revision_number:
                        title: the revision that the client is currently on
                        type: string
                        format: uint64
                      revision_height:
                        title: the height within the given revision
                        type: string
                        format: uint64
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/consensus_state/revision/{revision_number}/height/{revision_height}:
    get:
      tags:
      - Query
      summary: |-
        ChannelConsensusState queries for the consensus state for the channel
        associated with the provided channel identifiers.
      operationId: ChannelConsensusState
      parameters:
      - name: channel_id
        in: path
        description: channel unique identifier
        required: true
        schema:
          type: string
      - name: port_id
        in: path
        description: port unique identifier
        required: true
        schema:
          type: string
      - name: revision_number
        in: path
        description: revision number of the consensus state
        required: true
        schema:
          type: string
          format: uint64
      - name: revision_height
        in: path
        description: revision height of the consensus state
        required: true
        schema:
          type: string
          format: uint64
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                title: |-
                  QueryChannelClientStateResponse is the Response type for the
                  Query/QueryChannelClientState RPC method
                type: object
                properties:
                  consensus_state:
                    title: consensus state associated with the channel
                    type: object
                    properties:
                      type_url:
                        type: string
                        description: |-
                          A URL/resource name that uniquely identifies the type of the serialized
                          protocol buffer message. This string must contain at least
                          one "/" character. The last segment of the URL's path must represent
                          the fully qualified name of the type (as in
                          `path/google.protobuf.Duration`). The name should be in a canonical form
                          (e.g., leading "." is not accepted).

                          In practice, teams usually precompile into the binary all types that they
                          expect it to use in the context of Any. However, for URLs which use the
                          scheme `http`, `https`, or no scheme, one can optionally set up a type
                          server that maps type URLs to message definitions as follows:

                          * If no scheme is provided, `https` is assumed.
                          * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                            value in binary format, or produce an error.
                          * Applications are allowed to cache lookup results based on the
                            URL, or have them precompiled into a binary to avoid any
                            lookup. Therefore, binary compatibility needs to be preserved
                            on changes to types. (Use versioned type names to manage
                            breaking changes.)

                          Note: this functionality is not currently available in the official
                          protobuf release, and it is not used for type URLs beginning with
                          type.googleapis.com.

                          Schemes other than `http`, `https` (or the empty scheme) might be
                          used with implementation specific semantics.
                      value:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: Must be a valid serialized protocol buffer of
                          the above specified type.
                        format: byte
                    description: |-
                      `Any` contains an arbitrary serialized protocol buffer message along with a
                      URL that describes the type of the serialized message.

                      Protobuf library provides support to pack/unpack Any values in the form
                      of utility functions or additional generated methods of the Any type.

                      Example 1: Pack and unpack a message in C++.

                          Foo foo = ...;
                          Any any;
                          any.PackFrom(foo);
                          ...
                          if (any.UnpackTo(&foo)) {
                            ...
                          }

                      Example 2: Pack and unpack a message in Java.

                          Foo foo = ...;
                          Any any = Any.pack(foo);
                          ...
                          if (any.is(Foo.class)) {
                            foo = any.unpack(Foo.class);
                          }

                       Example 3: Pack and unpack a message in Python.

                          foo = Foo(...)
                          any = Any()
                          any.Pack(foo)
                          ...
                          if any.Is(Foo.DESCRIPTOR):
                            any.Unpack(foo)
                            ...

                       Example 4: Pack and unpack a message in Go

                           foo := &pb.Foo{...}
                           any, err := ptypes.MarshalAny(foo)
                           ...
                           foo := &pb.Foo{}
                           if err := ptypes.UnmarshalAny(any, foo); err != nil {
                             ...
                           }

                      The pack methods provided by protobuf library will by default use
                      'type.googleapis.com/full.type.name' as the type URL and the unpack
                      methods only use the fully qualified type name after the last '/'
                      in the type URL, for example "foo.bar.com/x/y.z" will yield type
                      name "y.z".


                      JSON
                      ====
                      The JSON representation of an `Any` value uses the regular
                      representation of the deserialized, embedded message, with an
                      additional field `@type` which contains the type URL. Example:

                          package google.profile;
                          message Person {
                            string first_name = 1;
                            string last_name = 2;
                          }

                          {
                            "@type": "type.googleapis.com/google.profile.Person",
                            "firstName": <string>,
                            "lastName": <string>
                          }

                      If the embedded message type is well-known and has a custom JSON
                      representation, that representation will be embedded adding a field
                      `value` which holds the custom JSON in addition to the `@type`
                      field. Example (for message [google.protobuf.Duration][]):

                          {
                            "@type": "type.googleapis.com/google.protobuf.Duration",
                            "value": "1.212s"
                          }
                  client_id:
                    title: client ID associated with the consensus state
                    type: string
                  proof:
                    title: merkle proof of existence
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    format: byte
                  proof_height:
                    title: height at which the proof was retrieved
                    type: object
                    properties:
                      revision_number:
                        title: the revision that the client is currently on
                        type: string
                        format: uint64
                      revision_height:
                        title: the height within the given revision
                        type: string
                        format: uint64
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/next_sequence:
    get:
      tags:
      - Query
      summary: NextSequenceReceive returns the next receive sequence for a given channel.
      operationId: NextSequenceReceive
      parameters:
      - name: channel_id
        in: path
        description: channel unique identifier
        required: true
        schema:
          type: string
      - name: port_id
        in: path
        description: port unique identifier
        required: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                title: |-
                  QuerySequenceResponse is the request type for the
                  Query/QueryNextSequenceReceiveResponse RPC method
                type: object
                properties:
                  next_sequence_receive:
                    title: next sequence receive number
                    type: string
                    format: uint64
                  proof:
                    title: merkle proof of existence
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    format: byte
                  proof_height:
                    title: height at which the proof was retrieved
                    type: object
                    properties:
                      revision_number:
                        title: the revision that the client is currently on
                        type: string
                        format: uint64
                      revision_height:
                        title: the height within the given revision
                        type: string
                        format: uint64
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_acknowledgements:
    get:
      tags:
      - Query
      summary: |-
        PacketAcknowledgements returns all the packet acknowledgements associated
        with a channel.
      operationId: PacketAcknowledgements
      parameters:
      - name: channel_id
        in: path
        description: channel unique identifier
        required: true
        schema:
          type: string
      - name: port_id
        in: path
        description: port unique identifier
        required: true
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      - name: packet_commitment_sequences
        in: query
        description: list of packet sequences.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            format: uint64
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                title: |-
                  QueryPacketAcknowledgemetsResponse is the request type for the
                  Query/QueryPacketAcknowledgements RPC method
                type: object
                properties:
                  acknowledgements:
                    type: array
                    items:
                      type: object
                      properties:
                        port_id:
                          type: string
                          description: channel port identifier.
                        channel_id:
                          type: string
                          description: channel unique identifier.
                        sequence:
                          type: string
                          description: packet sequence.
                          format: uint64
                        data:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: embedded data that represents packet state.
                          format: byte
                      description: |-
                        PacketState defines the generic type necessary to retrieve and store
                        packet commitments, acknowledgements, and receipts.
                        Caller is responsible for knowing the context necessary to interpret this
                        state as a commitment, acknowledgement, or a receipt.
                  pagination:
                    title: pagination response
                    type: object
                    properties:
                      next_key:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: |-
                      PageResponse is to be embedded in gRPC response messages where the
                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
                  height:
                    title: query block height
                    type: object
                    properties:
                      revision_number:
                        title: the revision that the client is currently on
                        type: string
                        format: uint64
                      revision_height:
                        title: the height within the given revision
                        type: string
                        format: uint64
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_acks/{sequence}:
    get:
      tags:
      - Query
      summary: PacketAcknowledgement queries a stored packet acknowledgement hash.
      operationId: PacketAcknowledgement
      parameters:
      - name: channel_id
        in: path
        description: channel unique identifier
        required: true
        schema:
          type: string
      - name: port_id
        in: path
        description: port unique identifier
        required: true
        schema:
          type: string
      - name: sequence
        in: path
        description: packet sequence
        required: true
        schema:
          type: string
          format: uint64
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                title: |-
                  QueryPacketAcknowledgementResponse defines the client query response for a
                  packet which also includes a proof and the height from which the
                  proof was retrieved
                type: object
                properties:
                  acknowledgement:
                    title: packet associated with the request fields
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    format: byte
                  proof:
                    title: merkle proof of existence
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    format: byte
                  proof_height:
                    title: height at which the proof was retrieved
                    type: object
                    properties:
                      revision_number:
                        title: the revision that the client is currently on
                        type: string
                        format: uint64
                      revision_height:
                        title: the height within the given revision
                        type: string
                        format: uint64
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_commitments:
    get:
      tags:
      - Query
      summary: |-
        PacketCommitments returns all the packet commitments hashes associated
        with a channel.
      operationId: PacketCommitments
      parameters:
      - name: channel_id
        in: path
        description: channel unique identifier
        required: true
        schema:
          type: string
      - name: port_id
        in: path
        description: port unique identifier
        required: true
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                title: |-
                  QueryPacketCommitmentsResponse is the request type for the
                  Query/QueryPacketCommitments RPC method
                type: object
                properties:
                  commitments:
                    type: array
                    items:
                      type: object
                      properties:
                        port_id:
                          type: string
                          description: channel port identifier.
                        channel_id:
                          type: string
                          description: channel unique identifier.
                        sequence:
                          type: string
                          description: packet sequence.
                          format: uint64
                        data:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: embedded data that represents packet state.
                          format: byte
                      description: |-
                        PacketState defines the generic type necessary to retrieve and store
                        packet commitments, acknowledgements, and receipts.
                        Caller is responsible for knowing the context necessary to interpret this
                        state as a commitment, acknowledgement, or a receipt.
                  pagination:
                    title: pagination response
                    type: object
                    properties:
                      next_key:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: |-
                      PageResponse is to be embedded in gRPC response messages where the
                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
                  height:
                    title: query block height
                    type: object
                    properties:
                      revision_number:
                        title: the revision that the client is currently on
                        type: string
                        format: uint64
                      revision_height:
                        title: the height within the given revision
                        type: string
                        format: uint64
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_commitments/{packet_ack_sequences}/unreceived_acks:
    get:
      tags:
      - Query
      summary: |-
        UnreceivedAcks returns all the unreceived IBC acknowledgements associated
        with a channel and sequences.
      operationId: UnreceivedAcks
      parameters:
      - name: channel_id
        in: path
        description: channel unique identifier
        required: true
        schema:
          type: string
      - name: port_id
        in: path
        description: port unique identifier
        required: true
        schema:
          type: string
      - name: packet_ack_sequences
        in: path
        description: list of acknowledgement sequences
        required: true
        style: simple
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uint64
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                title: |-
                  QueryUnreceivedAcksResponse is the response type for the
                  Query/UnreceivedAcks RPC method
                type: object
                properties:
                  sequences:
                    title: list of unreceived acknowledgement sequences
                    type: array
                    items:
                      type: string
                      format: uint64
                  height:
                    title: query block height
                    type: object
                    properties:
                      revision_number:
                        title: the revision that the client is currently on
                        type: string
                        format: uint64
                      revision_height:
                        title: the height within the given revision
                        type: string
                        format: uint64
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_commitments/{packet_commitment_sequences}/unreceived_packets:
    get:
      tags:
      - Query
      summary: |-
        UnreceivedPackets returns all the unreceived IBC packets associated with a
        channel and sequences.
      operationId: UnreceivedPackets
      parameters:
      - name: channel_id
        in: path
        description: channel unique identifier
        required: true
        schema:
          type: string
      - name: port_id
        in: path
        description: port unique identifier
        required: true
        schema:
          type: string
      - name: packet_commitment_sequences
        in: path
        description: list of packet sequences
        required: true
        style: simple
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uint64
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                title: |-
                  QueryUnreceivedPacketsResponse is the response type for the
                  Query/UnreceivedPacketCommitments RPC method
                type: object
                properties:
                  sequences:
                    title: list of unreceived packet sequences
                    type: array
                    items:
                      type: string
                      format: uint64
                  height:
                    title: query block height
                    type: object
                    properties:
                      revision_number:
                        title: the revision that the client is currently on
                        type: string
                        format: uint64
                      revision_height:
                        title: the height within the given revision
                        type: string
                        format: uint64
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_commitments/{sequence}:
    get:
      tags:
      - Query
      summary: PacketCommitment queries a stored packet commitment hash.
      operationId: PacketCommitment
      parameters:
      - name: channel_id
        in: path
        description: channel unique identifier
        required: true
        schema:
          type: string
      - name: port_id
        in: path
        description: port unique identifier
        required: true
        schema:
          type: string
      - name: sequence
        in: path
        description: packet sequence
        required: true
        schema:
          type: string
          format: uint64
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                title: |-
                  QueryPacketCommitmentResponse defines the client query response for a packet
                  which also includes a proof and the height from which the proof was
                  retrieved
                type: object
                properties:
                  commitment:
                    title: packet associated with the request fields
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    format: byte
                  proof:
                    title: merkle proof of existence
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    format: byte
                  proof_height:
                    title: height at which the proof was retrieved
                    type: object
                    properties:
                      revision_number:
                        title: the revision that the client is currently on
                        type: string
                        format: uint64
                      revision_height:
                        title: the height within the given revision
                        type: string
                        format: uint64
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_receipts/{sequence}:
    get:
      tags:
      - Query
      summary: |-
        PacketReceipt queries if a given packet sequence has been received on the
        queried chain
      operationId: PacketReceipt
      parameters:
      - name: channel_id
        in: path
        description: channel unique identifier
        required: true
        schema:
          type: string
      - name: port_id
        in: path
        description: port unique identifier
        required: true
        schema:
          type: string
      - name: sequence
        in: path
        description: packet sequence
        required: true
        schema:
          type: string
          format: uint64
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                title: |-
                  QueryPacketReceiptResponse defines the client query response for a packet
                  receipt which also includes a proof, and the height from which the proof was
                  retrieved
                type: object
                properties:
                  received:
                    title: success flag for if receipt exists
                    type: boolean
                  proof:
                    title: merkle proof of existence
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    format: byte
                  proof_height:
                    title: height at which the proof was retrieved
                    type: object
                    properties:
                      revision_number:
                        title: the revision that the client is currently on
                        type: string
                        format: uint64
                      revision_height:
                        title: the height within the given revision
                        type: string
                        format: uint64
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/core/channel/v1/connections/{connection}/channels:
    get:
      tags:
      - Query
      summary: |-
        ConnectionChannels queries all the channels associated with a connection
        end.
      operationId: ConnectionChannels
      parameters:
      - name: connection
        in: path
        description: connection unique identifier
        required: true
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                title: |-
                  QueryConnectionChannelsResponse is the Response type for the
                  Query/QueryConnectionChannels RPC method
                type: object
                properties:
                  channels:
                    type: array
                    description: list of channels associated with a connection.
                    items:
                      type: object
                      properties:
                        state:
                          title: current state of the channel end
                          type: string
                          description: |-
                            State defines if a channel is in one of the following states:
                            CLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.

                             - STATE_UNINITIALIZED_UNSPECIFIED: Default State
                             - STATE_INIT: A channel has just started the opening handshake.
                             - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.
                             - STATE_OPEN: A channel has completed the handshake. Open channels are
                            ready to send and receive packets.
                             - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive
                            packets.
                          default: STATE_UNINITIALIZED_UNSPECIFIED
                          enum:
                          - STATE_UNINITIALIZED_UNSPECIFIED
                          - STATE_INIT
                          - STATE_TRYOPEN
                          - STATE_OPEN
                          - STATE_CLOSED
                        ordering:
                          title: whether the channel is ordered or unordered
                          type: string
                          description: |-
                            - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering
                             - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
                            which they were sent.
                             - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
                          default: ORDER_NONE_UNSPECIFIED
                          enum:
                          - ORDER_NONE_UNSPECIFIED
                          - ORDER_UNORDERED
                          - ORDER_ORDERED
                        counterparty:
                          title: counterparty channel end
                          type: object
                          properties:
                            port_id:
                              type: string
                              description: port on the counterparty chain which owns
                                the other end of the channel.
                            channel_id:
                              title: channel end on the counterparty chain
                              type: string
                        connection_hops:
                          title: |-
                            list of connection identifiers, in order, along which packets sent on
                            this channel will travel
                          type: array
                          items:
                            type: string
                        version:
                          title: "opaque channel version, which is agreed upon during\
                            \ the handshake"
                          type: string
                        port_id:
                          title: port identifier
                          type: string
                        channel_id:
                          title: channel identifier
                          type: string
                      description: |-
                        IdentifiedChannel defines a channel with additional port and channel
                        identifier fields.
                  pagination:
                    title: pagination response
                    type: object
                    properties:
                      next_key:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: |-
                      PageResponse is to be embedded in gRPC response messages where the
                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
                  height:
                    title: query block height
                    type: object
                    properties:
                      revision_number:
                        title: the revision that the client is currently on
                        type: string
                        format: uint64
                      revision_height:
                        title: the height within the given revision
                        type: string
                        format: uint64
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/core/client/v1/client_states:
    get:
      tags:
      - Query
      summary: ClientStates queries all the IBC light clients of a chain.
      operationId: ClientStates
      parameters:
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  client_states:
                    type: array
                    description: list of stored ClientStates of the chain.
                    items:
                      type: object
                      properties:
                        client_id:
                          title: client identifier
                          type: string
                        client_state:
                          title: client state
                          type: object
                          properties:
                            type_url:
                              type: string
                              description: |-
                                A URL/resource name that uniquely identifies the type of the serialized
                                protocol buffer message. This string must contain at least
                                one "/" character. The last segment of the URL's path must represent
                                the fully qualified name of the type (as in
                                `path/google.protobuf.Duration`). The name should be in a canonical form
                                (e.g., leading "." is not accepted).

                                In practice, teams usually precompile into the binary all types that they
                                expect it to use in the context of Any. However, for URLs which use the
                                scheme `http`, `https`, or no scheme, one can optionally set up a type
                                server that maps type URLs to message definitions as follows:

                                * If no scheme is provided, `https` is assumed.
                                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                  value in binary format, or produce an error.
                                * Applications are allowed to cache lookup results based on the
                                  URL, or have them precompiled into a binary to avoid any
                                  lookup. Therefore, binary compatibility needs to be preserved
                                  on changes to types. (Use versioned type names to manage
                                  breaking changes.)

                                Note: this functionality is not currently available in the official
                                protobuf release, and it is not used for type URLs beginning with
                                type.googleapis.com.

                                Schemes other than `http`, `https` (or the empty scheme) might be
                                used with implementation specific semantics.
                            value:
                              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                              type: string
                              description: Must be a valid serialized protocol buffer
                                of the above specified type.
                              format: byte
                          description: |-
                            `Any` contains an arbitrary serialized protocol buffer message along with a
                            URL that describes the type of the serialized message.

                            Protobuf library provides support to pack/unpack Any values in the form
                            of utility functions or additional generated methods of the Any type.

                            Example 1: Pack and unpack a message in C++.

                                Foo foo = ...;
                                Any any;
                                any.PackFrom(foo);
                                ...
                                if (any.UnpackTo(&foo)) {
                                  ...
                                }

                            Example 2: Pack and unpack a message in Java.

                                Foo foo = ...;
                                Any any = Any.pack(foo);
                                ...
                                if (any.is(Foo.class)) {
                                  foo = any.unpack(Foo.class);
                                }

                             Example 3: Pack and unpack a message in Python.

                                foo = Foo(...)
                                any = Any()
                                any.Pack(foo)
                                ...
                                if any.Is(Foo.DESCRIPTOR):
                                  any.Unpack(foo)
                                  ...

                             Example 4: Pack and unpack a message in Go

                                 foo := &pb.Foo{...}
                                 any, err := ptypes.MarshalAny(foo)
                                 ...
                                 foo := &pb.Foo{}
                                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                                   ...
                                 }

                            The pack methods provided by protobuf library will by default use
                            'type.googleapis.com/full.type.name' as the type URL and the unpack
                            methods only use the fully qualified type name after the last '/'
                            in the type URL, for example "foo.bar.com/x/y.z" will yield type
                            name "y.z".


                            JSON
                            ====
                            The JSON representation of an `Any` value uses the regular
                            representation of the deserialized, embedded message, with an
                            additional field `@type` which contains the type URL. Example:

                                package google.profile;
                                message Person {
                                  string first_name = 1;
                                  string last_name = 2;
                                }

                                {
                                  "@type": "type.googleapis.com/google.profile.Person",
                                  "firstName": <string>,
                                  "lastName": <string>
                                }

                            If the embedded message type is well-known and has a custom JSON
                            representation, that representation will be embedded adding a field
                            `value` which holds the custom JSON in addition to the `@type`
                            field. Example (for message [google.protobuf.Duration][]):

                                {
                                  "@type": "type.googleapis.com/google.protobuf.Duration",
                                  "value": "1.212s"
                                }
                      description: |-
                        IdentifiedClientState defines a client state with an additional client
                        identifier field.
                  pagination:
                    title: pagination response
                    type: object
                    properties:
                      next_key:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: |-
                      PageResponse is to be embedded in gRPC response messages where the
                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
                description: |-
                  QueryClientStatesResponse is the response type for the Query/ClientStates RPC
                  method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/core/client/v1/client_states/{client_id}:
    get:
      tags:
      - Query
      summary: ClientState queries an IBC light client.
      operationId: ClientState
      parameters:
      - name: client_id
        in: path
        description: client state unique identifier
        required: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  client_state:
                    title: client state associated with the request identifier
                    type: object
                    properties:
                      type_url:
                        type: string
                        description: |-
                          A URL/resource name that uniquely identifies the type of the serialized
                          protocol buffer message. This string must contain at least
                          one "/" character. The last segment of the URL's path must represent
                          the fully qualified name of the type (as in
                          `path/google.protobuf.Duration`). The name should be in a canonical form
                          (e.g., leading "." is not accepted).

                          In practice, teams usually precompile into the binary all types that they
                          expect it to use in the context of Any. However, for URLs which use the
                          scheme `http`, `https`, or no scheme, one can optionally set up a type
                          server that maps type URLs to message definitions as follows:

                          * If no scheme is provided, `https` is assumed.
                          * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                            value in binary format, or produce an error.
                          * Applications are allowed to cache lookup results based on the
                            URL, or have them precompiled into a binary to avoid any
                            lookup. Therefore, binary compatibility needs to be preserved
                            on changes to types. (Use versioned type names to manage
                            breaking changes.)

                          Note: this functionality is not currently available in the official
                          protobuf release, and it is not used for type URLs beginning with
                          type.googleapis.com.

                          Schemes other than `http`, `https` (or the empty scheme) might be
                          used with implementation specific semantics.
                      value:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: Must be a valid serialized protocol buffer of
                          the above specified type.
                        format: byte
                    description: |-
                      `Any` contains an arbitrary serialized protocol buffer message along with a
                      URL that describes the type of the serialized message.

                      Protobuf library provides support to pack/unpack Any values in the form
                      of utility functions or additional generated methods of the Any type.

                      Example 1: Pack and unpack a message in C++.

                          Foo foo = ...;
                          Any any;
                          any.PackFrom(foo);
                          ...
                          if (any.UnpackTo(&foo)) {
                            ...
                          }

                      Example 2: Pack and unpack a message in Java.

                          Foo foo = ...;
                          Any any = Any.pack(foo);
                          ...
                          if (any.is(Foo.class)) {
                            foo = any.unpack(Foo.class);
                          }

                       Example 3: Pack and unpack a message in Python.

                          foo = Foo(...)
                          any = Any()
                          any.Pack(foo)
                          ...
                          if any.Is(Foo.DESCRIPTOR):
                            any.Unpack(foo)
                            ...

                       Example 4: Pack and unpack a message in Go

                           foo := &pb.Foo{...}
                           any, err := ptypes.MarshalAny(foo)
                           ...
                           foo := &pb.Foo{}
                           if err := ptypes.UnmarshalAny(any, foo); err != nil {
                             ...
                           }

                      The pack methods provided by protobuf library will by default use
                      'type.googleapis.com/full.type.name' as the type URL and the unpack
                      methods only use the fully qualified type name after the last '/'
                      in the type URL, for example "foo.bar.com/x/y.z" will yield type
                      name "y.z".


                      JSON
                      ====
                      The JSON representation of an `Any` value uses the regular
                      representation of the deserialized, embedded message, with an
                      additional field `@type` which contains the type URL. Example:

                          package google.profile;
                          message Person {
                            string first_name = 1;
                            string last_name = 2;
                          }

                          {
                            "@type": "type.googleapis.com/google.profile.Person",
                            "firstName": <string>,
                            "lastName": <string>
                          }

                      If the embedded message type is well-known and has a custom JSON
                      representation, that representation will be embedded adding a field
                      `value` which holds the custom JSON in addition to the `@type`
                      field. Example (for message [google.protobuf.Duration][]):

                          {
                            "@type": "type.googleapis.com/google.protobuf.Duration",
                            "value": "1.212s"
                          }
                  proof:
                    title: merkle proof of existence
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    format: byte
                  proof_height:
                    title: height at which the proof was retrieved
                    type: object
                    properties:
                      revision_number:
                        title: the revision that the client is currently on
                        type: string
                        format: uint64
                      revision_height:
                        title: the height within the given revision
                        type: string
                        format: uint64
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
                description: |-
                  QueryClientStateResponse is the response type for the Query/ClientState RPC
                  method. Besides the client state, it includes a proof and the height from
                  which the proof was retrieved.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/core/client/v1/client_status/{client_id}:
    get:
      tags:
      - Query
      summary: Status queries the status of an IBC client.
      operationId: ClientStatus
      parameters:
      - name: client_id
        in: path
        description: client unique identifier
        required: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  status:
                    type: string
                description: |-
                  QueryClientStatusResponse is the response type for the Query/ClientStatus RPC
                  method. It returns the current status of the IBC client.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/core/client/v1/consensus_states/{client_id}:
    get:
      tags:
      - Query
      summary: |-
        ConsensusStates queries all the consensus state associated with a given
        client.
      operationId: ConsensusStates
      parameters:
      - name: client_id
        in: path
        description: client identifier
        required: true
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                title: |-
                  QueryConsensusStatesResponse is the response type for the
                  Query/ConsensusStates RPC method
                type: object
                properties:
                  consensus_states:
                    title: consensus states associated with the identifier
                    type: array
                    items:
                      type: object
                      properties:
                        height:
                          title: consensus state height
                          type: object
                          properties:
                            revision_number:
                              title: the revision that the client is currently on
                              type: string
                              format: uint64
                            revision_height:
                              title: the height within the given revision
                              type: string
                              format: uint64
                          description: |-
                            Normally the RevisionHeight is incremented at each height while keeping
                            RevisionNumber the same. However some consensus algorithms may choose to
                            reset the height in certain conditions e.g. hard forks, state-machine
                            breaking changes In these cases, the RevisionNumber is incremented so that
                            height continues to be monitonically increasing even as the RevisionHeight
                            gets reset
                        consensus_state:
                          title: consensus state
                          type: object
                          properties:
                            type_url:
                              type: string
                              description: |-
                                A URL/resource name that uniquely identifies the type of the serialized
                                protocol buffer message. This string must contain at least
                                one "/" character. The last segment of the URL's path must represent
                                the fully qualified name of the type (as in
                                `path/google.protobuf.Duration`). The name should be in a canonical form
                                (e.g., leading "." is not accepted).

                                In practice, teams usually precompile into the binary all types that they
                                expect it to use in the context of Any. However, for URLs which use the
                                scheme `http`, `https`, or no scheme, one can optionally set up a type
                                server that maps type URLs to message definitions as follows:

                                * If no scheme is provided, `https` is assumed.
                                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                  value in binary format, or produce an error.
                                * Applications are allowed to cache lookup results based on the
                                  URL, or have them precompiled into a binary to avoid any
                                  lookup. Therefore, binary compatibility needs to be preserved
                                  on changes to types. (Use versioned type names to manage
                                  breaking changes.)

                                Note: this functionality is not currently available in the official
                                protobuf release, and it is not used for type URLs beginning with
                                type.googleapis.com.

                                Schemes other than `http`, `https` (or the empty scheme) might be
                                used with implementation specific semantics.
                            value:
                              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                              type: string
                              description: Must be a valid serialized protocol buffer
                                of the above specified type.
                              format: byte
                          description: |-
                            `Any` contains an arbitrary serialized protocol buffer message along with a
                            URL that describes the type of the serialized message.

                            Protobuf library provides support to pack/unpack Any values in the form
                            of utility functions or additional generated methods of the Any type.

                            Example 1: Pack and unpack a message in C++.

                                Foo foo = ...;
                                Any any;
                                any.PackFrom(foo);
                                ...
                                if (any.UnpackTo(&foo)) {
                                  ...
                                }

                            Example 2: Pack and unpack a message in Java.

                                Foo foo = ...;
                                Any any = Any.pack(foo);
                                ...
                                if (any.is(Foo.class)) {
                                  foo = any.unpack(Foo.class);
                                }

                             Example 3: Pack and unpack a message in Python.

                                foo = Foo(...)
                                any = Any()
                                any.Pack(foo)
                                ...
                                if any.Is(Foo.DESCRIPTOR):
                                  any.Unpack(foo)
                                  ...

                             Example 4: Pack and unpack a message in Go

                                 foo := &pb.Foo{...}
                                 any, err := ptypes.MarshalAny(foo)
                                 ...
                                 foo := &pb.Foo{}
                                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                                   ...
                                 }

                            The pack methods provided by protobuf library will by default use
                            'type.googleapis.com/full.type.name' as the type URL and the unpack
                            methods only use the fully qualified type name after the last '/'
                            in the type URL, for example "foo.bar.com/x/y.z" will yield type
                            name "y.z".


                            JSON
                            ====
                            The JSON representation of an `Any` value uses the regular
                            representation of the deserialized, embedded message, with an
                            additional field `@type` which contains the type URL. Example:

                                package google.profile;
                                message Person {
                                  string first_name = 1;
                                  string last_name = 2;
                                }

                                {
                                  "@type": "type.googleapis.com/google.profile.Person",
                                  "firstName": <string>,
                                  "lastName": <string>
                                }

                            If the embedded message type is well-known and has a custom JSON
                            representation, that representation will be embedded adding a field
                            `value` which holds the custom JSON in addition to the `@type`
                            field. Example (for message [google.protobuf.Duration][]):

                                {
                                  "@type": "type.googleapis.com/google.protobuf.Duration",
                                  "value": "1.212s"
                                }
                      description: |-
                        ConsensusStateWithHeight defines a consensus state with an additional height
                        field.
                  pagination:
                    title: pagination response
                    type: object
                    properties:
                      next_key:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: |-
                      PageResponse is to be embedded in gRPC response messages where the
                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/core/client/v1/consensus_states/{client_id}/heights:
    get:
      tags:
      - Query
      summary: ConsensusStateHeights queries the height of every consensus states
        associated with a given client.
      operationId: ConsensusStateHeights
      parameters:
      - name: client_id
        in: path
        description: client identifier
        required: true
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                title: |-
                  QueryConsensusStateHeightsResponse is the response type for the
                  Query/ConsensusStateHeights RPC method
                type: object
                properties:
                  consensus_state_heights:
                    title: consensus state heights
                    type: array
                    items:
                      title: |-
                        Height is a monotonically increasing data type
                        that can be compared against another Height for the purposes of updating and
                        freezing clients
                      type: object
                      properties:
                        revision_number:
                          title: the revision that the client is currently on
                          type: string
                          format: uint64
                        revision_height:
                          title: the height within the given revision
                          type: string
                          format: uint64
                      description: |-
                        Normally the RevisionHeight is incremented at each height while keeping
                        RevisionNumber the same. However some consensus algorithms may choose to
                        reset the height in certain conditions e.g. hard forks, state-machine
                        breaking changes In these cases, the RevisionNumber is incremented so that
                        height continues to be monitonically increasing even as the RevisionHeight
                        gets reset
                  pagination:
                    title: pagination response
                    type: object
                    properties:
                      next_key:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: |-
                      PageResponse is to be embedded in gRPC response messages where the
                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/core/client/v1/consensus_states/{client_id}/revision/{revision_number}/height/{revision_height}:
    get:
      tags:
      - Query
      summary: |-
        ConsensusState queries a consensus state associated with a client state at
        a given height.
      operationId: ConsensusState
      parameters:
      - name: client_id
        in: path
        description: client identifier
        required: true
        schema:
          type: string
      - name: revision_number
        in: path
        description: consensus state revision number
        required: true
        schema:
          type: string
          format: uint64
      - name: revision_height
        in: path
        description: consensus state revision height
        required: true
        schema:
          type: string
          format: uint64
      - name: latest_height
        in: query
        description: |-
          latest_height overrrides the height field and queries the latest stored
          ConsensusState.
        schema:
          type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                title: |-
                  QueryConsensusStateResponse is the response type for the Query/ConsensusState
                  RPC method
                type: object
                properties:
                  consensus_state:
                    title: consensus state associated with the client identifier at
                      the given height
                    type: object
                    properties:
                      type_url:
                        type: string
                        description: |-
                          A URL/resource name that uniquely identifies the type of the serialized
                          protocol buffer message. This string must contain at least
                          one "/" character. The last segment of the URL's path must represent
                          the fully qualified name of the type (as in
                          `path/google.protobuf.Duration`). The name should be in a canonical form
                          (e.g., leading "." is not accepted).

                          In practice, teams usually precompile into the binary all types that they
                          expect it to use in the context of Any. However, for URLs which use the
                          scheme `http`, `https`, or no scheme, one can optionally set up a type
                          server that maps type URLs to message definitions as follows:

                          * If no scheme is provided, `https` is assumed.
                          * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                            value in binary format, or produce an error.
                          * Applications are allowed to cache lookup results based on the
                            URL, or have them precompiled into a binary to avoid any
                            lookup. Therefore, binary compatibility needs to be preserved
                            on changes to types. (Use versioned type names to manage
                            breaking changes.)

                          Note: this functionality is not currently available in the official
                          protobuf release, and it is not used for type URLs beginning with
                          type.googleapis.com.

                          Schemes other than `http`, `https` (or the empty scheme) might be
                          used with implementation specific semantics.
                      value:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: Must be a valid serialized protocol buffer of
                          the above specified type.
                        format: byte
                    description: |-
                      `Any` contains an arbitrary serialized protocol buffer message along with a
                      URL that describes the type of the serialized message.

                      Protobuf library provides support to pack/unpack Any values in the form
                      of utility functions or additional generated methods of the Any type.

                      Example 1: Pack and unpack a message in C++.

                          Foo foo = ...;
                          Any any;
                          any.PackFrom(foo);
                          ...
                          if (any.UnpackTo(&foo)) {
                            ...
                          }

                      Example 2: Pack and unpack a message in Java.

                          Foo foo = ...;
                          Any any = Any.pack(foo);
                          ...
                          if (any.is(Foo.class)) {
                            foo = any.unpack(Foo.class);
                          }

                       Example 3: Pack and unpack a message in Python.

                          foo = Foo(...)
                          any = Any()
                          any.Pack(foo)
                          ...
                          if any.Is(Foo.DESCRIPTOR):
                            any.Unpack(foo)
                            ...

                       Example 4: Pack and unpack a message in Go

                           foo := &pb.Foo{...}
                           any, err := ptypes.MarshalAny(foo)
                           ...
                           foo := &pb.Foo{}
                           if err := ptypes.UnmarshalAny(any, foo); err != nil {
                             ...
                           }

                      The pack methods provided by protobuf library will by default use
                      'type.googleapis.com/full.type.name' as the type URL and the unpack
                      methods only use the fully qualified type name after the last '/'
                      in the type URL, for example "foo.bar.com/x/y.z" will yield type
                      name "y.z".


                      JSON
                      ====
                      The JSON representation of an `Any` value uses the regular
                      representation of the deserialized, embedded message, with an
                      additional field `@type` which contains the type URL. Example:

                          package google.profile;
                          message Person {
                            string first_name = 1;
                            string last_name = 2;
                          }

                          {
                            "@type": "type.googleapis.com/google.profile.Person",
                            "firstName": <string>,
                            "lastName": <string>
                          }

                      If the embedded message type is well-known and has a custom JSON
                      representation, that representation will be embedded adding a field
                      `value` which holds the custom JSON in addition to the `@type`
                      field. Example (for message [google.protobuf.Duration][]):

                          {
                            "@type": "type.googleapis.com/google.protobuf.Duration",
                            "value": "1.212s"
                          }
                  proof:
                    title: merkle proof of existence
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    format: byte
                  proof_height:
                    title: |-
                      Height is a monotonically increasing data type
                      that can be compared against another Height for the purposes of updating and
                      freezing clients
                    type: object
                    properties:
                      revision_number:
                        title: the revision that the client is currently on
                        type: string
                        format: uint64
                      revision_height:
                        title: the height within the given revision
                        type: string
                        format: uint64
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/core/client/v1/params:
    get:
      tags:
      - Query
      summary: ClientParams queries all parameters of the ibc client submodule.
      operationId: ClientParams
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  params:
                    type: object
                    properties:
                      allowed_clients:
                        type: array
                        description: |-
                          allowed_clients defines the list of allowed client state types which can be created
                          and interacted with. If a client type is removed from the allowed clients list, usage
                          of this client will be disabled until it is added again to the list.
                        items:
                          type: string
                    description: params defines the parameters of the module.
                description: |-
                  QueryClientParamsResponse is the response type for the Query/ClientParams RPC
                  method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/core/client/v1/upgraded_client_states:
    get:
      tags:
      - Query
      summary: UpgradedClientState queries an Upgraded IBC light client.
      operationId: UpgradedClientState
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  upgraded_client_state:
                    title: client state associated with the request identifier
                    type: object
                    properties:
                      type_url:
                        type: string
                        description: |-
                          A URL/resource name that uniquely identifies the type of the serialized
                          protocol buffer message. This string must contain at least
                          one "/" character. The last segment of the URL's path must represent
                          the fully qualified name of the type (as in
                          `path/google.protobuf.Duration`). The name should be in a canonical form
                          (e.g., leading "." is not accepted).

                          In practice, teams usually precompile into the binary all types that they
                          expect it to use in the context of Any. However, for URLs which use the
                          scheme `http`, `https`, or no scheme, one can optionally set up a type
                          server that maps type URLs to message definitions as follows:

                          * If no scheme is provided, `https` is assumed.
                          * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                            value in binary format, or produce an error.
                          * Applications are allowed to cache lookup results based on the
                            URL, or have them precompiled into a binary to avoid any
                            lookup. Therefore, binary compatibility needs to be preserved
                            on changes to types. (Use versioned type names to manage
                            breaking changes.)

                          Note: this functionality is not currently available in the official
                          protobuf release, and it is not used for type URLs beginning with
                          type.googleapis.com.

                          Schemes other than `http`, `https` (or the empty scheme) might be
                          used with implementation specific semantics.
                      value:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: Must be a valid serialized protocol buffer of
                          the above specified type.
                        format: byte
                    description: |-
                      `Any` contains an arbitrary serialized protocol buffer message along with a
                      URL that describes the type of the serialized message.

                      Protobuf library provides support to pack/unpack Any values in the form
                      of utility functions or additional generated methods of the Any type.

                      Example 1: Pack and unpack a message in C++.

                          Foo foo = ...;
                          Any any;
                          any.PackFrom(foo);
                          ...
                          if (any.UnpackTo(&foo)) {
                            ...
                          }

                      Example 2: Pack and unpack a message in Java.

                          Foo foo = ...;
                          Any any = Any.pack(foo);
                          ...
                          if (any.is(Foo.class)) {
                            foo = any.unpack(Foo.class);
                          }

                       Example 3: Pack and unpack a message in Python.

                          foo = Foo(...)
                          any = Any()
                          any.Pack(foo)
                          ...
                          if any.Is(Foo.DESCRIPTOR):
                            any.Unpack(foo)
                            ...

                       Example 4: Pack and unpack a message in Go

                           foo := &pb.Foo{...}
                           any, err := ptypes.MarshalAny(foo)
                           ...
                           foo := &pb.Foo{}
                           if err := ptypes.UnmarshalAny(any, foo); err != nil {
                             ...
                           }

                      The pack methods provided by protobuf library will by default use
                      'type.googleapis.com/full.type.name' as the type URL and the unpack
                      methods only use the fully qualified type name after the last '/'
                      in the type URL, for example "foo.bar.com/x/y.z" will yield type
                      name "y.z".


                      JSON
                      ====
                      The JSON representation of an `Any` value uses the regular
                      representation of the deserialized, embedded message, with an
                      additional field `@type` which contains the type URL. Example:

                          package google.profile;
                          message Person {
                            string first_name = 1;
                            string last_name = 2;
                          }

                          {
                            "@type": "type.googleapis.com/google.profile.Person",
                            "firstName": <string>,
                            "lastName": <string>
                          }

                      If the embedded message type is well-known and has a custom JSON
                      representation, that representation will be embedded adding a field
                      `value` which holds the custom JSON in addition to the `@type`
                      field. Example (for message [google.protobuf.Duration][]):

                          {
                            "@type": "type.googleapis.com/google.protobuf.Duration",
                            "value": "1.212s"
                          }
                description: |-
                  QueryUpgradedClientStateResponse is the response type for the
                  Query/UpgradedClientState RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/core/client/v1/upgraded_consensus_states:
    get:
      tags:
      - Query
      summary: UpgradedConsensusState queries an Upgraded IBC consensus state.
      operationId: IBCUpgradedConsensusState
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  upgraded_consensus_state:
                    title: Consensus state associated with the request identifier
                    type: object
                    properties:
                      type_url:
                        type: string
                        description: |-
                          A URL/resource name that uniquely identifies the type of the serialized
                          protocol buffer message. This string must contain at least
                          one "/" character. The last segment of the URL's path must represent
                          the fully qualified name of the type (as in
                          `path/google.protobuf.Duration`). The name should be in a canonical form
                          (e.g., leading "." is not accepted).

                          In practice, teams usually precompile into the binary all types that they
                          expect it to use in the context of Any. However, for URLs which use the
                          scheme `http`, `https`, or no scheme, one can optionally set up a type
                          server that maps type URLs to message definitions as follows:

                          * If no scheme is provided, `https` is assumed.
                          * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                            value in binary format, or produce an error.
                          * Applications are allowed to cache lookup results based on the
                            URL, or have them precompiled into a binary to avoid any
                            lookup. Therefore, binary compatibility needs to be preserved
                            on changes to types. (Use versioned type names to manage
                            breaking changes.)

                          Note: this functionality is not currently available in the official
                          protobuf release, and it is not used for type URLs beginning with
                          type.googleapis.com.

                          Schemes other than `http`, `https` (or the empty scheme) might be
                          used with implementation specific semantics.
                      value:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: Must be a valid serialized protocol buffer of
                          the above specified type.
                        format: byte
                    description: |-
                      `Any` contains an arbitrary serialized protocol buffer message along with a
                      URL that describes the type of the serialized message.

                      Protobuf library provides support to pack/unpack Any values in the form
                      of utility functions or additional generated methods of the Any type.

                      Example 1: Pack and unpack a message in C++.

                          Foo foo = ...;
                          Any any;
                          any.PackFrom(foo);
                          ...
                          if (any.UnpackTo(&foo)) {
                            ...
                          }

                      Example 2: Pack and unpack a message in Java.

                          Foo foo = ...;
                          Any any = Any.pack(foo);
                          ...
                          if (any.is(Foo.class)) {
                            foo = any.unpack(Foo.class);
                          }

                       Example 3: Pack and unpack a message in Python.

                          foo = Foo(...)
                          any = Any()
                          any.Pack(foo)
                          ...
                          if any.Is(Foo.DESCRIPTOR):
                            any.Unpack(foo)
                            ...

                       Example 4: Pack and unpack a message in Go

                           foo := &pb.Foo{...}
                           any, err := ptypes.MarshalAny(foo)
                           ...
                           foo := &pb.Foo{}
                           if err := ptypes.UnmarshalAny(any, foo); err != nil {
                             ...
                           }

                      The pack methods provided by protobuf library will by default use
                      'type.googleapis.com/full.type.name' as the type URL and the unpack
                      methods only use the fully qualified type name after the last '/'
                      in the type URL, for example "foo.bar.com/x/y.z" will yield type
                      name "y.z".


                      JSON
                      ====
                      The JSON representation of an `Any` value uses the regular
                      representation of the deserialized, embedded message, with an
                      additional field `@type` which contains the type URL. Example:

                          package google.profile;
                          message Person {
                            string first_name = 1;
                            string last_name = 2;
                          }

                          {
                            "@type": "type.googleapis.com/google.profile.Person",
                            "firstName": <string>,
                            "lastName": <string>
                          }

                      If the embedded message type is well-known and has a custom JSON
                      representation, that representation will be embedded adding a field
                      `value` which holds the custom JSON in addition to the `@type`
                      field. Example (for message [google.protobuf.Duration][]):

                          {
                            "@type": "type.googleapis.com/google.protobuf.Duration",
                            "value": "1.212s"
                          }
                description: |-
                  QueryUpgradedConsensusStateResponse is the response type for the
                  Query/UpgradedConsensusState RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/core/connection/v1/client_connections/{client_id}:
    get:
      tags:
      - Query
      summary: |-
        ClientConnections queries the connection paths associated with a client
        state.
      operationId: ClientConnections
      parameters:
      - name: client_id
        in: path
        description: client identifier associated with a connection
        required: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                title: |-
                  QueryClientConnectionsResponse is the response type for the
                  Query/ClientConnections RPC method
                type: object
                properties:
                  connection_paths:
                    type: array
                    description: slice of all the connection paths associated with
                      a client.
                    items:
                      type: string
                  proof:
                    title: merkle proof of existence
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    format: byte
                  proof_height:
                    title: height at which the proof was generated
                    type: object
                    properties:
                      revision_number:
                        title: the revision that the client is currently on
                        type: string
                        format: uint64
                      revision_height:
                        title: the height within the given revision
                        type: string
                        format: uint64
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/core/connection/v1/connections:
    get:
      tags:
      - Query
      summary: Connections queries all the IBC connections of a chain.
      operationId: Connections
      parameters:
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  connections:
                    type: array
                    description: list of stored connections of the chain.
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: connection identifier.
                        client_id:
                          type: string
                          description: client associated with this connection.
                        versions:
                          title: |-
                            IBC version which can be utilised to determine encodings or protocols for
                            channels or packets utilising this connection
                          type: array
                          items:
                            type: object
                            properties:
                              identifier:
                                title: unique version identifier
                                type: string
                              features:
                                title: list of features compatible with the specified
                                  identifier
                                type: array
                                items:
                                  type: string
                            description: |-
                              Version defines the versioning scheme used to negotiate the IBC verison in
                              the connection handshake.
                        state:
                          type: string
                          description: current state of the connection end.
                          default: STATE_UNINITIALIZED_UNSPECIFIED
                          enum:
                          - STATE_UNINITIALIZED_UNSPECIFIED
                          - STATE_INIT
                          - STATE_TRYOPEN
                          - STATE_OPEN
                        counterparty:
                          type: object
                          properties:
                            client_id:
                              type: string
                              description: |-
                                identifies the client on the counterparty chain associated with a given
                                connection.
                            connection_id:
                              type: string
                              description: |-
                                identifies the connection end on the counterparty chain associated with a
                                given connection.
                            prefix:
                              title: |-
                                MerklePrefix is merkle path prefixed to the key.
                                The constructed key from the Path and the key will be append(Path.KeyPath,
                                append(Path.KeyPrefix, key...))
                              type: object
                              properties:
                                key_prefix:
                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                  type: string
                                  format: byte
                              description: commitment merkle prefix of the counterparty
                                chain.
                          description: counterparty chain associated with this connection.
                        delay_period:
                          type: string
                          description: delay period associated with this connection.
                          format: uint64
                      description: |-
                        IdentifiedConnection defines a connection with additional connection
                        identifier field.
                  pagination:
                    title: pagination response
                    type: object
                    properties:
                      next_key:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: |-
                      PageResponse is to be embedded in gRPC response messages where the
                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
                  height:
                    title: query block height
                    type: object
                    properties:
                      revision_number:
                        title: the revision that the client is currently on
                        type: string
                        format: uint64
                      revision_height:
                        title: the height within the given revision
                        type: string
                        format: uint64
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
                description: |-
                  QueryConnectionsResponse is the response type for the Query/Connections RPC
                  method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/core/connection/v1/connections/{connection_id}:
    get:
      tags:
      - Query
      summary: Connection queries an IBC connection end.
      operationId: Connection
      parameters:
      - name: connection_id
        in: path
        description: connection unique identifier
        required: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  connection:
                    title: connection associated with the request identifier
                    type: object
                    properties:
                      client_id:
                        type: string
                        description: client associated with this connection.
                      versions:
                        type: array
                        description: |-
                          IBC version which can be utilised to determine encodings or protocols for
                          channels or packets utilising this connection.
                        items:
                          type: object
                          properties:
                            identifier:
                              title: unique version identifier
                              type: string
                            features:
                              title: list of features compatible with the specified
                                identifier
                              type: array
                              items:
                                type: string
                          description: |-
                            Version defines the versioning scheme used to negotiate the IBC verison in
                            the connection handshake.
                      state:
                        type: string
                        description: current state of the connection end.
                        default: STATE_UNINITIALIZED_UNSPECIFIED
                        enum:
                        - STATE_UNINITIALIZED_UNSPECIFIED
                        - STATE_INIT
                        - STATE_TRYOPEN
                        - STATE_OPEN
                      counterparty:
                        type: object
                        properties:
                          client_id:
                            type: string
                            description: |-
                              identifies the client on the counterparty chain associated with a given
                              connection.
                          connection_id:
                            type: string
                            description: |-
                              identifies the connection end on the counterparty chain associated with a
                              given connection.
                          prefix:
                            title: |-
                              MerklePrefix is merkle path prefixed to the key.
                              The constructed key from the Path and the key will be append(Path.KeyPath,
                              append(Path.KeyPrefix, key...))
                            type: object
                            properties:
                              key_prefix:
                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                type: string
                                format: byte
                            description: commitment merkle prefix of the counterparty
                              chain.
                        description: counterparty chain associated with this connection.
                      delay_period:
                        type: string
                        description: |-
                          delay period that must pass before a consensus state can be used for
                          packet-verification NOTE: delay period logic is only implemented by some
                          clients.
                        format: uint64
                    description: |-
                      ConnectionEnd defines a stateful object on a chain connected to another
                      separate one.
                      NOTE: there must only be 2 defined ConnectionEnds to establish
                      a connection between two chains.
                  proof:
                    title: merkle proof of existence
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    format: byte
                  proof_height:
                    title: height at which the proof was retrieved
                    type: object
                    properties:
                      revision_number:
                        title: the revision that the client is currently on
                        type: string
                        format: uint64
                      revision_height:
                        title: the height within the given revision
                        type: string
                        format: uint64
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
                description: |-
                  QueryConnectionResponse is the response type for the Query/Connection RPC
                  method. Besides the connection end, it includes a proof and the height from
                  which the proof was retrieved.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/core/connection/v1/connections/{connection_id}/client_state:
    get:
      tags:
      - Query
      summary: |-
        ConnectionClientState queries the client state associated with the
        connection.
      operationId: ConnectionClientState
      parameters:
      - name: connection_id
        in: path
        description: connection identifier
        required: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                title: |-
                  QueryConnectionClientStateResponse is the response type for the
                  Query/ConnectionClientState RPC method
                type: object
                properties:
                  identified_client_state:
                    title: client state associated with the channel
                    type: object
                    properties:
                      client_id:
                        title: client identifier
                        type: string
                      client_state:
                        title: client state
                        type: object
                        properties:
                          type_url:
                            type: string
                            description: |-
                              A URL/resource name that uniquely identifies the type of the serialized
                              protocol buffer message. This string must contain at least
                              one "/" character. The last segment of the URL's path must represent
                              the fully qualified name of the type (as in
                              `path/google.protobuf.Duration`). The name should be in a canonical form
                              (e.g., leading "." is not accepted).

                              In practice, teams usually precompile into the binary all types that they
                              expect it to use in the context of Any. However, for URLs which use the
                              scheme `http`, `https`, or no scheme, one can optionally set up a type
                              server that maps type URLs to message definitions as follows:

                              * If no scheme is provided, `https` is assumed.
                              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                value in binary format, or produce an error.
                              * Applications are allowed to cache lookup results based on the
                                URL, or have them precompiled into a binary to avoid any
                                lookup. Therefore, binary compatibility needs to be preserved
                                on changes to types. (Use versioned type names to manage
                                breaking changes.)

                              Note: this functionality is not currently available in the official
                              protobuf release, and it is not used for type URLs beginning with
                              type.googleapis.com.

                              Schemes other than `http`, `https` (or the empty scheme) might be
                              used with implementation specific semantics.
                          value:
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            description: Must be a valid serialized protocol buffer
                              of the above specified type.
                            format: byte
                        description: |-
                          `Any` contains an arbitrary serialized protocol buffer message along with a
                          URL that describes the type of the serialized message.

                          Protobuf library provides support to pack/unpack Any values in the form
                          of utility functions or additional generated methods of the Any type.

                          Example 1: Pack and unpack a message in C++.

                              Foo foo = ...;
                              Any any;
                              any.PackFrom(foo);
                              ...
                              if (any.UnpackTo(&foo)) {
                                ...
                              }

                          Example 2: Pack and unpack a message in Java.

                              Foo foo = ...;
                              Any any = Any.pack(foo);
                              ...
                              if (any.is(Foo.class)) {
                                foo = any.unpack(Foo.class);
                              }

                           Example 3: Pack and unpack a message in Python.

                              foo = Foo(...)
                              any = Any()
                              any.Pack(foo)
                              ...
                              if any.Is(Foo.DESCRIPTOR):
                                any.Unpack(foo)
                                ...

                           Example 4: Pack and unpack a message in Go

                               foo := &pb.Foo{...}
                               any, err := ptypes.MarshalAny(foo)
                               ...
                               foo := &pb.Foo{}
                               if err := ptypes.UnmarshalAny(any, foo); err != nil {
                                 ...
                               }

                          The pack methods provided by protobuf library will by default use
                          'type.googleapis.com/full.type.name' as the type URL and the unpack
                          methods only use the fully qualified type name after the last '/'
                          in the type URL, for example "foo.bar.com/x/y.z" will yield type
                          name "y.z".


                          JSON
                          ====
                          The JSON representation of an `Any` value uses the regular
                          representation of the deserialized, embedded message, with an
                          additional field `@type` which contains the type URL. Example:

                              package google.profile;
                              message Person {
                                string first_name = 1;
                                string last_name = 2;
                              }

                              {
                                "@type": "type.googleapis.com/google.profile.Person",
                                "firstName": <string>,
                                "lastName": <string>
                              }

                          If the embedded message type is well-known and has a custom JSON
                          representation, that representation will be embedded adding a field
                          `value` which holds the custom JSON in addition to the `@type`
                          field. Example (for message [google.protobuf.Duration][]):

                              {
                                "@type": "type.googleapis.com/google.protobuf.Duration",
                                "value": "1.212s"
                              }
                    description: |-
                      IdentifiedClientState defines a client state with an additional client
                      identifier field.
                  proof:
                    title: merkle proof of existence
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    format: byte
                  proof_height:
                    title: height at which the proof was retrieved
                    type: object
                    properties:
                      revision_number:
                        title: the revision that the client is currently on
                        type: string
                        format: uint64
                      revision_height:
                        title: the height within the given revision
                        type: string
                        format: uint64
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/core/connection/v1/connections/{connection_id}/consensus_state/revision/{revision_number}/height/{revision_height}:
    get:
      tags:
      - Query
      summary: |-
        ConnectionConsensusState queries the consensus state associated with the
        connection.
      operationId: ConnectionConsensusState
      parameters:
      - name: connection_id
        in: path
        description: connection identifier
        required: true
        schema:
          type: string
      - name: revision_number
        in: path
        required: true
        schema:
          type: string
          format: uint64
      - name: revision_height
        in: path
        required: true
        schema:
          type: string
          format: uint64
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                title: |-
                  QueryConnectionConsensusStateResponse is the response type for the
                  Query/ConnectionConsensusState RPC method
                type: object
                properties:
                  consensus_state:
                    title: consensus state associated with the channel
                    type: object
                    properties:
                      type_url:
                        type: string
                        description: |-
                          A URL/resource name that uniquely identifies the type of the serialized
                          protocol buffer message. This string must contain at least
                          one "/" character. The last segment of the URL's path must represent
                          the fully qualified name of the type (as in
                          `path/google.protobuf.Duration`). The name should be in a canonical form
                          (e.g., leading "." is not accepted).

                          In practice, teams usually precompile into the binary all types that they
                          expect it to use in the context of Any. However, for URLs which use the
                          scheme `http`, `https`, or no scheme, one can optionally set up a type
                          server that maps type URLs to message definitions as follows:

                          * If no scheme is provided, `https` is assumed.
                          * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                            value in binary format, or produce an error.
                          * Applications are allowed to cache lookup results based on the
                            URL, or have them precompiled into a binary to avoid any
                            lookup. Therefore, binary compatibility needs to be preserved
                            on changes to types. (Use versioned type names to manage
                            breaking changes.)

                          Note: this functionality is not currently available in the official
                          protobuf release, and it is not used for type URLs beginning with
                          type.googleapis.com.

                          Schemes other than `http`, `https` (or the empty scheme) might be
                          used with implementation specific semantics.
                      value:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: Must be a valid serialized protocol buffer of
                          the above specified type.
                        format: byte
                    description: |-
                      `Any` contains an arbitrary serialized protocol buffer message along with a
                      URL that describes the type of the serialized message.

                      Protobuf library provides support to pack/unpack Any values in the form
                      of utility functions or additional generated methods of the Any type.

                      Example 1: Pack and unpack a message in C++.

                          Foo foo = ...;
                          Any any;
                          any.PackFrom(foo);
                          ...
                          if (any.UnpackTo(&foo)) {
                            ...
                          }

                      Example 2: Pack and unpack a message in Java.

                          Foo foo = ...;
                          Any any = Any.pack(foo);
                          ...
                          if (any.is(Foo.class)) {
                            foo = any.unpack(Foo.class);
                          }

                       Example 3: Pack and unpack a message in Python.

                          foo = Foo(...)
                          any = Any()
                          any.Pack(foo)
                          ...
                          if any.Is(Foo.DESCRIPTOR):
                            any.Unpack(foo)
                            ...

                       Example 4: Pack and unpack a message in Go

                           foo := &pb.Foo{...}
                           any, err := ptypes.MarshalAny(foo)
                           ...
                           foo := &pb.Foo{}
                           if err := ptypes.UnmarshalAny(any, foo); err != nil {
                             ...
                           }

                      The pack methods provided by protobuf library will by default use
                      'type.googleapis.com/full.type.name' as the type URL and the unpack
                      methods only use the fully qualified type name after the last '/'
                      in the type URL, for example "foo.bar.com/x/y.z" will yield type
                      name "y.z".


                      JSON
                      ====
                      The JSON representation of an `Any` value uses the regular
                      representation of the deserialized, embedded message, with an
                      additional field `@type` which contains the type URL. Example:

                          package google.profile;
                          message Person {
                            string first_name = 1;
                            string last_name = 2;
                          }

                          {
                            "@type": "type.googleapis.com/google.profile.Person",
                            "firstName": <string>,
                            "lastName": <string>
                          }

                      If the embedded message type is well-known and has a custom JSON
                      representation, that representation will be embedded adding a field
                      `value` which holds the custom JSON in addition to the `@type`
                      field. Example (for message [google.protobuf.Duration][]):

                          {
                            "@type": "type.googleapis.com/google.protobuf.Duration",
                            "value": "1.212s"
                          }
                  client_id:
                    title: client ID associated with the consensus state
                    type: string
                  proof:
                    title: merkle proof of existence
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    format: byte
                  proof_height:
                    title: height at which the proof was retrieved
                    type: object
                    properties:
                      revision_number:
                        title: the revision that the client is currently on
                        type: string
                        format: uint64
                      revision_height:
                        title: the height within the given revision
                        type: string
                        format: uint64
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/core/connection/v1/params:
    get:
      tags:
      - Query
      summary: ConnectionParams queries all parameters of the ibc connection submodule.
      operationId: ConnectionParams
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  params:
                    type: object
                    properties:
                      max_expected_time_per_block:
                        type: string
                        description: |-
                          maximum expected time per block (in nanoseconds), used to enforce block delay. This parameter should reflect the
                          largest amount of time that the chain might reasonably take to produce the next block under normal operating
                          conditions. A safe choice is 3-5x the expected time per block.
                        format: uint64
                    description: params defines the parameters of the module.
                description: QueryConnectionParamsResponse is the response type for
                  the Query/ConnectionParams RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/apps/transfer/v1/channels/{channel_id}/ports/{port_id}/escrow_address:
    get:
      tags:
      - Query
      summary: EscrowAddress returns the escrow address for a particular port and
        channel id.
      operationId: EscrowAddress
      parameters:
      - name: channel_id
        in: path
        description: unique channel identifier
        required: true
        schema:
          type: string
      - name: port_id
        in: path
        description: unique port identifier
        required: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  escrow_address:
                    title: the escrow account address
                    type: string
                description: QueryEscrowAddressResponse is the response type of the
                  EscrowAddress RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
  /ibc/apps/transfer/v1/denom_hashes/{trace}:
    get:
      tags:
      - Query
      summary: DenomHash queries a denomination hash information.
      operationId: DenomHash
      parameters:
      - name: trace
        in: path
        description: "The denomination trace ([port_id]/[channel_id])+/[denom]"
        required: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  hash:
                    type: string
                    description: hash (in hex format) of the denomination trace information.
                description: |-
                  QueryDenomHashResponse is the response type for the Query/DenomHash RPC
                  method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
  /ibc/apps/transfer/v1/denom_traces:
    get:
      tags:
      - Query
      summary: DenomTraces queries all denomination traces.
      operationId: DenomTraces
      parameters:
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  denom_traces:
                    type: array
                    description: denom_traces returns all denominations trace information.
                    items:
                      type: object
                      properties:
                        path:
                          type: string
                          description: |-
                            path defines the chain of port/channel identifiers used for tracing the
                            source of the fungible token.
                        base_denom:
                          type: string
                          description: base denomination of the relayed fungible token.
                      description: |-
                        DenomTrace contains the base denomination for ICS20 fungible tokens and the
                        source tracing information path.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently. It will be empty if
                          there are no more results.
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
                description: |-
                  QueryConnectionsResponse is the response type for the Query/DenomTraces RPC
                  method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
  /ibc/apps/transfer/v1/denom_traces/{hash}:
    get:
      tags:
      - Query
      summary: DenomTrace queries a denomination trace information.
      operationId: DenomTrace
      parameters:
      - name: hash
        in: path
        description: hash (in hex format) or denom (full denom with ibc prefix) of
          the denomination trace information.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  denom_trace:
                    type: object
                    properties:
                      path:
                        type: string
                        description: |-
                          path defines the chain of port/channel identifiers used for tracing the
                          source of the fungible token.
                      base_denom:
                        type: string
                        description: base denomination of the relayed fungible token.
                    description: |-
                      DenomTrace contains the base denomination for ICS20 fungible tokens and the
                      source tracing information path.
                description: |-
                  QueryDenomTraceResponse is the response type for the Query/DenomTrace RPC
                  method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
  /ibc/apps/transfer/v1/denoms/{denom}/total_escrow:
    get:
      tags:
      - Query
      summary: TotalEscrowForDenom returns the total amount of tokens in escrow based
        on the denom.
      operationId: TotalEscrowForDenom
      parameters:
      - name: denom
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  amount:
                    type: object
                    properties:
                      denom:
                        type: string
                      amount:
                        type: string
                    description: |-
                      Coin defines a token with a denomination and an amount.

                      NOTE: The amount field is an Int which implements the custom method
                      signatures required by gogoproto.
                description: QueryTotalEscrowForDenomResponse is the response type
                  for TotalEscrowForDenom RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
  /ibc/apps/transfer/v1/params:
    get:
      tags:
      - Query
      summary: Params queries all parameters of the ibc-transfer module.
      operationId: IBCTransferParams
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  params:
                    type: object
                    properties:
                      send_enabled:
                        type: boolean
                        description: |-
                          send_enabled enables or disables all cross-chain token transfers from this
                          chain.
                      receive_enabled:
                        type: boolean
                        description: |-
                          receive_enabled enables or disables all cross-chain token transfers to this
                          chain.
                    description: params defines the parameters of the module.
                description: QueryParamsResponse is the response type for the Query/Params
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
  /ibc/apps/fee/v1/channels/{channel_id}/ports/{port_id}/fee_enabled:
    get:
      tags:
      - Query
      summary: FeeEnabledChannel returns true if the provided port and channel identifiers
        belong to a fee enabled channel
      operationId: FeeEnabledChannel
      parameters:
      - name: channel_id
        in: path
        description: unique channel identifier
        required: true
        schema:
          type: string
      - name: port_id
        in: path
        description: unique port identifier
        required: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                title: QueryFeeEnabledChannelResponse defines the response type for
                  the FeeEnabledChannel rpc
                type: object
                properties:
                  fee_enabled:
                    title: boolean flag representing the fee enabled channel status
                    type: boolean
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/apps/fee/v1/channels/{channel_id}/ports/{port_id}/incentivized_packets:
    get:
      tags:
      - Query
      summary: Gets all incentivized packets for a specific channel
      operationId: IncentivizedPacketsForChannel
      parameters:
      - name: channel_id
        in: path
        required: true
        schema:
          type: string
      - name: port_id
        in: path
        required: true
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      - name: query_height
        in: query
        description: Height to query at.
        schema:
          type: string
          format: uint64
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                title: QueryIncentivizedPacketsResponse defines the response type
                  for the incentivized packets RPC
                type: object
                properties:
                  incentivized_packets:
                    title: Map of all incentivized_packets
                    type: array
                    items:
                      title: IdentifiedPacketFees contains a list of type PacketFee
                        and associated PacketId
                      type: object
                      properties:
                        packet_id:
                          title: "unique packet identifier comprised of the channel\
                            \ ID, port ID and sequence"
                          type: object
                          properties:
                            port_id:
                              title: channel port identifier
                              type: string
                            channel_id:
                              title: channel unique identifier
                              type: string
                            sequence:
                              title: packet sequence
                              type: string
                              format: uint64
                        packet_fees:
                          title: list of packet fees
                          type: array
                          items:
                            title: "PacketFee contains ICS29 relayer fees, refund\
                              \ address and optional list of permitted relayers"
                            type: object
                            properties:
                              fee:
                                title: "fee encapsulates the recv, ack and timeout\
                                  \ fees associated with an IBC packet"
                                type: object
                                properties:
                                  recv_fee:
                                    title: the packet receive fee
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        denom:
                                          type: string
                                        amount:
                                          type: string
                                      description: |-
                                        Coin defines a token with a denomination and an amount.

                                        NOTE: The amount field is an Int which implements the custom method
                                        signatures required by gogoproto.
                                  ack_fee:
                                    title: the packet acknowledgement fee
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        denom:
                                          type: string
                                        amount:
                                          type: string
                                      description: |-
                                        Coin defines a token with a denomination and an amount.

                                        NOTE: The amount field is an Int which implements the custom method
                                        signatures required by gogoproto.
                                  timeout_fee:
                                    title: the packet timeout fee
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        denom:
                                          type: string
                                        amount:
                                          type: string
                                      description: |-
                                        Coin defines a token with a denomination and an amount.

                                        NOTE: The amount field is an Int which implements the custom method
                                        signatures required by gogoproto.
                              refund_address:
                                title: the refund address for unspent fees
                                type: string
                              relayers:
                                title: optional list of relayers permitted to receive
                                  fees
                                type: array
                                items:
                                  type: string
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/apps/fee/v1/channels/{channel_id}/relayers/{relayer}/counterparty_payee:
    get:
      tags:
      - Query
      summary: CounterpartyPayee returns the registered counterparty payee for forward
        relaying
      operationId: CounterpartyPayee
      parameters:
      - name: channel_id
        in: path
        description: unique channel identifier
        required: true
        schema:
          type: string
      - name: relayer
        in: path
        description: the relayer address to which the counterparty is registered
        required: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                title: QueryCounterpartyPayeeResponse defines the response type for
                  the CounterpartyPayee rpc
                type: object
                properties:
                  counterparty_payee:
                    title: the counterparty payee address used to compensate forward
                      relaying
                    type: string
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/apps/fee/v1/channels/{channel_id}/relayers/{relayer}/payee:
    get:
      tags:
      - Query
      summary: Payee returns the registered payee address for a specific channel given
        the relayer address
      operationId: Payee
      parameters:
      - name: channel_id
        in: path
        description: unique channel identifier
        required: true
        schema:
          type: string
      - name: relayer
        in: path
        description: the relayer address to which the distribution address is registered
        required: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                title: QueryPayeeResponse defines the response type for the Payee
                  rpc
                type: object
                properties:
                  payee_address:
                    title: the payee address to which packet fees are paid out
                    type: string
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/apps/fee/v1/channels/{packet_id.channel_id}/ports/{packet_id.port_id}/sequences/{packet_id.sequence}/incentivized_packet:
    get:
      tags:
      - Query
      summary: IncentivizedPacket returns all packet fees for a packet given its identifier
      operationId: IncentivizedPacket
      parameters:
      - name: packet_id.channel_id
        in: path
        description: channel unique identifier
        required: true
        schema:
          type: string
      - name: packet_id.port_id
        in: path
        description: channel port identifier
        required: true
        schema:
          type: string
      - name: packet_id.sequence
        in: path
        description: packet sequence
        required: true
        schema:
          type: string
          format: uint64
      - name: query_height
        in: query
        description: block height at which to query.
        schema:
          type: string
          format: uint64
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                title: QueryIncentivizedPacketsResponse defines the response type
                  for the IncentivizedPacket rpc
                type: object
                properties:
                  incentivized_packet:
                    title: IdentifiedPacketFees contains a list of type PacketFee
                      and associated PacketId
                    type: object
                    properties:
                      packet_id:
                        title: "unique packet identifier comprised of the channel\
                          \ ID, port ID and sequence"
                        type: object
                        properties:
                          port_id:
                            title: channel port identifier
                            type: string
                          channel_id:
                            title: channel unique identifier
                            type: string
                          sequence:
                            title: packet sequence
                            type: string
                            format: uint64
                      packet_fees:
                        title: list of packet fees
                        type: array
                        items:
                          title: "PacketFee contains ICS29 relayer fees, refund address\
                            \ and optional list of permitted relayers"
                          type: object
                          properties:
                            fee:
                              title: "fee encapsulates the recv, ack and timeout fees\
                                \ associated with an IBC packet"
                              type: object
                              properties:
                                recv_fee:
                                  title: the packet receive fee
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      denom:
                                        type: string
                                      amount:
                                        type: string
                                    description: |-
                                      Coin defines a token with a denomination and an amount.

                                      NOTE: The amount field is an Int which implements the custom method
                                      signatures required by gogoproto.
                                ack_fee:
                                  title: the packet acknowledgement fee
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      denom:
                                        type: string
                                      amount:
                                        type: string
                                    description: |-
                                      Coin defines a token with a denomination and an amount.

                                      NOTE: The amount field is an Int which implements the custom method
                                      signatures required by gogoproto.
                                timeout_fee:
                                  title: the packet timeout fee
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      denom:
                                        type: string
                                      amount:
                                        type: string
                                    description: |-
                                      Coin defines a token with a denomination and an amount.

                                      NOTE: The amount field is an Int which implements the custom method
                                      signatures required by gogoproto.
                            refund_address:
                              title: the refund address for unspent fees
                              type: string
                            relayers:
                              title: optional list of relayers permitted to receive
                                fees
                              type: array
                              items:
                                type: string
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/apps/fee/v1/channels/{packet_id.channel_id}/ports/{packet_id.port_id}/sequences/{packet_id.sequence}/total_ack_fees:
    get:
      tags:
      - Query
      summary: TotalAckFees returns the total acknowledgement fees for a packet given
        its identifier
      operationId: TotalAckFees
      parameters:
      - name: packet_id.channel_id
        in: path
        description: channel unique identifier
        required: true
        schema:
          type: string
      - name: packet_id.port_id
        in: path
        description: channel port identifier
        required: true
        schema:
          type: string
      - name: packet_id.sequence
        in: path
        description: packet sequence
        required: true
        schema:
          type: string
          format: uint64
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                title: QueryTotalAckFeesResponse defines the response type for the
                  TotalAckFees rpc
                type: object
                properties:
                  ack_fees:
                    title: the total packet acknowledgement fees
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: |-
                        Coin defines a token with a denomination and an amount.

                        NOTE: The amount field is an Int which implements the custom method
                        signatures required by gogoproto.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/apps/fee/v1/channels/{packet_id.channel_id}/ports/{packet_id.port_id}/sequences/{packet_id.sequence}/total_recv_fees:
    get:
      tags:
      - Query
      summary: TotalRecvFees returns the total receive fees for a packet given its
        identifier
      operationId: TotalRecvFees
      parameters:
      - name: packet_id.channel_id
        in: path
        description: channel unique identifier
        required: true
        schema:
          type: string
      - name: packet_id.port_id
        in: path
        description: channel port identifier
        required: true
        schema:
          type: string
      - name: packet_id.sequence
        in: path
        description: packet sequence
        required: true
        schema:
          type: string
          format: uint64
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                title: QueryTotalRecvFeesResponse defines the response type for the
                  TotalRecvFees rpc
                type: object
                properties:
                  recv_fees:
                    title: the total packet receive fees
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: |-
                        Coin defines a token with a denomination and an amount.

                        NOTE: The amount field is an Int which implements the custom method
                        signatures required by gogoproto.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/apps/fee/v1/channels/{packet_id.channel_id}/ports/{packet_id.port_id}/sequences/{packet_id.sequence}/total_timeout_fees:
    get:
      tags:
      - Query
      summary: TotalTimeoutFees returns the total timeout fees for a packet given
        its identifier
      operationId: TotalTimeoutFees
      parameters:
      - name: packet_id.channel_id
        in: path
        description: channel unique identifier
        required: true
        schema:
          type: string
      - name: packet_id.port_id
        in: path
        description: channel port identifier
        required: true
        schema:
          type: string
      - name: packet_id.sequence
        in: path
        description: packet sequence
        required: true
        schema:
          type: string
          format: uint64
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                title: QueryTotalTimeoutFeesResponse defines the response type for
                  the TotalTimeoutFees rpc
                type: object
                properties:
                  timeout_fees:
                    title: the total packet timeout fees
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: |-
                        Coin defines a token with a denomination and an amount.

                        NOTE: The amount field is an Int which implements the custom method
                        signatures required by gogoproto.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/apps/fee/v1/fee_enabled:
    get:
      tags:
      - Query
      summary: FeeEnabledChannels returns a list of all fee enabled channels
      operationId: FeeEnabledChannels
      parameters:
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      - name: query_height
        in: query
        description: block height at which to query.
        schema:
          type: string
          format: uint64
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                title: QueryFeeEnabledChannelsResponse defines the response type for
                  the FeeEnabledChannels rpc
                type: object
                properties:
                  fee_enabled_channels:
                    title: list of fee enabled channels
                    type: array
                    items:
                      title: FeeEnabledChannel contains the PortID & ChannelID for
                        a fee enabled channel
                      type: object
                      properties:
                        port_id:
                          title: unique port identifier
                          type: string
                        channel_id:
                          title: unique channel identifier
                          type: string
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/apps/fee/v1/incentivized_packets:
    get:
      tags:
      - Query
      summary: IncentivizedPackets returns all incentivized packets and their associated
        fees
      operationId: IncentivizedPackets
      parameters:
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      - name: query_height
        in: query
        description: block height at which to query.
        schema:
          type: string
          format: uint64
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                title: QueryIncentivizedPacketsResponse defines the response type
                  for the IncentivizedPackets rpc
                type: object
                properties:
                  incentivized_packets:
                    title: list of identified fees for incentivized packets
                    type: array
                    items:
                      title: IdentifiedPacketFees contains a list of type PacketFee
                        and associated PacketId
                      type: object
                      properties:
                        packet_id:
                          title: "unique packet identifier comprised of the channel\
                            \ ID, port ID and sequence"
                          type: object
                          properties:
                            port_id:
                              title: channel port identifier
                              type: string
                            channel_id:
                              title: channel unique identifier
                              type: string
                            sequence:
                              title: packet sequence
                              type: string
                              format: uint64
                        packet_fees:
                          title: list of packet fees
                          type: array
                          items:
                            title: "PacketFee contains ICS29 relayer fees, refund\
                              \ address and optional list of permitted relayers"
                            type: object
                            properties:
                              fee:
                                title: "fee encapsulates the recv, ack and timeout\
                                  \ fees associated with an IBC packet"
                                type: object
                                properties:
                                  recv_fee:
                                    title: the packet receive fee
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        denom:
                                          type: string
                                        amount:
                                          type: string
                                      description: |-
                                        Coin defines a token with a denomination and an amount.

                                        NOTE: The amount field is an Int which implements the custom method
                                        signatures required by gogoproto.
                                  ack_fee:
                                    title: the packet acknowledgement fee
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        denom:
                                          type: string
                                        amount:
                                          type: string
                                      description: |-
                                        Coin defines a token with a denomination and an amount.

                                        NOTE: The amount field is an Int which implements the custom method
                                        signatures required by gogoproto.
                                  timeout_fee:
                                    title: the packet timeout fee
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        denom:
                                          type: string
                                        amount:
                                          type: string
                                      description: |-
                                        Coin defines a token with a denomination and an amount.

                                        NOTE: The amount field is an Int which implements the custom method
                                        signatures required by gogoproto.
                              refund_address:
                                title: the refund address for unspent fees
                                type: string
                              relayers:
                                title: optional list of relayers permitted to receive
                                  fees
                                type: array
                                items:
                                  type: string
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/apps/router/v1/params:
    get:
      tags:
      - Query
      summary: Params queries all parameters of the router module.
      operationId: IBCRouterParams
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  params:
                    type: object
                    properties:
                      fee_percentage:
                        type: string
                    description: params defines the parameters of the module.
                description: QueryParamsResponse is the response type for the Query/Params
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
  /pob/builder/v1/params:
    get:
      tags:
      - Query
      summary: Params queries the parameters of the x/builder module.
      operationId: PobParams
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  params:
                    type: object
                    properties:
                      max_bundle_size:
                        type: integer
                        description: |-
                          max_bundle_size is the maximum number of transactions that can be bundled
                          in a single bundle.
                        format: int64
                      escrow_account_address:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: |-
                          escrow_account_address is the address of the account that will receive a
                          portion of the bid proceeds.
                        format: byte
                      reserve_fee:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: reserve_fee specifies the bid floor for the auction.
                      min_bid_increment:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: |-
                          min_bid_increment specifies the minimum amount that the next bid must be
                          greater than the previous bid.
                      front_running_protection:
                        type: boolean
                        description: |-
                          front_running_protection specifies whether front running and sandwich
                          attack protection is enabled.
                      proposer_fee:
                        type: string
                        description: |-
                          proposer_fee defines the portion of the winning bid that goes to the block
                          proposer that proposed the block.
                    description: params defines the parameters of the module.
                description: QueryParamsResponse is the response type for the Query/Params
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
components:
  schemas:
    cosmos.base.query.v1beta1.PageRequest:
      title: |-
        PageRequest is to be embedded in gRPC request messages for efficient
        pagination. Ex:
      type: object
      properties:
        key:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
        offset:
          type: string
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          format: uint64
        limit:
          type: string
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          format: uint64
        count_total:
          type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
        reverse:
          type: boolean
          description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
      description: |-
        message SomeRequest {
                 Foo some_parameter = 1;
                 PageRequest pagination = 2;
         }
    cosmos.base.query.v1beta1.PageResponse:
      type: object
      properties:
        next_key:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          description: |-
            next_key is the key to be passed to PageRequest.key to
            query the next page most efficiently. It will be empty if
            there are no more results.
          format: byte
        total:
          title: |-
            total is total number of results available if PageRequest.count_total
            was set, its value is undefined otherwise
          type: string
          format: uint64
      description: |-
        PageResponse is to be embedded in gRPC response messages where the
        corresponding request message has used PageRequest.

         message SomeResponse {
                 repeated Bar results = 1;
                 PageResponse page = 2;
         }
    cosmos.base.v1beta1.Coin:
      type: object
      properties:
        denom:
          type: string
        amount:
          type: string
      description: |-
        Coin defines a token with a denomination and an amount.

        NOTE: The amount field is an Int which implements the custom method
        signatures required by gogoproto.
    cosmos.base.v1beta1.DecCoin:
      type: object
      properties:
        denom:
          type: string
        amount:
          type: string
      description: |-
        DecCoin defines a token with a denomination and a decimal amount.

        NOTE: The amount field is an Dec which implements the custom method
        signatures required by gogoproto.
    google.protobuf.Any:
      type: object
      properties:
        type_url:
          type: string
          description: |-
            A URL/resource name that uniquely identifies the type of the serialized
            protocol buffer message. This string must contain at least
            one "/" character. The last segment of the URL's path must represent
            the fully qualified name of the type (as in
            `path/google.protobuf.Duration`). The name should be in a canonical form
            (e.g., leading "." is not accepted).

            In practice, teams usually precompile into the binary all types that they
            expect it to use in the context of Any. However, for URLs which use the
            scheme `http`, `https`, or no scheme, one can optionally set up a type
            server that maps type URLs to message definitions as follows:

            * If no scheme is provided, `https` is assumed.
            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
              value in binary format, or produce an error.
            * Applications are allowed to cache lookup results based on the
              URL, or have them precompiled into a binary to avoid any
              lookup. Therefore, binary compatibility needs to be preserved
              on changes to types. (Use versioned type names to manage
              breaking changes.)

            Note: this functionality is not currently available in the official
            protobuf release, and it is not used for type URLs beginning with
            type.googleapis.com.

            Schemes other than `http`, `https` (or the empty scheme) might be
            used with implementation specific semantics.
        value:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          description: Must be a valid serialized protocol buffer of the above specified
            type.
          format: byte
      description: |-
        `Any` contains an arbitrary serialized protocol buffer message along with a
        URL that describes the type of the serialized message.

        Protobuf library provides support to pack/unpack Any values in the form
        of utility functions or additional generated methods of the Any type.

        Example 1: Pack and unpack a message in C++.

            Foo foo = ...;
            Any any;
            any.PackFrom(foo);
            ...
            if (any.UnpackTo(&foo)) {
              ...
            }

        Example 2: Pack and unpack a message in Java.

            Foo foo = ...;
            Any any = Any.pack(foo);
            ...
            if (any.is(Foo.class)) {
              foo = any.unpack(Foo.class);
            }

         Example 3: Pack and unpack a message in Python.

            foo = Foo(...)
            any = Any()
            any.Pack(foo)
            ...
            if any.Is(Foo.DESCRIPTOR):
              any.Unpack(foo)
              ...

         Example 4: Pack and unpack a message in Go

             foo := &pb.Foo{...}
             any, err := ptypes.MarshalAny(foo)
             ...
             foo := &pb.Foo{}
             if err := ptypes.UnmarshalAny(any, foo); err != nil {
               ...
             }

        The pack methods provided by protobuf library will by default use
        'type.googleapis.com/full.type.name' as the type URL and the unpack
        methods only use the fully qualified type name after the last '/'
        in the type URL, for example "foo.bar.com/x/y.z" will yield type
        name "y.z".


        JSON
        ====
        The JSON representation of an `Any` value uses the regular
        representation of the deserialized, embedded message, with an
        additional field `@type` which contains the type URL. Example:

            package google.profile;
            message Person {
              string first_name = 1;
              string last_name = 2;
            }

            {
              "@type": "type.googleapis.com/google.profile.Person",
              "firstName": <string>,
              "lastName": <string>
            }

        If the embedded message type is well-known and has a custom JSON
        representation, that representation will be embedded adding a field
        `value` which holds the custom JSON in addition to the `@type`
        field. Example (for message [google.protobuf.Duration][]):

            {
              "@type": "type.googleapis.com/google.protobuf.Duration",
              "value": "1.212s"
            }
    grpc.gateway.runtime.Error:
      type: object
      properties:
        error:
          type: string
        code:
          type: integer
          format: int32
        message:
          type: string
        details:
          type: array
          items:
            type: object
            properties:
              type_url:
                type: string
                description: |-
                  A URL/resource name that uniquely identifies the type of the serialized
                  protocol buffer message. This string must contain at least
                  one "/" character. The last segment of the URL's path must represent
                  the fully qualified name of the type (as in
                  `path/google.protobuf.Duration`). The name should be in a canonical form
                  (e.g., leading "." is not accepted).

                  In practice, teams usually precompile into the binary all types that they
                  expect it to use in the context of Any. However, for URLs which use the
                  scheme `http`, `https`, or no scheme, one can optionally set up a type
                  server that maps type URLs to message definitions as follows:

                  * If no scheme is provided, `https` is assumed.
                  * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                    value in binary format, or produce an error.
                  * Applications are allowed to cache lookup results based on the
                    URL, or have them precompiled into a binary to avoid any
                    lookup. Therefore, binary compatibility needs to be preserved
                    on changes to types. (Use versioned type names to manage
                    breaking changes.)

                  Note: this functionality is not currently available in the official
                  protobuf release, and it is not used for type URLs beginning with
                  type.googleapis.com.

                  Schemes other than `http`, `https` (or the empty scheme) might be
                  used with implementation specific semantics.
              value:
                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                type: string
                description: Must be a valid serialized protocol buffer of the above
                  specified type.
                format: byte
            description: |-
              `Any` contains an arbitrary serialized protocol buffer message along with a
              URL that describes the type of the serialized message.

              Protobuf library provides support to pack/unpack Any values in the form
              of utility functions or additional generated methods of the Any type.

              Example 1: Pack and unpack a message in C++.

                  Foo foo = ...;
                  Any any;
                  any.PackFrom(foo);
                  ...
                  if (any.UnpackTo(&foo)) {
                    ...
                  }

              Example 2: Pack and unpack a message in Java.

                  Foo foo = ...;
                  Any any = Any.pack(foo);
                  ...
                  if (any.is(Foo.class)) {
                    foo = any.unpack(Foo.class);
                  }

               Example 3: Pack and unpack a message in Python.

                  foo = Foo(...)
                  any = Any()
                  any.Pack(foo)
                  ...
                  if any.Is(Foo.DESCRIPTOR):
                    any.Unpack(foo)
                    ...

               Example 4: Pack and unpack a message in Go

                   foo := &pb.Foo{...}
                   any, err := ptypes.MarshalAny(foo)
                   ...
                   foo := &pb.Foo{}
                   if err := ptypes.UnmarshalAny(any, foo); err != nil {
                     ...
                   }

              The pack methods provided by protobuf library will by default use
              'type.googleapis.com/full.type.name' as the type URL and the unpack
              methods only use the fully qualified type name after the last '/'
              in the type URL, for example "foo.bar.com/x/y.z" will yield type
              name "y.z".


              JSON
              ====
              The JSON representation of an `Any` value uses the regular
              representation of the deserialized, embedded message, with an
              additional field `@type` which contains the type URL. Example:

                  package google.profile;
                  message Person {
                    string first_name = 1;
                    string last_name = 2;
                  }

                  {
                    "@type": "type.googleapis.com/google.profile.Person",
                    "firstName": <string>,
                    "lastName": <string>
                  }

              If the embedded message type is well-known and has a custom JSON
              representation, that representation will be embedded adding a field
              `value` which holds the custom JSON in addition to the `@type`
              field. Example (for message [google.protobuf.Duration][]):

                  {
                    "@type": "type.googleapis.com/google.protobuf.Duration",
                    "value": "1.212s"
                  }
    ibc.applications.interchain_accounts.controller.v1.Params:
      type: object
      properties:
        controller_enabled:
          type: boolean
          description: controller_enabled enables or disables the controller submodule.
      description: |-
        Params defines the set of on-chain interchain accounts parameters.
        The following parameters may be used to disable the controller submodule.
    ibc.applications.interchain_accounts.controller.v1.QueryInterchainAccountResponse:
      type: object
      properties:
        address:
          type: string
      description: QueryInterchainAccountResponse the response type for the Query/InterchainAccount
        RPC method.
    ibc.applications.interchain_accounts.controller.v1.QueryParamsResponse:
      type: object
      properties:
        params:
          type: object
          properties:
            controller_enabled:
              type: boolean
              description: controller_enabled enables or disables the controller submodule.
          description: params defines the parameters of the module.
      description: QueryParamsResponse is the response type for the Query/Params RPC
        method.
    ibc.applications.interchain_accounts.host.v1.Params:
      type: object
      properties:
        host_enabled:
          type: boolean
          description: host_enabled enables or disables the host submodule.
        allow_messages:
          type: array
          description: allow_messages defines a list of sdk message typeURLs allowed
            to be executed on a host chain.
          items:
            type: string
      description: |-
        Params defines the set of on-chain interchain accounts parameters.
        The following parameters may be used to disable the host submodule.
    ibc.applications.interchain_accounts.host.v1.QueryParamsResponse:
      type: object
      properties:
        params:
          type: object
          properties:
            host_enabled:
              type: boolean
              description: host_enabled enables or disables the host submodule.
            allow_messages:
              type: array
              description: allow_messages defines a list of sdk message typeURLs allowed
                to be executed on a host chain.
              items:
                type: string
          description: params defines the parameters of the module.
      description: QueryParamsResponse is the response type for the Query/Params RPC
        method.
    cosmos.auth.v1beta1.AddressBytesToStringResponse:
      type: object
      properties:
        address_string:
          type: string
      description: |-
        AddressBytesToStringResponse is the response type for AddressString rpc method.

        Since: cosmos-sdk 0.46
    cosmos.auth.v1beta1.AddressStringToBytesResponse:
      type: object
      properties:
        address_bytes:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
      description: |-
        AddressStringToBytesResponse is the response type for AddressBytes rpc method.

        Since: cosmos-sdk 0.46
    cosmos.auth.v1beta1.BaseAccount:
      type: object
      properties:
        address:
          type: string
        pub_key:
          type: object
          properties:
            type_url:
              type: string
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
            value:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

             Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

             Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := ptypes.MarshalAny(foo)
                 ...
                 foo := &pb.Foo{}
                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".


            JSON
            ====
            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
        account_number:
          type: string
          format: uint64
        sequence:
          type: string
          format: uint64
      description: |-
        BaseAccount defines a base account type. It contains all the necessary fields
        for basic account functionality. Any custom account type should extend this
        type for additional functionality (e.g. vesting).
    cosmos.auth.v1beta1.Bech32PrefixResponse:
      type: object
      properties:
        bech32_prefix:
          type: string
      description: |-
        Bech32PrefixResponse is the response type for Bech32Prefix rpc method.

        Since: cosmos-sdk 0.46
    cosmos.auth.v1beta1.Params:
      type: object
      properties:
        max_memo_characters:
          type: string
          format: uint64
        tx_sig_limit:
          type: string
          format: uint64
        tx_size_cost_per_byte:
          type: string
          format: uint64
        sig_verify_cost_ed25519:
          type: string
          format: uint64
        sig_verify_cost_secp256k1:
          type: string
          format: uint64
      description: Params defines the parameters for the auth module.
    cosmos.auth.v1beta1.QueryAccountAddressByIDResponse:
      title: QueryAccountAddressByIDResponse is the response type for AccountAddressByID
        rpc method
      type: object
      properties:
        account_address:
          type: string
      description: "Since: cosmos-sdk 0.46.2"
    cosmos.auth.v1beta1.QueryAccountInfoResponse:
      type: object
      properties:
        info:
          type: object
          properties:
            address:
              type: string
            pub_key:
              type: object
              properties:
                type_url:
                  type: string
                  description: |-
                    A URL/resource name that uniquely identifies the type of the serialized
                    protocol buffer message. This string must contain at least
                    one "/" character. The last segment of the URL's path must represent
                    the fully qualified name of the type (as in
                    `path/google.protobuf.Duration`). The name should be in a canonical form
                    (e.g., leading "." is not accepted).

                    In practice, teams usually precompile into the binary all types that they
                    expect it to use in the context of Any. However, for URLs which use the
                    scheme `http`, `https`, or no scheme, one can optionally set up a type
                    server that maps type URLs to message definitions as follows:

                    * If no scheme is provided, `https` is assumed.
                    * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the official
                    protobuf release, and it is not used for type URLs beginning with
                    type.googleapis.com.

                    Schemes other than `http`, `https` (or the empty scheme) might be
                    used with implementation specific semantics.
                value:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
              description: |-
                `Any` contains an arbitrary serialized protocol buffer message along with a
                URL that describes the type of the serialized message.

                Protobuf library provides support to pack/unpack Any values in the form
                of utility functions or additional generated methods of the Any type.

                Example 1: Pack and unpack a message in C++.

                    Foo foo = ...;
                    Any any;
                    any.PackFrom(foo);
                    ...
                    if (any.UnpackTo(&foo)) {
                      ...
                    }

                Example 2: Pack and unpack a message in Java.

                    Foo foo = ...;
                    Any any = Any.pack(foo);
                    ...
                    if (any.is(Foo.class)) {
                      foo = any.unpack(Foo.class);
                    }

                 Example 3: Pack and unpack a message in Python.

                    foo = Foo(...)
                    any = Any()
                    any.Pack(foo)
                    ...
                    if any.Is(Foo.DESCRIPTOR):
                      any.Unpack(foo)
                      ...

                 Example 4: Pack and unpack a message in Go

                     foo := &pb.Foo{...}
                     any, err := ptypes.MarshalAny(foo)
                     ...
                     foo := &pb.Foo{}
                     if err := ptypes.UnmarshalAny(any, foo); err != nil {
                       ...
                     }

                The pack methods provided by protobuf library will by default use
                'type.googleapis.com/full.type.name' as the type URL and the unpack
                methods only use the fully qualified type name after the last '/'
                in the type URL, for example "foo.bar.com/x/y.z" will yield type
                name "y.z".


                JSON
                ====
                The JSON representation of an `Any` value uses the regular
                representation of the deserialized, embedded message, with an
                additional field `@type` which contains the type URL. Example:

                    package google.profile;
                    message Person {
                      string first_name = 1;
                      string last_name = 2;
                    }

                    {
                      "@type": "type.googleapis.com/google.profile.Person",
                      "firstName": <string>,
                      "lastName": <string>
                    }

                If the embedded message type is well-known and has a custom JSON
                representation, that representation will be embedded adding a field
                `value` which holds the custom JSON in addition to the `@type`
                field. Example (for message [google.protobuf.Duration][]):

                    {
                      "@type": "type.googleapis.com/google.protobuf.Duration",
                      "value": "1.212s"
                    }
            account_number:
              type: string
              format: uint64
            sequence:
              type: string
              format: uint64
          description: info is the account info which is represented by BaseAccount.
      description: |-
        QueryAccountInfoResponse is the Query/AccountInfo response type.

        Since: cosmos-sdk 0.47
    cosmos.auth.v1beta1.QueryAccountResponse:
      type: object
      properties:
        account:
          type: object
          properties:
            type_url:
              type: string
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
            value:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

             Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

             Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := ptypes.MarshalAny(foo)
                 ...
                 foo := &pb.Foo{}
                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".


            JSON
            ====
            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
      description: QueryAccountResponse is the response type for the Query/Account
        RPC method.
    cosmos.auth.v1beta1.QueryAccountsResponse:
      type: object
      properties:
        accounts:
          title: accounts are the existing accounts
          type: array
          items:
            type: object
            properties:
              type_url:
                type: string
                description: |-
                  A URL/resource name that uniquely identifies the type of the serialized
                  protocol buffer message. This string must contain at least
                  one "/" character. The last segment of the URL's path must represent
                  the fully qualified name of the type (as in
                  `path/google.protobuf.Duration`). The name should be in a canonical form
                  (e.g., leading "." is not accepted).

                  In practice, teams usually precompile into the binary all types that they
                  expect it to use in the context of Any. However, for URLs which use the
                  scheme `http`, `https`, or no scheme, one can optionally set up a type
                  server that maps type URLs to message definitions as follows:

                  * If no scheme is provided, `https` is assumed.
                  * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                    value in binary format, or produce an error.
                  * Applications are allowed to cache lookup results based on the
                    URL, or have them precompiled into a binary to avoid any
                    lookup. Therefore, binary compatibility needs to be preserved
                    on changes to types. (Use versioned type names to manage
                    breaking changes.)

                  Note: this functionality is not currently available in the official
                  protobuf release, and it is not used for type URLs beginning with
                  type.googleapis.com.

                  Schemes other than `http`, `https` (or the empty scheme) might be
                  used with implementation specific semantics.
              value:
                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                type: string
                description: Must be a valid serialized protocol buffer of the above
                  specified type.
                format: byte
            description: |-
              `Any` contains an arbitrary serialized protocol buffer message along with a
              URL that describes the type of the serialized message.

              Protobuf library provides support to pack/unpack Any values in the form
              of utility functions or additional generated methods of the Any type.

              Example 1: Pack and unpack a message in C++.

                  Foo foo = ...;
                  Any any;
                  any.PackFrom(foo);
                  ...
                  if (any.UnpackTo(&foo)) {
                    ...
                  }

              Example 2: Pack and unpack a message in Java.

                  Foo foo = ...;
                  Any any = Any.pack(foo);
                  ...
                  if (any.is(Foo.class)) {
                    foo = any.unpack(Foo.class);
                  }

               Example 3: Pack and unpack a message in Python.

                  foo = Foo(...)
                  any = Any()
                  any.Pack(foo)
                  ...
                  if any.Is(Foo.DESCRIPTOR):
                    any.Unpack(foo)
                    ...

               Example 4: Pack and unpack a message in Go

                   foo := &pb.Foo{...}
                   any, err := ptypes.MarshalAny(foo)
                   ...
                   foo := &pb.Foo{}
                   if err := ptypes.UnmarshalAny(any, foo); err != nil {
                     ...
                   }

              The pack methods provided by protobuf library will by default use
              'type.googleapis.com/full.type.name' as the type URL and the unpack
              methods only use the fully qualified type name after the last '/'
              in the type URL, for example "foo.bar.com/x/y.z" will yield type
              name "y.z".


              JSON
              ====
              The JSON representation of an `Any` value uses the regular
              representation of the deserialized, embedded message, with an
              additional field `@type` which contains the type URL. Example:

                  package google.profile;
                  message Person {
                    string first_name = 1;
                    string last_name = 2;
                  }

                  {
                    "@type": "type.googleapis.com/google.profile.Person",
                    "firstName": <string>,
                    "lastName": <string>
                  }

              If the embedded message type is well-known and has a custom JSON
              representation, that representation will be embedded adding a field
              `value` which holds the custom JSON in addition to the `@type`
              field. Example (for message [google.protobuf.Duration][]):

                  {
                    "@type": "type.googleapis.com/google.protobuf.Duration",
                    "value": "1.212s"
                  }
        pagination:
          type: object
          properties:
            next_key:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
      description: |-
        QueryAccountsResponse is the response type for the Query/Accounts RPC method.

        Since: cosmos-sdk 0.43
    cosmos.auth.v1beta1.QueryModuleAccountByNameResponse:
      type: object
      properties:
        account:
          type: object
          properties:
            type_url:
              type: string
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
            value:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

             Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

             Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := ptypes.MarshalAny(foo)
                 ...
                 foo := &pb.Foo{}
                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".


            JSON
            ====
            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
      description: QueryModuleAccountByNameResponse is the response type for the Query/ModuleAccountByName
        RPC method.
    cosmos.auth.v1beta1.QueryModuleAccountsResponse:
      type: object
      properties:
        accounts:
          type: array
          items:
            type: object
            properties:
              type_url:
                type: string
                description: |-
                  A URL/resource name that uniquely identifies the type of the serialized
                  protocol buffer message. This string must contain at least
                  one "/" character. The last segment of the URL's path must represent
                  the fully qualified name of the type (as in
                  `path/google.protobuf.Duration`). The name should be in a canonical form
                  (e.g., leading "." is not accepted).

                  In practice, teams usually precompile into the binary all types that they
                  expect it to use in the context of Any. However, for URLs which use the
                  scheme `http`, `https`, or no scheme, one can optionally set up a type
                  server that maps type URLs to message definitions as follows:

                  * If no scheme is provided, `https` is assumed.
                  * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                    value in binary format, or produce an error.
                  * Applications are allowed to cache lookup results based on the
                    URL, or have them precompiled into a binary to avoid any
                    lookup. Therefore, binary compatibility needs to be preserved
                    on changes to types. (Use versioned type names to manage
                    breaking changes.)

                  Note: this functionality is not currently available in the official
                  protobuf release, and it is not used for type URLs beginning with
                  type.googleapis.com.

                  Schemes other than `http`, `https` (or the empty scheme) might be
                  used with implementation specific semantics.
              value:
                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                type: string
                description: Must be a valid serialized protocol buffer of the above
                  specified type.
                format: byte
            description: |-
              `Any` contains an arbitrary serialized protocol buffer message along with a
              URL that describes the type of the serialized message.

              Protobuf library provides support to pack/unpack Any values in the form
              of utility functions or additional generated methods of the Any type.

              Example 1: Pack and unpack a message in C++.

                  Foo foo = ...;
                  Any any;
                  any.PackFrom(foo);
                  ...
                  if (any.UnpackTo(&foo)) {
                    ...
                  }

              Example 2: Pack and unpack a message in Java.

                  Foo foo = ...;
                  Any any = Any.pack(foo);
                  ...
                  if (any.is(Foo.class)) {
                    foo = any.unpack(Foo.class);
                  }

               Example 3: Pack and unpack a message in Python.

                  foo = Foo(...)
                  any = Any()
                  any.Pack(foo)
                  ...
                  if any.Is(Foo.DESCRIPTOR):
                    any.Unpack(foo)
                    ...

               Example 4: Pack and unpack a message in Go

                   foo := &pb.Foo{...}
                   any, err := ptypes.MarshalAny(foo)
                   ...
                   foo := &pb.Foo{}
                   if err := ptypes.UnmarshalAny(any, foo); err != nil {
                     ...
                   }

              The pack methods provided by protobuf library will by default use
              'type.googleapis.com/full.type.name' as the type URL and the unpack
              methods only use the fully qualified type name after the last '/'
              in the type URL, for example "foo.bar.com/x/y.z" will yield type
              name "y.z".


              JSON
              ====
              The JSON representation of an `Any` value uses the regular
              representation of the deserialized, embedded message, with an
              additional field `@type` which contains the type URL. Example:

                  package google.profile;
                  message Person {
                    string first_name = 1;
                    string last_name = 2;
                  }

                  {
                    "@type": "type.googleapis.com/google.profile.Person",
                    "firstName": <string>,
                    "lastName": <string>
                  }

              If the embedded message type is well-known and has a custom JSON
              representation, that representation will be embedded adding a field
              `value` which holds the custom JSON in addition to the `@type`
              field. Example (for message [google.protobuf.Duration][]):

                  {
                    "@type": "type.googleapis.com/google.protobuf.Duration",
                    "value": "1.212s"
                  }
      description: |-
        QueryModuleAccountsResponse is the response type for the Query/ModuleAccounts RPC method.

        Since: cosmos-sdk 0.46
    cosmos.auth.v1beta1.QueryParamsResponse:
      type: object
      properties:
        params:
          type: object
          properties:
            max_memo_characters:
              type: string
              format: uint64
            tx_sig_limit:
              type: string
              format: uint64
            tx_size_cost_per_byte:
              type: string
              format: uint64
            sig_verify_cost_ed25519:
              type: string
              format: uint64
            sig_verify_cost_secp256k1:
              type: string
              format: uint64
          description: params defines the parameters of the module.
      description: QueryParamsResponse is the response type for the Query/Params RPC
        method.
    cosmos.authz.v1beta1.Grant:
      type: object
      properties:
        authorization:
          type: object
          properties:
            type_url:
              type: string
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
            value:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

             Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

             Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := ptypes.MarshalAny(foo)
                 ...
                 foo := &pb.Foo{}
                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".


            JSON
            ====
            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
        expiration:
          title: |-
            time when the grant will expire and will be pruned. If null, then the grant
            doesn't have a time expiration (other conditions  in `authorization`
            may apply to invalidate the grant)
          type: string
          format: date-time
      description: |-
        Grant gives permissions to execute
        the provide method with expiration time.
    cosmos.authz.v1beta1.GrantAuthorization:
      title: |-
        GrantAuthorization extends a grant with both the addresses of the grantee and granter.
        It is used in genesis.proto and query.proto
      type: object
      properties:
        granter:
          type: string
        grantee:
          type: string
        authorization:
          type: object
          properties:
            type_url:
              type: string
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
            value:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

             Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

             Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := ptypes.MarshalAny(foo)
                 ...
                 foo := &pb.Foo{}
                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".


            JSON
            ====
            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
        expiration:
          type: string
          format: date-time
    cosmos.authz.v1beta1.QueryGranteeGrantsResponse:
      type: object
      properties:
        grants:
          type: array
          description: grants is a list of grants granted to the grantee.
          items:
            title: |-
              GrantAuthorization extends a grant with both the addresses of the grantee and granter.
              It is used in genesis.proto and query.proto
            type: object
            properties:
              granter:
                type: string
              grantee:
                type: string
              authorization:
                type: object
                properties:
                  type_url:
                    type: string
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                  value:
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                   Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                   Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := ptypes.MarshalAny(foo)
                       ...
                       foo := &pb.Foo{}
                       if err := ptypes.UnmarshalAny(any, foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".


                  JSON
                  ====
                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
              expiration:
                type: string
                format: date-time
        pagination:
          type: object
          properties:
            next_key:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines an pagination for the response.
      description: QueryGranteeGrantsResponse is the response type for the Query/GranteeGrants
        RPC method.
    cosmos.authz.v1beta1.QueryGranterGrantsResponse:
      type: object
      properties:
        grants:
          type: array
          description: grants is a list of grants granted by the granter.
          items:
            title: |-
              GrantAuthorization extends a grant with both the addresses of the grantee and granter.
              It is used in genesis.proto and query.proto
            type: object
            properties:
              granter:
                type: string
              grantee:
                type: string
              authorization:
                type: object
                properties:
                  type_url:
                    type: string
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                  value:
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                   Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                   Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := ptypes.MarshalAny(foo)
                       ...
                       foo := &pb.Foo{}
                       if err := ptypes.UnmarshalAny(any, foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".


                  JSON
                  ====
                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
              expiration:
                type: string
                format: date-time
        pagination:
          type: object
          properties:
            next_key:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines an pagination for the response.
      description: QueryGranterGrantsResponse is the response type for the Query/GranterGrants
        RPC method.
    cosmos.authz.v1beta1.QueryGrantsResponse:
      type: object
      properties:
        grants:
          type: array
          description: authorizations is a list of grants granted for grantee by granter.
          items:
            type: object
            properties:
              authorization:
                type: object
                properties:
                  type_url:
                    type: string
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                  value:
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                   Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                   Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := ptypes.MarshalAny(foo)
                       ...
                       foo := &pb.Foo{}
                       if err := ptypes.UnmarshalAny(any, foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".


                  JSON
                  ====
                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
              expiration:
                title: |-
                  time when the grant will expire and will be pruned. If null, then the grant
                  doesn't have a time expiration (other conditions  in `authorization`
                  may apply to invalidate the grant)
                type: string
                format: date-time
            description: |-
              Grant gives permissions to execute
              the provide method with expiration time.
        pagination:
          type: object
          properties:
            next_key:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines an pagination for the response.
      description: QueryGrantsResponse is the response type for the Query/Authorizations
        RPC method.
    cosmos.bank.v1beta1.DenomOwner:
      type: object
      properties:
        address:
          type: string
          description: address defines the address that owns a particular denomination.
        balance:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
      description: |-
        DenomOwner defines structure representing an account that owns or holds a
        particular denominated token. It contains the account address and account
        balance of the denominated token.

        Since: cosmos-sdk 0.46
    cosmos.bank.v1beta1.DenomUnit:
      type: object
      properties:
        denom:
          type: string
          description: denom represents the string name of the given denom unit (e.g
            uatom).
        exponent:
          type: integer
          description: |-
            exponent represents power of 10 exponent that one must
            raise the base_denom to in order to equal the given DenomUnit's denom
            1 denom = 10^exponent base_denom
            (e.g. with a base_denom of uatom, one can create a DenomUnit of 'atom' with
            exponent = 6, thus: 1 atom = 10^6 uatom).
          format: int64
        aliases:
          title: aliases is a list of string aliases for the given denom
          type: array
          items:
            type: string
      description: |-
        DenomUnit represents a struct that describes a given
        denomination unit of the basic token.
    cosmos.bank.v1beta1.Metadata:
      type: object
      properties:
        description:
          type: string
        denom_units:
          title: denom_units represents the list of DenomUnit's for a given coin
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
                description: denom represents the string name of the given denom unit
                  (e.g uatom).
              exponent:
                type: integer
                description: |-
                  exponent represents power of 10 exponent that one must
                  raise the base_denom to in order to equal the given DenomUnit's denom
                  1 denom = 10^exponent base_denom
                  (e.g. with a base_denom of uatom, one can create a DenomUnit of 'atom' with
                  exponent = 6, thus: 1 atom = 10^6 uatom).
                format: int64
              aliases:
                title: aliases is a list of string aliases for the given denom
                type: array
                items:
                  type: string
            description: |-
              DenomUnit represents a struct that describes a given
              denomination unit of the basic token.
        base:
          type: string
          description: base represents the base denom (should be the DenomUnit with
            exponent = 0).
        display:
          type: string
          description: |-
            display indicates the suggested denom that should be
            displayed in clients.
        name:
          title: "name defines the name of the token (eg: Cosmos Atom)"
          type: string
          description: "Since: cosmos-sdk 0.43"
        symbol:
          type: string
          description: |-
            symbol is the token symbol usually shown on exchanges (eg: ATOM). This can
            be the same as the display.

            Since: cosmos-sdk 0.43
        uri:
          type: string
          description: |-
            URI to a document (on or off-chain) that contains additional information. Optional.

            Since: cosmos-sdk 0.46
        uri_hash:
          type: string
          description: |-
            URIHash is a sha256 hash of a document pointed by URI. It's used to verify that
            the document didn't change. Optional.

            Since: cosmos-sdk 0.46
      description: |-
        Metadata represents a struct that describes
        a basic token.
    cosmos.bank.v1beta1.Params:
      type: object
      properties:
        send_enabled:
          type: array
          description: |-
            Deprecated: Use of SendEnabled in params is deprecated.
            For genesis, use the newly added send_enabled field in the genesis object.
            Storage, lookup, and manipulation of this information is now in the keeper.

            As of cosmos-sdk 0.47, this only exists for backwards compatibility of genesis files.
          items:
            type: object
            properties:
              denom:
                type: string
              enabled:
                type: boolean
            description: |-
              SendEnabled maps coin denom to a send_enabled status (whether a denom is
              sendable).
        default_send_enabled:
          type: boolean
      description: Params defines the parameters for the bank module.
    cosmos.bank.v1beta1.QueryAllBalancesResponse:
      type: object
      properties:
        balances:
          type: array
          description: balances is the balances of all the coins.
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
        pagination:
          type: object
          properties:
            next_key:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
      description: |-
        QueryAllBalancesResponse is the response type for the Query/AllBalances RPC
        method.
    cosmos.bank.v1beta1.QueryBalanceResponse:
      type: object
      properties:
        balance:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
      description: QueryBalanceResponse is the response type for the Query/Balance
        RPC method.
    cosmos.bank.v1beta1.QueryDenomMetadataResponse:
      type: object
      properties:
        metadata:
          type: object
          properties:
            description:
              type: string
            denom_units:
              title: denom_units represents the list of DenomUnit's for a given coin
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                    description: denom represents the string name of the given denom
                      unit (e.g uatom).
                  exponent:
                    type: integer
                    description: |-
                      exponent represents power of 10 exponent that one must
                      raise the base_denom to in order to equal the given DenomUnit's denom
                      1 denom = 10^exponent base_denom
                      (e.g. with a base_denom of uatom, one can create a DenomUnit of 'atom' with
                      exponent = 6, thus: 1 atom = 10^6 uatom).
                    format: int64
                  aliases:
                    title: aliases is a list of string aliases for the given denom
                    type: array
                    items:
                      type: string
                description: |-
                  DenomUnit represents a struct that describes a given
                  denomination unit of the basic token.
            base:
              type: string
              description: base represents the base denom (should be the DenomUnit
                with exponent = 0).
            display:
              type: string
              description: |-
                display indicates the suggested denom that should be
                displayed in clients.
            name:
              title: "name defines the name of the token (eg: Cosmos Atom)"
              type: string
              description: "Since: cosmos-sdk 0.43"
            symbol:
              type: string
              description: |-
                symbol is the token symbol usually shown on exchanges (eg: ATOM). This can
                be the same as the display.

                Since: cosmos-sdk 0.43
            uri:
              type: string
              description: |-
                URI to a document (on or off-chain) that contains additional information. Optional.

                Since: cosmos-sdk 0.46
            uri_hash:
              type: string
              description: |-
                URIHash is a sha256 hash of a document pointed by URI. It's used to verify that
                the document didn't change. Optional.

                Since: cosmos-sdk 0.46
          description: |-
            Metadata represents a struct that describes
            a basic token.
      description: |-
        QueryDenomMetadataResponse is the response type for the Query/DenomMetadata RPC
        method.
    cosmos.bank.v1beta1.QueryDenomOwnersResponse:
      type: object
      properties:
        denom_owners:
          type: array
          items:
            type: object
            properties:
              address:
                type: string
                description: address defines the address that owns a particular denomination.
              balance:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
            description: |-
              DenomOwner defines structure representing an account that owns or holds a
              particular denominated token. It contains the account address and account
              balance of the denominated token.

              Since: cosmos-sdk 0.46
        pagination:
          type: object
          properties:
            next_key:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
      description: |-
        QueryDenomOwnersResponse defines the RPC response of a DenomOwners RPC query.

        Since: cosmos-sdk 0.46
    cosmos.bank.v1beta1.QueryDenomsMetadataResponse:
      type: object
      properties:
        metadatas:
          type: array
          description: metadata provides the client information for all the registered
            tokens.
          items:
            type: object
            properties:
              description:
                type: string
              denom_units:
                title: denom_units represents the list of DenomUnit's for a given
                  coin
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                      description: denom represents the string name of the given denom
                        unit (e.g uatom).
                    exponent:
                      type: integer
                      description: |-
                        exponent represents power of 10 exponent that one must
                        raise the base_denom to in order to equal the given DenomUnit's denom
                        1 denom = 10^exponent base_denom
                        (e.g. with a base_denom of uatom, one can create a DenomUnit of 'atom' with
                        exponent = 6, thus: 1 atom = 10^6 uatom).
                      format: int64
                    aliases:
                      title: aliases is a list of string aliases for the given denom
                      type: array
                      items:
                        type: string
                  description: |-
                    DenomUnit represents a struct that describes a given
                    denomination unit of the basic token.
              base:
                type: string
                description: base represents the base denom (should be the DenomUnit
                  with exponent = 0).
              display:
                type: string
                description: |-
                  display indicates the suggested denom that should be
                  displayed in clients.
              name:
                title: "name defines the name of the token (eg: Cosmos Atom)"
                type: string
                description: "Since: cosmos-sdk 0.43"
              symbol:
                type: string
                description: |-
                  symbol is the token symbol usually shown on exchanges (eg: ATOM). This can
                  be the same as the display.

                  Since: cosmos-sdk 0.43
              uri:
                type: string
                description: |-
                  URI to a document (on or off-chain) that contains additional information. Optional.

                  Since: cosmos-sdk 0.46
              uri_hash:
                type: string
                description: |-
                  URIHash is a sha256 hash of a document pointed by URI. It's used to verify that
                  the document didn't change. Optional.

                  Since: cosmos-sdk 0.46
            description: |-
              Metadata represents a struct that describes
              a basic token.
        pagination:
          type: object
          properties:
            next_key:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
      description: |-
        QueryDenomsMetadataResponse is the response type for the Query/DenomsMetadata RPC
        method.
    cosmos.bank.v1beta1.QueryParamsResponse:
      type: object
      properties:
        params:
          type: object
          properties:
            send_enabled:
              type: array
              description: |-
                Deprecated: Use of SendEnabled in params is deprecated.
                For genesis, use the newly added send_enabled field in the genesis object.
                Storage, lookup, and manipulation of this information is now in the keeper.

                As of cosmos-sdk 0.47, this only exists for backwards compatibility of genesis files.
              items:
                type: object
                properties:
                  denom:
                    type: string
                  enabled:
                    type: boolean
                description: |-
                  SendEnabled maps coin denom to a send_enabled status (whether a denom is
                  sendable).
            default_send_enabled:
              type: boolean
          description: Params defines the parameters for the bank module.
      description: QueryParamsResponse defines the response type for querying x/bank
        parameters.
    cosmos.bank.v1beta1.QuerySendEnabledResponse:
      type: object
      properties:
        send_enabled:
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
              enabled:
                type: boolean
            description: |-
              SendEnabled maps coin denom to a send_enabled status (whether a denom is
              sendable).
        pagination:
          type: object
          properties:
            next_key:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: |-
            pagination defines the pagination in the response. This field is only
            populated if the denoms field in the request is empty.
      description: |-
        QuerySendEnabledResponse defines the RPC response of a SendEnable query.

        Since: cosmos-sdk 0.47
    cosmos.bank.v1beta1.QuerySpendableBalanceByDenomResponse:
      type: object
      properties:
        balance:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
      description: |-
        QuerySpendableBalanceByDenomResponse defines the gRPC response structure for
        querying an account's spendable balance for a specific denom.

        Since: cosmos-sdk 0.47
    cosmos.bank.v1beta1.QuerySpendableBalancesResponse:
      type: object
      properties:
        balances:
          type: array
          description: balances is the spendable balances of all the coins.
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
        pagination:
          type: object
          properties:
            next_key:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
      description: |-
        QuerySpendableBalancesResponse defines the gRPC response structure for querying
        an account's spendable balances.

        Since: cosmos-sdk 0.46
    cosmos.bank.v1beta1.QuerySupplyOfResponse:
      type: object
      properties:
        amount:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
      description: QuerySupplyOfResponse is the response type for the Query/SupplyOf
        RPC method.
    cosmos.bank.v1beta1.QueryTotalSupplyResponse:
      title: |-
        QueryTotalSupplyResponse is the response type for the Query/TotalSupply RPC
        method
      type: object
      properties:
        supply:
          title: supply is the supply of the coins
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
        pagination:
          type: object
          properties:
            next_key:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: |-
            pagination defines the pagination in the response.

            Since: cosmos-sdk 0.43
    cosmos.bank.v1beta1.SendEnabled:
      type: object
      properties:
        denom:
          type: string
        enabled:
          type: boolean
      description: |-
        SendEnabled maps coin denom to a send_enabled status (whether a denom is
        sendable).
    cosmos.base.tendermint.v1beta1.ABCIQueryResponse:
      type: object
      properties:
        code:
          type: integer
          format: int64
        log:
          type: string
        info:
          type: string
        index:
          type: string
          format: int64
        key:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        value:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        proof_ops:
          type: object
          properties:
            ops:
              type: array
              items:
                type: object
                properties:
                  type:
                    type: string
                  key:
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    format: byte
                  data:
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    format: byte
                description: |-
                  ProofOp defines an operation used for calculating Merkle root. The data could
                  be arbitrary format, providing necessary data for example neighbouring node
                  hash.

                  Note: This type is a duplicate of the ProofOp proto type defined in Tendermint.
          description: |-
            ProofOps is Merkle proof defined by the list of ProofOps.

            Note: This type is a duplicate of the ProofOps proto type defined in Tendermint.
        height:
          type: string
          format: int64
        codespace:
          type: string
      description: |-
        ABCIQueryResponse defines the response structure for the ABCIQuery gRPC query.

        Note: This type is a duplicate of the ResponseQuery proto type defined in
        Tendermint.
    cosmos.base.tendermint.v1beta1.Block:
      type: object
      properties:
        header:
          type: object
          properties:
            version:
              title: basic block info
              type: object
              properties:
                block:
                  type: string
                  format: uint64
                app:
                  type: string
                  format: uint64
              description: |-
                Consensus captures the consensus rules for processing a block in the blockchain,
                including all blockchain data structures and the rules of the application's
                state transition machine.
            chain_id:
              type: string
            height:
              type: string
              format: int64
            time:
              type: string
              format: date-time
            last_block_id:
              title: BlockID
              type: object
              properties:
                hash:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                part_set_header:
                  title: PartsetHeader
                  type: object
                  properties:
                    total:
                      type: integer
                      format: int64
                    hash:
                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                      type: string
                      format: byte
            last_commit_hash:
              title: hashes of block data
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
            data_hash:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
            validators_hash:
              title: hashes from the app output from the prev block
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
            next_validators_hash:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
            consensus_hash:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
            app_hash:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
            last_results_hash:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
            evidence_hash:
              title: consensus info
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
            proposer_address:
              type: string
              description: |-
                proposer_address is the original block proposer address, formatted as a Bech32 string.
                In Tendermint, this type is `bytes`, but in the SDK, we convert it to a Bech32 string
                for better UX.
          description: Header defines the structure of a Tendermint block header.
        data:
          title: Data contains the set of transactions included in the block
          type: object
          properties:
            txs:
              type: array
              description: |-
                Txs that will be applied by state @ block.Height+1.
                NOTE: not all txs here are valid.  We're just agreeing on the order first.
                This means that block.AppHash does not include these txs.
              items:
                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                type: string
                format: byte
        evidence:
          type: object
          properties:
            evidence:
              type: array
              items:
                type: object
                properties:
                  duplicate_vote_evidence:
                    type: object
                    properties:
                      vote_a:
                        type: object
                        properties:
                          type:
                            type: string
                            description: |-
                              SignedMsgType is a type of signed message in the consensus.

                               - SIGNED_MSG_TYPE_PREVOTE: Votes
                               - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                            default: SIGNED_MSG_TYPE_UNKNOWN
                            enum:
                            - SIGNED_MSG_TYPE_UNKNOWN
                            - SIGNED_MSG_TYPE_PREVOTE
                            - SIGNED_MSG_TYPE_PRECOMMIT
                            - SIGNED_MSG_TYPE_PROPOSAL
                          height:
                            type: string
                            format: int64
                          round:
                            type: integer
                            format: int32
                          block_id:
                            title: BlockID
                            type: object
                            properties:
                              hash:
                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                type: string
                                format: byte
                              part_set_header:
                                title: PartsetHeader
                                type: object
                                properties:
                                  total:
                                    type: integer
                                    format: int64
                                  hash:
                                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                    type: string
                                    format: byte
                          timestamp:
                            type: string
                            format: date-time
                          validator_address:
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            format: byte
                          validator_index:
                            type: integer
                            format: int32
                          signature:
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            format: byte
                        description: |-
                          Vote represents a prevote, precommit, or commit vote from validators for
                          consensus.
                      vote_b:
                        type: object
                        properties:
                          type:
                            type: string
                            description: |-
                              SignedMsgType is a type of signed message in the consensus.

                               - SIGNED_MSG_TYPE_PREVOTE: Votes
                               - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                            default: SIGNED_MSG_TYPE_UNKNOWN
                            enum:
                            - SIGNED_MSG_TYPE_UNKNOWN
                            - SIGNED_MSG_TYPE_PREVOTE
                            - SIGNED_MSG_TYPE_PRECOMMIT
                            - SIGNED_MSG_TYPE_PROPOSAL
                          height:
                            type: string
                            format: int64
                          round:
                            type: integer
                            format: int32
                          block_id:
                            title: BlockID
                            type: object
                            properties:
                              hash:
                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                type: string
                                format: byte
                              part_set_header:
                                title: PartsetHeader
                                type: object
                                properties:
                                  total:
                                    type: integer
                                    format: int64
                                  hash:
                                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                    type: string
                                    format: byte
                          timestamp:
                            type: string
                            format: date-time
                          validator_address:
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            format: byte
                          validator_index:
                            type: integer
                            format: int32
                          signature:
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            format: byte
                        description: |-
                          Vote represents a prevote, precommit, or commit vote from validators for
                          consensus.
                      total_voting_power:
                        type: string
                        format: int64
                      validator_power:
                        type: string
                        format: int64
                      timestamp:
                        type: string
                        format: date-time
                    description: DuplicateVoteEvidence contains evidence of a validator
                      signed two conflicting votes.
                  light_client_attack_evidence:
                    type: object
                    properties:
                      conflicting_block:
                        type: object
                        properties:
                          signed_header:
                            type: object
                            properties:
                              header:
                                type: object
                                properties:
                                  version:
                                    title: basic block info
                                    type: object
                                    properties:
                                      block:
                                        type: string
                                        format: uint64
                                      app:
                                        type: string
                                        format: uint64
                                    description: |-
                                      Consensus captures the consensus rules for processing a block in the blockchain,
                                      including all blockchain data structures and the rules of the application's
                                      state transition machine.
                                  chain_id:
                                    type: string
                                  height:
                                    type: string
                                    format: int64
                                  time:
                                    type: string
                                    format: date-time
                                  last_block_id:
                                    title: BlockID
                                    type: object
                                    properties:
                                      hash:
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                                      part_set_header:
                                        title: PartsetHeader
                                        type: object
                                        properties:
                                          total:
                                            type: integer
                                            format: int64
                                          hash:
                                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                            type: string
                                            format: byte
                                  last_commit_hash:
                                    title: hashes of block data
                                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                    type: string
                                    format: byte
                                  data_hash:
                                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                    type: string
                                    format: byte
                                  validators_hash:
                                    title: hashes from the app output from the prev
                                      block
                                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                    type: string
                                    format: byte
                                  next_validators_hash:
                                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                    type: string
                                    format: byte
                                  consensus_hash:
                                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                    type: string
                                    format: byte
                                  app_hash:
                                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                    type: string
                                    format: byte
                                  last_results_hash:
                                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                    type: string
                                    format: byte
                                  evidence_hash:
                                    title: consensus info
                                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                    type: string
                                    format: byte
                                  proposer_address:
                                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                    type: string
                                    format: byte
                                description: Header defines the structure of a block
                                  header.
                              commit:
                                type: object
                                properties:
                                  height:
                                    type: string
                                    format: int64
                                  round:
                                    type: integer
                                    format: int32
                                  block_id:
                                    title: BlockID
                                    type: object
                                    properties:
                                      hash:
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                                      part_set_header:
                                        title: PartsetHeader
                                        type: object
                                        properties:
                                          total:
                                            type: integer
                                            format: int64
                                          hash:
                                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                            type: string
                                            format: byte
                                  signatures:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        block_id_flag:
                                          title: BlockIdFlag indicates which BlcokID
                                            the signature is for
                                          type: string
                                          default: BLOCK_ID_FLAG_UNKNOWN
                                          enum:
                                          - BLOCK_ID_FLAG_UNKNOWN
                                          - BLOCK_ID_FLAG_ABSENT
                                          - BLOCK_ID_FLAG_COMMIT
                                          - BLOCK_ID_FLAG_NIL
                                        validator_address:
                                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                          type: string
                                          format: byte
                                        timestamp:
                                          type: string
                                          format: date-time
                                        signature:
                                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                          type: string
                                          format: byte
                                      description: CommitSig is a part of the Vote
                                        included in a Commit.
                                description: Commit contains the evidence that a block
                                  was committed by a set of validators.
                          validator_set:
                            type: object
                            properties:
                              validators:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    address:
                                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                      type: string
                                      format: byte
                                    pub_key:
                                      title: PublicKey defines the keys available
                                        for use with Validators
                                      type: object
                                      properties:
                                        ed25519:
                                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                          type: string
                                          format: byte
                                        secp256k1:
                                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                          type: string
                                          format: byte
                                    voting_power:
                                      type: string
                                      format: int64
                                    proposer_priority:
                                      type: string
                                      format: int64
                              proposer:
                                type: object
                                properties:
                                  address:
                                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                    type: string
                                    format: byte
                                  pub_key:
                                    title: PublicKey defines the keys available for
                                      use with Validators
                                    type: object
                                    properties:
                                      ed25519:
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                                      secp256k1:
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                                  voting_power:
                                    type: string
                                    format: int64
                                  proposer_priority:
                                    type: string
                                    format: int64
                              total_voting_power:
                                type: string
                                format: int64
                      common_height:
                        type: string
                        format: int64
                      byzantine_validators:
                        type: array
                        items:
                          type: object
                          properties:
                            address:
                              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                              type: string
                              format: byte
                            pub_key:
                              title: PublicKey defines the keys available for use
                                with Validators
                              type: object
                              properties:
                                ed25519:
                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                  type: string
                                  format: byte
                                secp256k1:
                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                  type: string
                                  format: byte
                            voting_power:
                              type: string
                              format: int64
                            proposer_priority:
                              type: string
                              format: int64
                      total_voting_power:
                        type: string
                        format: int64
                      timestamp:
                        type: string
                        format: date-time
                    description: LightClientAttackEvidence contains evidence of a
                      set of validators attempting to mislead a light client.
        last_commit:
          type: object
          properties:
            height:
              type: string
              format: int64
            round:
              type: integer
              format: int32
            block_id:
              title: BlockID
              type: object
              properties:
                hash:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                part_set_header:
                  title: PartsetHeader
                  type: object
                  properties:
                    total:
                      type: integer
                      format: int64
                    hash:
                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                      type: string
                      format: byte
            signatures:
              type: array
              items:
                type: object
                properties:
                  block_id_flag:
                    title: BlockIdFlag indicates which BlcokID the signature is for
                    type: string
                    default: BLOCK_ID_FLAG_UNKNOWN
                    enum:
                    - BLOCK_ID_FLAG_UNKNOWN
                    - BLOCK_ID_FLAG_ABSENT
                    - BLOCK_ID_FLAG_COMMIT
                    - BLOCK_ID_FLAG_NIL
                  validator_address:
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    format: byte
                  timestamp:
                    type: string
                    format: date-time
                  signature:
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    format: byte
                description: CommitSig is a part of the Vote included in a Commit.
          description: Commit contains the evidence that a block was committed by
            a set of validators.
      description: |-
        Block is tendermint type Block, with the Header proposer address
        field converted to bech32 string.
    cosmos.base.tendermint.v1beta1.GetBlockByHeightResponse:
      type: object
      properties:
        block_id:
          title: BlockID
          type: object
          properties:
            hash:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
            part_set_header:
              title: PartsetHeader
              type: object
              properties:
                total:
                  type: integer
                  format: int64
                hash:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
        block:
          title: "Deprecated: please use `sdk_block` instead"
          type: object
          properties:
            header:
              type: object
              properties:
                version:
                  title: basic block info
                  type: object
                  properties:
                    block:
                      type: string
                      format: uint64
                    app:
                      type: string
                      format: uint64
                  description: |-
                    Consensus captures the consensus rules for processing a block in the blockchain,
                    including all blockchain data structures and the rules of the application's
                    state transition machine.
                chain_id:
                  type: string
                height:
                  type: string
                  format: int64
                time:
                  type: string
                  format: date-time
                last_block_id:
                  title: BlockID
                  type: object
                  properties:
                    hash:
                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                      type: string
                      format: byte
                    part_set_header:
                      title: PartsetHeader
                      type: object
                      properties:
                        total:
                          type: integer
                          format: int64
                        hash:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
                last_commit_hash:
                  title: hashes of block data
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                data_hash:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                validators_hash:
                  title: hashes from the app output from the prev block
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                next_validators_hash:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                consensus_hash:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                app_hash:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                last_results_hash:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                evidence_hash:
                  title: consensus info
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                proposer_address:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
              description: Header defines the structure of a block header.
            data:
              title: Data contains the set of transactions included in the block
              type: object
              properties:
                txs:
                  type: array
                  description: |-
                    Txs that will be applied by state @ block.Height+1.
                    NOTE: not all txs here are valid.  We're just agreeing on the order first.
                    This means that block.AppHash does not include these txs.
                  items:
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    format: byte
            evidence:
              type: object
              properties:
                evidence:
                  type: array
                  items:
                    type: object
                    properties:
                      duplicate_vote_evidence:
                        type: object
                        properties:
                          vote_a:
                            type: object
                            properties:
                              type:
                                type: string
                                description: |-
                                  SignedMsgType is a type of signed message in the consensus.

                                   - SIGNED_MSG_TYPE_PREVOTE: Votes
                                   - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                default: SIGNED_MSG_TYPE_UNKNOWN
                                enum:
                                - SIGNED_MSG_TYPE_UNKNOWN
                                - SIGNED_MSG_TYPE_PREVOTE
                                - SIGNED_MSG_TYPE_PRECOMMIT
                                - SIGNED_MSG_TYPE_PROPOSAL
                              height:
                                type: string
                                format: int64
                              round:
                                type: integer
                                format: int32
                              block_id:
                                title: BlockID
                                type: object
                                properties:
                                  hash:
                                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                    type: string
                                    format: byte
                                  part_set_header:
                                    title: PartsetHeader
                                    type: object
                                    properties:
                                      total:
                                        type: integer
                                        format: int64
                                      hash:
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                              timestamp:
                                type: string
                                format: date-time
                              validator_address:
                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                type: string
                                format: byte
                              validator_index:
                                type: integer
                                format: int32
                              signature:
                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                type: string
                                format: byte
                            description: |-
                              Vote represents a prevote, precommit, or commit vote from validators for
                              consensus.
                          vote_b:
                            type: object
                            properties:
                              type:
                                type: string
                                description: |-
                                  SignedMsgType is a type of signed message in the consensus.

                                   - SIGNED_MSG_TYPE_PREVOTE: Votes
                                   - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                default: SIGNED_MSG_TYPE_UNKNOWN
                                enum:
                                - SIGNED_MSG_TYPE_UNKNOWN
                                - SIGNED_MSG_TYPE_PREVOTE
                                - SIGNED_MSG_TYPE_PRECOMMIT
                                - SIGNED_MSG_TYPE_PROPOSAL
                              height:
                                type: string
                                format: int64
                              round:
                                type: integer
                                format: int32
                              block_id:
                                title: BlockID
                                type: object
                                properties:
                                  hash:
                                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                    type: string
                                    format: byte
                                  part_set_header:
                                    title: PartsetHeader
                                    type: object
                                    properties:
                                      total:
                                        type: integer
                                        format: int64
                                      hash:
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                              timestamp:
                                type: string
                                format: date-time
                              validator_address:
                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                type: string
                                format: byte
                              validator_index:
                                type: integer
                                format: int32
                              signature:
                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                type: string
                                format: byte
                            description: |-
                              Vote represents a prevote, precommit, or commit vote from validators for
                              consensus.
                          total_voting_power:
                            type: string
                            format: int64
                          validator_power:
                            type: string
                            format: int64
                          timestamp:
                            type: string
                            format: date-time
                        description: DuplicateVoteEvidence contains evidence of a
                          validator signed two conflicting votes.
                      light_client_attack_evidence:
                        type: object
                        properties:
                          conflicting_block:
                            type: object
                            properties:
                              signed_header:
                                type: object
                                properties:
                                  header:
                                    type: object
                                    properties:
                                      version:
                                        title: basic block info
                                        type: object
                                        properties:
                                          block:
                                            type: string
                                            format: uint64
                                          app:
                                            type: string
                                            format: uint64
                                        description: |-
                                          Consensus captures the consensus rules for processing a block in the blockchain,
                                          including all blockchain data structures and the rules of the application's
                                          state transition machine.
                                      chain_id:
                                        type: string
                                      height:
                                        type: string
                                        format: int64
                                      time:
                                        type: string
                                        format: date-time
                                      last_block_id:
                                        title: BlockID
                                        type: object
                                        properties:
                                          hash:
                                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                            type: string
                                            format: byte
                                          part_set_header:
                                            title: PartsetHeader
                                            type: object
                                            properties:
                                              total:
                                                type: integer
                                                format: int64
                                              hash:
                                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                type: string
                                                format: byte
                                      last_commit_hash:
                                        title: hashes of block data
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                                      data_hash:
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                                      validators_hash:
                                        title: hashes from the app output from the
                                          prev block
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                                      next_validators_hash:
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                                      consensus_hash:
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                                      app_hash:
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                                      last_results_hash:
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                                      evidence_hash:
                                        title: consensus info
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                                      proposer_address:
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                                    description: Header defines the structure of a
                                      block header.
                                  commit:
                                    type: object
                                    properties:
                                      height:
                                        type: string
                                        format: int64
                                      round:
                                        type: integer
                                        format: int32
                                      block_id:
                                        title: BlockID
                                        type: object
                                        properties:
                                          hash:
                                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                            type: string
                                            format: byte
                                          part_set_header:
                                            title: PartsetHeader
                                            type: object
                                            properties:
                                              total:
                                                type: integer
                                                format: int64
                                              hash:
                                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                type: string
                                                format: byte
                                      signatures:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            block_id_flag:
                                              title: BlockIdFlag indicates which BlcokID
                                                the signature is for
                                              type: string
                                              default: BLOCK_ID_FLAG_UNKNOWN
                                              enum:
                                              - BLOCK_ID_FLAG_UNKNOWN
                                              - BLOCK_ID_FLAG_ABSENT
                                              - BLOCK_ID_FLAG_COMMIT
                                              - BLOCK_ID_FLAG_NIL
                                            validator_address:
                                              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                              type: string
                                              format: byte
                                            timestamp:
                                              type: string
                                              format: date-time
                                            signature:
                                              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                              type: string
                                              format: byte
                                          description: CommitSig is a part of the
                                            Vote included in a Commit.
                                    description: Commit contains the evidence that
                                      a block was committed by a set of validators.
                              validator_set:
                                type: object
                                properties:
                                  validators:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        address:
                                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                          type: string
                                          format: byte
                                        pub_key:
                                          title: PublicKey defines the keys available
                                            for use with Validators
                                          type: object
                                          properties:
                                            ed25519:
                                              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                              type: string
                                              format: byte
                                            secp256k1:
                                              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                              type: string
                                              format: byte
                                        voting_power:
                                          type: string
                                          format: int64
                                        proposer_priority:
                                          type: string
                                          format: int64
                                  proposer:
                                    type: object
                                    properties:
                                      address:
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                                      pub_key:
                                        title: PublicKey defines the keys available
                                          for use with Validators
                                        type: object
                                        properties:
                                          ed25519:
                                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                            type: string
                                            format: byte
                                          secp256k1:
                                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                            type: string
                                            format: byte
                                      voting_power:
                                        type: string
                                        format: int64
                                      proposer_priority:
                                        type: string
                                        format: int64
                                  total_voting_power:
                                    type: string
                                    format: int64
                          common_height:
                            type: string
                            format: int64
                          byzantine_validators:
                            type: array
                            items:
                              type: object
                              properties:
                                address:
                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                  type: string
                                  format: byte
                                pub_key:
                                  title: PublicKey defines the keys available for
                                    use with Validators
                                  type: object
                                  properties:
                                    ed25519:
                                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                      type: string
                                      format: byte
                                    secp256k1:
                                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                      type: string
                                      format: byte
                                voting_power:
                                  type: string
                                  format: int64
                                proposer_priority:
                                  type: string
                                  format: int64
                          total_voting_power:
                            type: string
                            format: int64
                          timestamp:
                            type: string
                            format: date-time
                        description: LightClientAttackEvidence contains evidence of
                          a set of validators attempting to mislead a light client.
            last_commit:
              type: object
              properties:
                height:
                  type: string
                  format: int64
                round:
                  type: integer
                  format: int32
                block_id:
                  title: BlockID
                  type: object
                  properties:
                    hash:
                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                      type: string
                      format: byte
                    part_set_header:
                      title: PartsetHeader
                      type: object
                      properties:
                        total:
                          type: integer
                          format: int64
                        hash:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
                signatures:
                  type: array
                  items:
                    type: object
                    properties:
                      block_id_flag:
                        title: BlockIdFlag indicates which BlcokID the signature is
                          for
                        type: string
                        default: BLOCK_ID_FLAG_UNKNOWN
                        enum:
                        - BLOCK_ID_FLAG_UNKNOWN
                        - BLOCK_ID_FLAG_ABSENT
                        - BLOCK_ID_FLAG_COMMIT
                        - BLOCK_ID_FLAG_NIL
                      validator_address:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        format: byte
                      timestamp:
                        type: string
                        format: date-time
                      signature:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        format: byte
                    description: CommitSig is a part of the Vote included in a Commit.
              description: Commit contains the evidence that a block was committed
                by a set of validators.
        sdk_block:
          title: "Since: cosmos-sdk 0.47"
          type: object
          properties:
            header:
              type: object
              properties:
                version:
                  title: basic block info
                  type: object
                  properties:
                    block:
                      type: string
                      format: uint64
                    app:
                      type: string
                      format: uint64
                  description: |-
                    Consensus captures the consensus rules for processing a block in the blockchain,
                    including all blockchain data structures and the rules of the application's
                    state transition machine.
                chain_id:
                  type: string
                height:
                  type: string
                  format: int64
                time:
                  type: string
                  format: date-time
                last_block_id:
                  title: BlockID
                  type: object
                  properties:
                    hash:
                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                      type: string
                      format: byte
                    part_set_header:
                      title: PartsetHeader
                      type: object
                      properties:
                        total:
                          type: integer
                          format: int64
                        hash:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
                last_commit_hash:
                  title: hashes of block data
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                data_hash:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                validators_hash:
                  title: hashes from the app output from the prev block
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                next_validators_hash:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                consensus_hash:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                app_hash:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                last_results_hash:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                evidence_hash:
                  title: consensus info
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                proposer_address:
                  type: string
                  description: |-
                    proposer_address is the original block proposer address, formatted as a Bech32 string.
                    In Tendermint, this type is `bytes`, but in the SDK, we convert it to a Bech32 string
                    for better UX.
              description: Header defines the structure of a Tendermint block header.
            data:
              title: Data contains the set of transactions included in the block
              type: object
              properties:
                txs:
                  type: array
                  description: |-
                    Txs that will be applied by state @ block.Height+1.
                    NOTE: not all txs here are valid.  We're just agreeing on the order first.
                    This means that block.AppHash does not include these txs.
                  items:
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    format: byte
            evidence:
              type: object
              properties:
                evidence:
                  type: array
                  items:
                    type: object
                    properties:
                      duplicate_vote_evidence:
                        type: object
                        properties:
                          vote_a:
                            type: object
                            properties:
                              type:
                                type: string
                                description: |-
                                  SignedMsgType is a type of signed message in the consensus.

                                   - SIGNED_MSG_TYPE_PREVOTE: Votes
                                   - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                default: SIGNED_MSG_TYPE_UNKNOWN
                                enum:
                                - SIGNED_MSG_TYPE_UNKNOWN
                                - SIGNED_MSG_TYPE_PREVOTE
                                - SIGNED_MSG_TYPE_PRECOMMIT
                                - SIGNED_MSG_TYPE_PROPOSAL
                              height:
                                type: string
                                format: int64
                              round:
                                type: integer
                                format: int32
                              block_id:
                                title: BlockID
                                type: object
                                properties:
                                  hash:
                                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                    type: string
                                    format: byte
                                  part_set_header:
                                    title: PartsetHeader
                                    type: object
                                    properties:
                                      total:
                                        type: integer
                                        format: int64
                                      hash:
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                              timestamp:
                                type: string
                                format: date-time
                              validator_address:
                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                type: string
                                format: byte
                              validator_index:
                                type: integer
                                format: int32
                              signature:
                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                type: string
                                format: byte
                            description: |-
                              Vote represents a prevote, precommit, or commit vote from validators for
                              consensus.
                          vote_b:
                            type: object
                            properties:
                              type:
                                type: string
                                description: |-
                                  SignedMsgType is a type of signed message in the consensus.

                                   - SIGNED_MSG_TYPE_PREVOTE: Votes
                                   - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                default: SIGNED_MSG_TYPE_UNKNOWN
                                enum:
                                - SIGNED_MSG_TYPE_UNKNOWN
                                - SIGNED_MSG_TYPE_PREVOTE
                                - SIGNED_MSG_TYPE_PRECOMMIT
                                - SIGNED_MSG_TYPE_PROPOSAL
                              height:
                                type: string
                                format: int64
                              round:
                                type: integer
                                format: int32
                              block_id:
                                title: BlockID
                                type: object
                                properties:
                                  hash:
                                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                    type: string
                                    format: byte
                                  part_set_header:
                                    title: PartsetHeader
                                    type: object
                                    properties:
                                      total:
                                        type: integer
                                        format: int64
                                      hash:
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                              timestamp:
                                type: string
                                format: date-time
                              validator_address:
                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                type: string
                                format: byte
                              validator_index:
                                type: integer
                                format: int32
                              signature:
                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                type: string
                                format: byte
                            description: |-
                              Vote represents a prevote, precommit, or commit vote from validators for
                              consensus.
                          total_voting_power:
                            type: string
                            format: int64
                          validator_power:
                            type: string
                            format: int64
                          timestamp:
                            type: string
                            format: date-time
                        description: DuplicateVoteEvidence contains evidence of a
                          validator signed two conflicting votes.
                      light_client_attack_evidence:
                        type: object
                        properties:
                          conflicting_block:
                            type: object
                            properties:
                              signed_header:
                                type: object
                                properties:
                                  header:
                                    type: object
                                    properties:
                                      version:
                                        title: basic block info
                                        type: object
                                        properties:
                                          block:
                                            type: string
                                            format: uint64
                                          app:
                                            type: string
                                            format: uint64
                                        description: |-
                                          Consensus captures the consensus rules for processing a block in the blockchain,
                                          including all blockchain data structures and the rules of the application's
                                          state transition machine.
                                      chain_id:
                                        type: string
                                      height:
                                        type: string
                                        format: int64
                                      time:
                                        type: string
                                        format: date-time
                                      last_block_id:
                                        title: BlockID
                                        type: object
                                        properties:
                                          hash:
                                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                            type: string
                                            format: byte
                                          part_set_header:
                                            title: PartsetHeader
                                            type: object
                                            properties:
                                              total:
                                                type: integer
                                                format: int64
                                              hash:
                                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                type: string
                                                format: byte
                                      last_commit_hash:
                                        title: hashes of block data
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                                      data_hash:
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                                      validators_hash:
                                        title: hashes from the app output from the
                                          prev block
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                                      next_validators_hash:
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                                      consensus_hash:
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                                      app_hash:
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                                      last_results_hash:
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                                      evidence_hash:
                                        title: consensus info
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                                      proposer_address:
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                                    description: Header defines the structure of a
                                      block header.
                                  commit:
                                    type: object
                                    properties:
                                      height:
                                        type: string
                                        format: int64
                                      round:
                                        type: integer
                                        format: int32
                                      block_id:
                                        title: BlockID
                                        type: object
                                        properties:
                                          hash:
                                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                            type: string
                                            format: byte
                                          part_set_header:
                                            title: PartsetHeader
                                            type: object
                                            properties:
                                              total:
                                                type: integer
                                                format: int64
                                              hash:
                                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                type: string
                                                format: byte
                                      signatures:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            block_id_flag:
                                              title: BlockIdFlag indicates which BlcokID
                                                the signature is for
                                              type: string
                                              default: BLOCK_ID_FLAG_UNKNOWN
                                              enum:
                                              - BLOCK_ID_FLAG_UNKNOWN
                                              - BLOCK_ID_FLAG_ABSENT
                                              - BLOCK_ID_FLAG_COMMIT
                                              - BLOCK_ID_FLAG_NIL
                                            validator_address:
                                              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                              type: string
                                              format: byte
                                            timestamp:
                                              type: string
                                              format: date-time
                                            signature:
                                              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                              type: string
                                              format: byte
                                          description: CommitSig is a part of the
                                            Vote included in a Commit.
                                    description: Commit contains the evidence that
                                      a block was committed by a set of validators.
                              validator_set:
                                type: object
                                properties:
                                  validators:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        address:
                                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                          type: string
                                          format: byte
                                        pub_key:
                                          title: PublicKey defines the keys available
                                            for use with Validators
                                          type: object
                                          properties:
                                            ed25519:
                                              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                              type: string
                                              format: byte
                                            secp256k1:
                                              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                              type: string
                                              format: byte
                                        voting_power:
                                          type: string
                                          format: int64
                                        proposer_priority:
                                          type: string
                                          format: int64
                                  proposer:
                                    type: object
                                    properties:
                                      address:
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                                      pub_key:
                                        title: PublicKey defines the keys available
                                          for use with Validators
                                        type: object
                                        properties:
                                          ed25519:
                                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                            type: string
                                            format: byte
                                          secp256k1:
                                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                            type: string
                                            format: byte
                                      voting_power:
                                        type: string
                                        format: int64
                                      proposer_priority:
                                        type: string
                                        format: int64
                                  total_voting_power:
                                    type: string
                                    format: int64
                          common_height:
                            type: string
                            format: int64
                          byzantine_validators:
                            type: array
                            items:
                              type: object
                              properties:
                                address:
                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                  type: string
                                  format: byte
                                pub_key:
                                  title: PublicKey defines the keys available for
                                    use with Validators
                                  type: object
                                  properties:
                                    ed25519:
                                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                      type: string
                                      format: byte
                                    secp256k1:
                                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                      type: string
                                      format: byte
                                voting_power:
                                  type: string
                                  format: int64
                                proposer_priority:
                                  type: string
                                  format: int64
                          total_voting_power:
                            type: string
                            format: int64
                          timestamp:
                            type: string
                            format: date-time
                        description: LightClientAttackEvidence contains evidence of
                          a set of validators attempting to mislead a light client.
            last_commit:
              type: object
              properties:
                height:
                  type: string
                  format: int64
                round:
                  type: integer
                  format: int32
                block_id:
                  title: BlockID
                  type: object
                  properties:
                    hash:
                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                      type: string
                      format: byte
                    part_set_header:
                      title: PartsetHeader
                      type: object
                      properties:
                        total:
                          type: integer
                          format: int64
                        hash:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
                signatures:
                  type: array
                  items:
                    type: object
                    properties:
                      block_id_flag:
                        title: BlockIdFlag indicates which BlcokID the signature is
                          for
                        type: string
                        default: BLOCK_ID_FLAG_UNKNOWN
                        enum:
                        - BLOCK_ID_FLAG_UNKNOWN
                        - BLOCK_ID_FLAG_ABSENT
                        - BLOCK_ID_FLAG_COMMIT
                        - BLOCK_ID_FLAG_NIL
                      validator_address:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        format: byte
                      timestamp:
                        type: string
                        format: date-time
                      signature:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        format: byte
                    description: CommitSig is a part of the Vote included in a Commit.
              description: Commit contains the evidence that a block was committed
                by a set of validators.
          description: |-
            Block is tendermint type Block, with the Header proposer address
            field converted to bech32 string.
      description: GetBlockByHeightResponse is the response type for the Query/GetBlockByHeight
        RPC method.
    cosmos.base.tendermint.v1beta1.GetLatestBlockResponse:
      type: object
      properties:
        block_id:
          title: BlockID
          type: object
          properties:
            hash:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
            part_set_header:
              title: PartsetHeader
              type: object
              properties:
                total:
                  type: integer
                  format: int64
                hash:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
        block:
          title: "Deprecated: please use `sdk_block` instead"
          type: object
          properties:
            header:
              type: object
              properties:
                version:
                  title: basic block info
                  type: object
                  properties:
                    block:
                      type: string
                      format: uint64
                    app:
                      type: string
                      format: uint64
                  description: |-
                    Consensus captures the consensus rules for processing a block in the blockchain,
                    including all blockchain data structures and the rules of the application's
                    state transition machine.
                chain_id:
                  type: string
                height:
                  type: string
                  format: int64
                time:
                  type: string
                  format: date-time
                last_block_id:
                  title: BlockID
                  type: object
                  properties:
                    hash:
                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                      type: string
                      format: byte
                    part_set_header:
                      title: PartsetHeader
                      type: object
                      properties:
                        total:
                          type: integer
                          format: int64
                        hash:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
                last_commit_hash:
                  title: hashes of block data
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                data_hash:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                validators_hash:
                  title: hashes from the app output from the prev block
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                next_validators_hash:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                consensus_hash:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                app_hash:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                last_results_hash:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                evidence_hash:
                  title: consensus info
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                proposer_address:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
              description: Header defines the structure of a block header.
            data:
              title: Data contains the set of transactions included in the block
              type: object
              properties:
                txs:
                  type: array
                  description: |-
                    Txs that will be applied by state @ block.Height+1.
                    NOTE: not all txs here are valid.  We're just agreeing on the order first.
                    This means that block.AppHash does not include these txs.
                  items:
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    format: byte
            evidence:
              type: object
              properties:
                evidence:
                  type: array
                  items:
                    type: object
                    properties:
                      duplicate_vote_evidence:
                        type: object
                        properties:
                          vote_a:
                            type: object
                            properties:
                              type:
                                type: string
                                description: |-
                                  SignedMsgType is a type of signed message in the consensus.

                                   - SIGNED_MSG_TYPE_PREVOTE: Votes
                                   - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                default: SIGNED_MSG_TYPE_UNKNOWN
                                enum:
                                - SIGNED_MSG_TYPE_UNKNOWN
                                - SIGNED_MSG_TYPE_PREVOTE
                                - SIGNED_MSG_TYPE_PRECOMMIT
                                - SIGNED_MSG_TYPE_PROPOSAL
                              height:
                                type: string
                                format: int64
                              round:
                                type: integer
                                format: int32
                              block_id:
                                title: BlockID
                                type: object
                                properties:
                                  hash:
                                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                    type: string
                                    format: byte
                                  part_set_header:
                                    title: PartsetHeader
                                    type: object
                                    properties:
                                      total:
                                        type: integer
                                        format: int64
                                      hash:
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                              timestamp:
                                type: string
                                format: date-time
                              validator_address:
                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                type: string
                                format: byte
                              validator_index:
                                type: integer
                                format: int32
                              signature:
                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                type: string
                                format: byte
                            description: |-
                              Vote represents a prevote, precommit, or commit vote from validators for
                              consensus.
                          vote_b:
                            type: object
                            properties:
                              type:
                                type: string
                                description: |-
                                  SignedMsgType is a type of signed message in the consensus.

                                   - SIGNED_MSG_TYPE_PREVOTE: Votes
                                   - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                default: SIGNED_MSG_TYPE_UNKNOWN
                                enum:
                                - SIGNED_MSG_TYPE_UNKNOWN
                                - SIGNED_MSG_TYPE_PREVOTE
                                - SIGNED_MSG_TYPE_PRECOMMIT
                                - SIGNED_MSG_TYPE_PROPOSAL
                              height:
                                type: string
                                format: int64
                              round:
                                type: integer
                                format: int32
                              block_id:
                                title: BlockID
                                type: object
                                properties:
                                  hash:
                                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                    type: string
                                    format: byte
                                  part_set_header:
                                    title: PartsetHeader
                                    type: object
                                    properties:
                                      total:
                                        type: integer
                                        format: int64
                                      hash:
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                              timestamp:
                                type: string
                                format: date-time
                              validator_address:
                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                type: string
                                format: byte
                              validator_index:
                                type: integer
                                format: int32
                              signature:
                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                type: string
                                format: byte
                            description: |-
                              Vote represents a prevote, precommit, or commit vote from validators for
                              consensus.
                          total_voting_power:
                            type: string
                            format: int64
                          validator_power:
                            type: string
                            format: int64
                          timestamp:
                            type: string
                            format: date-time
                        description: DuplicateVoteEvidence contains evidence of a
                          validator signed two conflicting votes.
                      light_client_attack_evidence:
                        type: object
                        properties:
                          conflicting_block:
                            type: object
                            properties:
                              signed_header:
                                type: object
                                properties:
                                  header:
                                    type: object
                                    properties:
                                      version:
                                        title: basic block info
                                        type: object
                                        properties:
                                          block:
                                            type: string
                                            format: uint64
                                          app:
                                            type: string
                                            format: uint64
                                        description: |-
                                          Consensus captures the consensus rules for processing a block in the blockchain,
                                          including all blockchain data structures and the rules of the application's
                                          state transition machine.
                                      chain_id:
                                        type: string
                                      height:
                                        type: string
                                        format: int64
                                      time:
                                        type: string
                                        format: date-time
                                      last_block_id:
                                        title: BlockID
                                        type: object
                                        properties:
                                          hash:
                                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                            type: string
                                            format: byte
                                          part_set_header:
                                            title: PartsetHeader
                                            type: object
                                            properties:
                                              total:
                                                type: integer
                                                format: int64
                                              hash:
                                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                type: string
                                                format: byte
                                      last_commit_hash:
                                        title: hashes of block data
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                                      data_hash:
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                                      validators_hash:
                                        title: hashes from the app output from the
                                          prev block
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                                      next_validators_hash:
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                                      consensus_hash:
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                                      app_hash:
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                                      last_results_hash:
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                                      evidence_hash:
                                        title: consensus info
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                                      proposer_address:
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                                    description: Header defines the structure of a
                                      block header.
                                  commit:
                                    type: object
                                    properties:
                                      height:
                                        type: string
                                        format: int64
                                      round:
                                        type: integer
                                        format: int32
                                      block_id:
                                        title: BlockID
                                        type: object
                                        properties:
                                          hash:
                                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                            type: string
                                            format: byte
                                          part_set_header:
                                            title: PartsetHeader
                                            type: object
                                            properties:
                                              total:
                                                type: integer
                                                format: int64
                                              hash:
                                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                type: string
                                                format: byte
                                      signatures:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            block_id_flag:
                                              title: BlockIdFlag indicates which BlcokID
                                                the signature is for
                                              type: string
                                              default: BLOCK_ID_FLAG_UNKNOWN
                                              enum:
                                              - BLOCK_ID_FLAG_UNKNOWN
                                              - BLOCK_ID_FLAG_ABSENT
                                              - BLOCK_ID_FLAG_COMMIT
                                              - BLOCK_ID_FLAG_NIL
                                            validator_address:
                                              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                              type: string
                                              format: byte
                                            timestamp:
                                              type: string
                                              format: date-time
                                            signature:
                                              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                              type: string
                                              format: byte
                                          description: CommitSig is a part of the
                                            Vote included in a Commit.
                                    description: Commit contains the evidence that
                                      a block was committed by a set of validators.
                              validator_set:
                                type: object
                                properties:
                                  validators:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        address:
                                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                          type: string
                                          format: byte
                                        pub_key:
                                          title: PublicKey defines the keys available
                                            for use with Validators
                                          type: object
                                          properties:
                                            ed25519:
                                              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                              type: string
                                              format: byte
                                            secp256k1:
                                              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                              type: string
                                              format: byte
                                        voting_power:
                                          type: string
                                          format: int64
                                        proposer_priority:
                                          type: string
                                          format: int64
                                  proposer:
                                    type: object
                                    properties:
                                      address:
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                                      pub_key:
                                        title: PublicKey defines the keys available
                                          for use with Validators
                                        type: object
                                        properties:
                                          ed25519:
                                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                            type: string
                                            format: byte
                                          secp256k1:
                                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                            type: string
                                            format: byte
                                      voting_power:
                                        type: string
                                        format: int64
                                      proposer_priority:
                                        type: string
                                        format: int64
                                  total_voting_power:
                                    type: string
                                    format: int64
                          common_height:
                            type: string
                            format: int64
                          byzantine_validators:
                            type: array
                            items:
                              type: object
                              properties:
                                address:
                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                  type: string
                                  format: byte
                                pub_key:
                                  title: PublicKey defines the keys available for
                                    use with Validators
                                  type: object
                                  properties:
                                    ed25519:
                                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                      type: string
                                      format: byte
                                    secp256k1:
                                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                      type: string
                                      format: byte
                                voting_power:
                                  type: string
                                  format: int64
                                proposer_priority:
                                  type: string
                                  format: int64
                          total_voting_power:
                            type: string
                            format: int64
                          timestamp:
                            type: string
                            format: date-time
                        description: LightClientAttackEvidence contains evidence of
                          a set of validators attempting to mislead a light client.
            last_commit:
              type: object
              properties:
                height:
                  type: string
                  format: int64
                round:
                  type: integer
                  format: int32
                block_id:
                  title: BlockID
                  type: object
                  properties:
                    hash:
                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                      type: string
                      format: byte
                    part_set_header:
                      title: PartsetHeader
                      type: object
                      properties:
                        total:
                          type: integer
                          format: int64
                        hash:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
                signatures:
                  type: array
                  items:
                    type: object
                    properties:
                      block_id_flag:
                        title: BlockIdFlag indicates which BlcokID the signature is
                          for
                        type: string
                        default: BLOCK_ID_FLAG_UNKNOWN
                        enum:
                        - BLOCK_ID_FLAG_UNKNOWN
                        - BLOCK_ID_FLAG_ABSENT
                        - BLOCK_ID_FLAG_COMMIT
                        - BLOCK_ID_FLAG_NIL
                      validator_address:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        format: byte
                      timestamp:
                        type: string
                        format: date-time
                      signature:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        format: byte
                    description: CommitSig is a part of the Vote included in a Commit.
              description: Commit contains the evidence that a block was committed
                by a set of validators.
        sdk_block:
          title: "Since: cosmos-sdk 0.47"
          type: object
          properties:
            header:
              type: object
              properties:
                version:
                  title: basic block info
                  type: object
                  properties:
                    block:
                      type: string
                      format: uint64
                    app:
                      type: string
                      format: uint64
                  description: |-
                    Consensus captures the consensus rules for processing a block in the blockchain,
                    including all blockchain data structures and the rules of the application's
                    state transition machine.
                chain_id:
                  type: string
                height:
                  type: string
                  format: int64
                time:
                  type: string
                  format: date-time
                last_block_id:
                  title: BlockID
                  type: object
                  properties:
                    hash:
                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                      type: string
                      format: byte
                    part_set_header:
                      title: PartsetHeader
                      type: object
                      properties:
                        total:
                          type: integer
                          format: int64
                        hash:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
                last_commit_hash:
                  title: hashes of block data
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                data_hash:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                validators_hash:
                  title: hashes from the app output from the prev block
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                next_validators_hash:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                consensus_hash:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                app_hash:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                last_results_hash:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                evidence_hash:
                  title: consensus info
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                proposer_address:
                  type: string
                  description: |-
                    proposer_address is the original block proposer address, formatted as a Bech32 string.
                    In Tendermint, this type is `bytes`, but in the SDK, we convert it to a Bech32 string
                    for better UX.
              description: Header defines the structure of a Tendermint block header.
            data:
              title: Data contains the set of transactions included in the block
              type: object
              properties:
                txs:
                  type: array
                  description: |-
                    Txs that will be applied by state @ block.Height+1.
                    NOTE: not all txs here are valid.  We're just agreeing on the order first.
                    This means that block.AppHash does not include these txs.
                  items:
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    format: byte
            evidence:
              type: object
              properties:
                evidence:
                  type: array
                  items:
                    type: object
                    properties:
                      duplicate_vote_evidence:
                        type: object
                        properties:
                          vote_a:
                            type: object
                            properties:
                              type:
                                type: string
                                description: |-
                                  SignedMsgType is a type of signed message in the consensus.

                                   - SIGNED_MSG_TYPE_PREVOTE: Votes
                                   - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                default: SIGNED_MSG_TYPE_UNKNOWN
                                enum:
                                - SIGNED_MSG_TYPE_UNKNOWN
                                - SIGNED_MSG_TYPE_PREVOTE
                                - SIGNED_MSG_TYPE_PRECOMMIT
                                - SIGNED_MSG_TYPE_PROPOSAL
                              height:
                                type: string
                                format: int64
                              round:
                                type: integer
                                format: int32
                              block_id:
                                title: BlockID
                                type: object
                                properties:
                                  hash:
                                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                    type: string
                                    format: byte
                                  part_set_header:
                                    title: PartsetHeader
                                    type: object
                                    properties:
                                      total:
                                        type: integer
                                        format: int64
                                      hash:
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                              timestamp:
                                type: string
                                format: date-time
                              validator_address:
                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                type: string
                                format: byte
                              validator_index:
                                type: integer
                                format: int32
                              signature:
                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                type: string
                                format: byte
                            description: |-
                              Vote represents a prevote, precommit, or commit vote from validators for
                              consensus.
                          vote_b:
                            type: object
                            properties:
                              type:
                                type: string
                                description: |-
                                  SignedMsgType is a type of signed message in the consensus.

                                   - SIGNED_MSG_TYPE_PREVOTE: Votes
                                   - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                default: SIGNED_MSG_TYPE_UNKNOWN
                                enum:
                                - SIGNED_MSG_TYPE_UNKNOWN
                                - SIGNED_MSG_TYPE_PREVOTE
                                - SIGNED_MSG_TYPE_PRECOMMIT
                                - SIGNED_MSG_TYPE_PROPOSAL
                              height:
                                type: string
                                format: int64
                              round:
                                type: integer
                                format: int32
                              block_id:
                                title: BlockID
                                type: object
                                properties:
                                  hash:
                                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                    type: string
                                    format: byte
                                  part_set_header:
                                    title: PartsetHeader
                                    type: object
                                    properties:
                                      total:
                                        type: integer
                                        format: int64
                                      hash:
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                              timestamp:
                                type: string
                                format: date-time
                              validator_address:
                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                type: string
                                format: byte
                              validator_index:
                                type: integer
                                format: int32
                              signature:
                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                type: string
                                format: byte
                            description: |-
                              Vote represents a prevote, precommit, or commit vote from validators for
                              consensus.
                          total_voting_power:
                            type: string
                            format: int64
                          validator_power:
                            type: string
                            format: int64
                          timestamp:
                            type: string
                            format: date-time
                        description: DuplicateVoteEvidence contains evidence of a
                          validator signed two conflicting votes.
                      light_client_attack_evidence:
                        type: object
                        properties:
                          conflicting_block:
                            type: object
                            properties:
                              signed_header:
                                type: object
                                properties:
                                  header:
                                    type: object
                                    properties:
                                      version:
                                        title: basic block info
                                        type: object
                                        properties:
                                          block:
                                            type: string
                                            format: uint64
                                          app:
                                            type: string
                                            format: uint64
                                        description: |-
                                          Consensus captures the consensus rules for processing a block in the blockchain,
                                          including all blockchain data structures and the rules of the application's
                                          state transition machine.
                                      chain_id:
                                        type: string
                                      height:
                                        type: string
                                        format: int64
                                      time:
                                        type: string
                                        format: date-time
                                      last_block_id:
                                        title: BlockID
                                        type: object
                                        properties:
                                          hash:
                                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                            type: string
                                            format: byte
                                          part_set_header:
                                            title: PartsetHeader
                                            type: object
                                            properties:
                                              total:
                                                type: integer
                                                format: int64
                                              hash:
                                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                type: string
                                                format: byte
                                      last_commit_hash:
                                        title: hashes of block data
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                                      data_hash:
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                                      validators_hash:
                                        title: hashes from the app output from the
                                          prev block
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                                      next_validators_hash:
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                                      consensus_hash:
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                                      app_hash:
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                                      last_results_hash:
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                                      evidence_hash:
                                        title: consensus info
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                                      proposer_address:
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                                    description: Header defines the structure of a
                                      block header.
                                  commit:
                                    type: object
                                    properties:
                                      height:
                                        type: string
                                        format: int64
                                      round:
                                        type: integer
                                        format: int32
                                      block_id:
                                        title: BlockID
                                        type: object
                                        properties:
                                          hash:
                                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                            type: string
                                            format: byte
                                          part_set_header:
                                            title: PartsetHeader
                                            type: object
                                            properties:
                                              total:
                                                type: integer
                                                format: int64
                                              hash:
                                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                type: string
                                                format: byte
                                      signatures:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            block_id_flag:
                                              title: BlockIdFlag indicates which BlcokID
                                                the signature is for
                                              type: string
                                              default: BLOCK_ID_FLAG_UNKNOWN
                                              enum:
                                              - BLOCK_ID_FLAG_UNKNOWN
                                              - BLOCK_ID_FLAG_ABSENT
                                              - BLOCK_ID_FLAG_COMMIT
                                              - BLOCK_ID_FLAG_NIL
                                            validator_address:
                                              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                              type: string
                                              format: byte
                                            timestamp:
                                              type: string
                                              format: date-time
                                            signature:
                                              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                              type: string
                                              format: byte
                                          description: CommitSig is a part of the
                                            Vote included in a Commit.
                                    description: Commit contains the evidence that
                                      a block was committed by a set of validators.
                              validator_set:
                                type: object
                                properties:
                                  validators:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        address:
                                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                          type: string
                                          format: byte
                                        pub_key:
                                          title: PublicKey defines the keys available
                                            for use with Validators
                                          type: object
                                          properties:
                                            ed25519:
                                              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                              type: string
                                              format: byte
                                            secp256k1:
                                              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                              type: string
                                              format: byte
                                        voting_power:
                                          type: string
                                          format: int64
                                        proposer_priority:
                                          type: string
                                          format: int64
                                  proposer:
                                    type: object
                                    properties:
                                      address:
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                                      pub_key:
                                        title: PublicKey defines the keys available
                                          for use with Validators
                                        type: object
                                        properties:
                                          ed25519:
                                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                            type: string
                                            format: byte
                                          secp256k1:
                                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                            type: string
                                            format: byte
                                      voting_power:
                                        type: string
                                        format: int64
                                      proposer_priority:
                                        type: string
                                        format: int64
                                  total_voting_power:
                                    type: string
                                    format: int64
                          common_height:
                            type: string
                            format: int64
                          byzantine_validators:
                            type: array
                            items:
                              type: object
                              properties:
                                address:
                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                  type: string
                                  format: byte
                                pub_key:
                                  title: PublicKey defines the keys available for
                                    use with Validators
                                  type: object
                                  properties:
                                    ed25519:
                                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                      type: string
                                      format: byte
                                    secp256k1:
                                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                      type: string
                                      format: byte
                                voting_power:
                                  type: string
                                  format: int64
                                proposer_priority:
                                  type: string
                                  format: int64
                          total_voting_power:
                            type: string
                            format: int64
                          timestamp:
                            type: string
                            format: date-time
                        description: LightClientAttackEvidence contains evidence of
                          a set of validators attempting to mislead a light client.
            last_commit:
              type: object
              properties:
                height:
                  type: string
                  format: int64
                round:
                  type: integer
                  format: int32
                block_id:
                  title: BlockID
                  type: object
                  properties:
                    hash:
                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                      type: string
                      format: byte
                    part_set_header:
                      title: PartsetHeader
                      type: object
                      properties:
                        total:
                          type: integer
                          format: int64
                        hash:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
                signatures:
                  type: array
                  items:
                    type: object
                    properties:
                      block_id_flag:
                        title: BlockIdFlag indicates which BlcokID the signature is
                          for
                        type: string
                        default: BLOCK_ID_FLAG_UNKNOWN
                        enum:
                        - BLOCK_ID_FLAG_UNKNOWN
                        - BLOCK_ID_FLAG_ABSENT
                        - BLOCK_ID_FLAG_COMMIT
                        - BLOCK_ID_FLAG_NIL
                      validator_address:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        format: byte
                      timestamp:
                        type: string
                        format: date-time
                      signature:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        format: byte
                    description: CommitSig is a part of the Vote included in a Commit.
              description: Commit contains the evidence that a block was committed
                by a set of validators.
          description: |-
            Block is tendermint type Block, with the Header proposer address
            field converted to bech32 string.
      description: GetLatestBlockResponse is the response type for the Query/GetLatestBlock
        RPC method.
    cosmos.base.tendermint.v1beta1.GetLatestValidatorSetResponse:
      type: object
      properties:
        block_height:
          type: string
          format: int64
        validators:
          type: array
          items:
            type: object
            properties:
              address:
                type: string
              pub_key:
                type: object
                properties:
                  type_url:
                    type: string
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                  value:
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                   Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                   Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := ptypes.MarshalAny(foo)
                       ...
                       foo := &pb.Foo{}
                       if err := ptypes.UnmarshalAny(any, foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".


                  JSON
                  ====
                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
              voting_power:
                type: string
                format: int64
              proposer_priority:
                type: string
                format: int64
            description: Validator is the type for the validator-set.
        pagination:
          type: object
          properties:
            next_key:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines an pagination for the response.
      description: GetLatestValidatorSetResponse is the response type for the Query/GetValidatorSetByHeight
        RPC method.
    cosmos.base.tendermint.v1beta1.GetNodeInfoResponse:
      type: object
      properties:
        default_node_info:
          type: object
          properties:
            protocol_version:
              type: object
              properties:
                p2p:
                  type: string
                  format: uint64
                block:
                  type: string
                  format: uint64
                app:
                  type: string
                  format: uint64
            default_node_id:
              type: string
            listen_addr:
              type: string
            network:
              type: string
            version:
              type: string
            channels:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
            moniker:
              type: string
            other:
              type: object
              properties:
                tx_index:
                  type: string
                rpc_address:
                  type: string
        application_version:
          type: object
          properties:
            name:
              type: string
            app_name:
              type: string
            version:
              type: string
            git_commit:
              type: string
            build_tags:
              type: string
            go_version:
              type: string
            build_deps:
              type: array
              items:
                title: Module is the type for VersionInfo
                type: object
                properties:
                  path:
                    title: module path
                    type: string
                  version:
                    title: module version
                    type: string
                  sum:
                    title: checksum
                    type: string
            cosmos_sdk_version:
              title: "Since: cosmos-sdk 0.43"
              type: string
          description: VersionInfo is the type for the GetNodeInfoResponse message.
      description: GetNodeInfoResponse is the response type for the Query/GetNodeInfo
        RPC method.
    cosmos.base.tendermint.v1beta1.GetSyncingResponse:
      type: object
      properties:
        syncing:
          type: boolean
      description: GetSyncingResponse is the response type for the Query/GetSyncing
        RPC method.
    cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightResponse:
      type: object
      properties:
        block_height:
          type: string
          format: int64
        validators:
          type: array
          items:
            type: object
            properties:
              address:
                type: string
              pub_key:
                type: object
                properties:
                  type_url:
                    type: string
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                  value:
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                   Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                   Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := ptypes.MarshalAny(foo)
                       ...
                       foo := &pb.Foo{}
                       if err := ptypes.UnmarshalAny(any, foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".


                  JSON
                  ====
                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
              voting_power:
                type: string
                format: int64
              proposer_priority:
                type: string
                format: int64
            description: Validator is the type for the validator-set.
        pagination:
          type: object
          properties:
            next_key:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines an pagination for the response.
      description: GetValidatorSetByHeightResponse is the response type for the Query/GetValidatorSetByHeight
        RPC method.
    cosmos.base.tendermint.v1beta1.Header:
      type: object
      properties:
        version:
          title: basic block info
          type: object
          properties:
            block:
              type: string
              format: uint64
            app:
              type: string
              format: uint64
          description: |-
            Consensus captures the consensus rules for processing a block in the blockchain,
            including all blockchain data structures and the rules of the application's
            state transition machine.
        chain_id:
          type: string
        height:
          type: string
          format: int64
        time:
          type: string
          format: date-time
        last_block_id:
          title: BlockID
          type: object
          properties:
            hash:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
            part_set_header:
              title: PartsetHeader
              type: object
              properties:
                total:
                  type: integer
                  format: int64
                hash:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
        last_commit_hash:
          title: hashes of block data
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        data_hash:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        validators_hash:
          title: hashes from the app output from the prev block
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        next_validators_hash:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        consensus_hash:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        app_hash:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        last_results_hash:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        evidence_hash:
          title: consensus info
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        proposer_address:
          type: string
          description: |-
            proposer_address is the original block proposer address, formatted as a Bech32 string.
            In Tendermint, this type is `bytes`, but in the SDK, we convert it to a Bech32 string
            for better UX.
      description: Header defines the structure of a Tendermint block header.
    cosmos.base.tendermint.v1beta1.Module:
      title: Module is the type for VersionInfo
      type: object
      properties:
        path:
          title: module path
          type: string
        version:
          title: module version
          type: string
        sum:
          title: checksum
          type: string
    cosmos.base.tendermint.v1beta1.ProofOp:
      type: object
      properties:
        type:
          type: string
        key:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        data:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
      description: |-
        ProofOp defines an operation used for calculating Merkle root. The data could
        be arbitrary format, providing necessary data for example neighbouring node
        hash.

        Note: This type is a duplicate of the ProofOp proto type defined in Tendermint.
    cosmos.base.tendermint.v1beta1.ProofOps:
      type: object
      properties:
        ops:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
              key:
                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                type: string
                format: byte
              data:
                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                type: string
                format: byte
            description: |-
              ProofOp defines an operation used for calculating Merkle root. The data could
              be arbitrary format, providing necessary data for example neighbouring node
              hash.

              Note: This type is a duplicate of the ProofOp proto type defined in Tendermint.
      description: |-
        ProofOps is Merkle proof defined by the list of ProofOps.

        Note: This type is a duplicate of the ProofOps proto type defined in Tendermint.
    cosmos.base.tendermint.v1beta1.Validator:
      type: object
      properties:
        address:
          type: string
        pub_key:
          type: object
          properties:
            type_url:
              type: string
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
            value:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

             Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

             Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := ptypes.MarshalAny(foo)
                 ...
                 foo := &pb.Foo{}
                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".


            JSON
            ====
            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
        voting_power:
          type: string
          format: int64
        proposer_priority:
          type: string
          format: int64
      description: Validator is the type for the validator-set.
    cosmos.base.tendermint.v1beta1.VersionInfo:
      type: object
      properties:
        name:
          type: string
        app_name:
          type: string
        version:
          type: string
        git_commit:
          type: string
        build_tags:
          type: string
        go_version:
          type: string
        build_deps:
          type: array
          items:
            title: Module is the type for VersionInfo
            type: object
            properties:
              path:
                title: module path
                type: string
              version:
                title: module version
                type: string
              sum:
                title: checksum
                type: string
        cosmos_sdk_version:
          title: "Since: cosmos-sdk 0.43"
          type: string
      description: VersionInfo is the type for the GetNodeInfoResponse message.
    tendermint.crypto.PublicKey:
      title: PublicKey defines the keys available for use with Validators
      type: object
      properties:
        ed25519:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        secp256k1:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
    tendermint.p2p.DefaultNodeInfo:
      type: object
      properties:
        protocol_version:
          type: object
          properties:
            p2p:
              type: string
              format: uint64
            block:
              type: string
              format: uint64
            app:
              type: string
              format: uint64
        default_node_id:
          type: string
        listen_addr:
          type: string
        network:
          type: string
        version:
          type: string
        channels:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        moniker:
          type: string
        other:
          type: object
          properties:
            tx_index:
              type: string
            rpc_address:
              type: string
    tendermint.p2p.DefaultNodeInfoOther:
      type: object
      properties:
        tx_index:
          type: string
        rpc_address:
          type: string
    tendermint.p2p.ProtocolVersion:
      type: object
      properties:
        p2p:
          type: string
          format: uint64
        block:
          type: string
          format: uint64
        app:
          type: string
          format: uint64
    tendermint.types.Block:
      type: object
      properties:
        header:
          type: object
          properties:
            version:
              title: basic block info
              type: object
              properties:
                block:
                  type: string
                  format: uint64
                app:
                  type: string
                  format: uint64
              description: |-
                Consensus captures the consensus rules for processing a block in the blockchain,
                including all blockchain data structures and the rules of the application's
                state transition machine.
            chain_id:
              type: string
            height:
              type: string
              format: int64
            time:
              type: string
              format: date-time
            last_block_id:
              title: BlockID
              type: object
              properties:
                hash:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                part_set_header:
                  title: PartsetHeader
                  type: object
                  properties:
                    total:
                      type: integer
                      format: int64
                    hash:
                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                      type: string
                      format: byte
            last_commit_hash:
              title: hashes of block data
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
            data_hash:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
            validators_hash:
              title: hashes from the app output from the prev block
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
            next_validators_hash:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
            consensus_hash:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
            app_hash:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
            last_results_hash:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
            evidence_hash:
              title: consensus info
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
            proposer_address:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
          description: Header defines the structure of a block header.
        data:
          title: Data contains the set of transactions included in the block
          type: object
          properties:
            txs:
              type: array
              description: |-
                Txs that will be applied by state @ block.Height+1.
                NOTE: not all txs here are valid.  We're just agreeing on the order first.
                This means that block.AppHash does not include these txs.
              items:
                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                type: string
                format: byte
        evidence:
          type: object
          properties:
            evidence:
              type: array
              items:
                type: object
                properties:
                  duplicate_vote_evidence:
                    type: object
                    properties:
                      vote_a:
                        type: object
                        properties:
                          type:
                            type: string
                            description: |-
                              SignedMsgType is a type of signed message in the consensus.

                               - SIGNED_MSG_TYPE_PREVOTE: Votes
                               - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                            default: SIGNED_MSG_TYPE_UNKNOWN
                            enum:
                            - SIGNED_MSG_TYPE_UNKNOWN
                            - SIGNED_MSG_TYPE_PREVOTE
                            - SIGNED_MSG_TYPE_PRECOMMIT
                            - SIGNED_MSG_TYPE_PROPOSAL
                          height:
                            type: string
                            format: int64
                          round:
                            type: integer
                            format: int32
                          block_id:
                            title: BlockID
                            type: object
                            properties:
                              hash:
                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                type: string
                                format: byte
                              part_set_header:
                                title: PartsetHeader
                                type: object
                                properties:
                                  total:
                                    type: integer
                                    format: int64
                                  hash:
                                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                    type: string
                                    format: byte
                          timestamp:
                            type: string
                            format: date-time
                          validator_address:
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            format: byte
                          validator_index:
                            type: integer
                            format: int32
                          signature:
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            format: byte
                        description: |-
                          Vote represents a prevote, precommit, or commit vote from validators for
                          consensus.
                      vote_b:
                        type: object
                        properties:
                          type:
                            type: string
                            description: |-
                              SignedMsgType is a type of signed message in the consensus.

                               - SIGNED_MSG_TYPE_PREVOTE: Votes
                               - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                            default: SIGNED_MSG_TYPE_UNKNOWN
                            enum:
                            - SIGNED_MSG_TYPE_UNKNOWN
                            - SIGNED_MSG_TYPE_PREVOTE
                            - SIGNED_MSG_TYPE_PRECOMMIT
                            - SIGNED_MSG_TYPE_PROPOSAL
                          height:
                            type: string
                            format: int64
                          round:
                            type: integer
                            format: int32
                          block_id:
                            title: BlockID
                            type: object
                            properties:
                              hash:
                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                type: string
                                format: byte
                              part_set_header:
                                title: PartsetHeader
                                type: object
                                properties:
                                  total:
                                    type: integer
                                    format: int64
                                  hash:
                                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                    type: string
                                    format: byte
                          timestamp:
                            type: string
                            format: date-time
                          validator_address:
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            format: byte
                          validator_index:
                            type: integer
                            format: int32
                          signature:
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            format: byte
                        description: |-
                          Vote represents a prevote, precommit, or commit vote from validators for
                          consensus.
                      total_voting_power:
                        type: string
                        format: int64
                      validator_power:
                        type: string
                        format: int64
                      timestamp:
                        type: string
                        format: date-time
                    description: DuplicateVoteEvidence contains evidence of a validator
                      signed two conflicting votes.
                  light_client_attack_evidence:
                    type: object
                    properties:
                      conflicting_block:
                        type: object
                        properties:
                          signed_header:
                            type: object
                            properties:
                              header:
                                type: object
                                properties:
                                  version:
                                    title: basic block info
                                    type: object
                                    properties:
                                      block:
                                        type: string
                                        format: uint64
                                      app:
                                        type: string
                                        format: uint64
                                    description: |-
                                      Consensus captures the consensus rules for processing a block in the blockchain,
                                      including all blockchain data structures and the rules of the application's
                                      state transition machine.
                                  chain_id:
                                    type: string
                                  height:
                                    type: string
                                    format: int64
                                  time:
                                    type: string
                                    format: date-time
                                  last_block_id:
                                    title: BlockID
                                    type: object
                                    properties:
                                      hash:
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                                      part_set_header:
                                        title: PartsetHeader
                                        type: object
                                        properties:
                                          total:
                                            type: integer
                                            format: int64
                                          hash:
                                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                            type: string
                                            format: byte
                                  last_commit_hash:
                                    title: hashes of block data
                                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                    type: string
                                    format: byte
                                  data_hash:
                                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                    type: string
                                    format: byte
                                  validators_hash:
                                    title: hashes from the app output from the prev
                                      block
                                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                    type: string
                                    format: byte
                                  next_validators_hash:
                                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                    type: string
                                    format: byte
                                  consensus_hash:
                                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                    type: string
                                    format: byte
                                  app_hash:
                                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                    type: string
                                    format: byte
                                  last_results_hash:
                                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                    type: string
                                    format: byte
                                  evidence_hash:
                                    title: consensus info
                                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                    type: string
                                    format: byte
                                  proposer_address:
                                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                    type: string
                                    format: byte
                                description: Header defines the structure of a block
                                  header.
                              commit:
                                type: object
                                properties:
                                  height:
                                    type: string
                                    format: int64
                                  round:
                                    type: integer
                                    format: int32
                                  block_id:
                                    title: BlockID
                                    type: object
                                    properties:
                                      hash:
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                                      part_set_header:
                                        title: PartsetHeader
                                        type: object
                                        properties:
                                          total:
                                            type: integer
                                            format: int64
                                          hash:
                                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                            type: string
                                            format: byte
                                  signatures:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        block_id_flag:
                                          title: BlockIdFlag indicates which BlcokID
                                            the signature is for
                                          type: string
                                          default: BLOCK_ID_FLAG_UNKNOWN
                                          enum:
                                          - BLOCK_ID_FLAG_UNKNOWN
                                          - BLOCK_ID_FLAG_ABSENT
                                          - BLOCK_ID_FLAG_COMMIT
                                          - BLOCK_ID_FLAG_NIL
                                        validator_address:
                                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                          type: string
                                          format: byte
                                        timestamp:
                                          type: string
                                          format: date-time
                                        signature:
                                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                          type: string
                                          format: byte
                                      description: CommitSig is a part of the Vote
                                        included in a Commit.
                                description: Commit contains the evidence that a block
                                  was committed by a set of validators.
                          validator_set:
                            type: object
                            properties:
                              validators:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    address:
                                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                      type: string
                                      format: byte
                                    pub_key:
                                      title: PublicKey defines the keys available
                                        for use with Validators
                                      type: object
                                      properties:
                                        ed25519:
                                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                          type: string
                                          format: byte
                                        secp256k1:
                                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                          type: string
                                          format: byte
                                    voting_power:
                                      type: string
                                      format: int64
                                    proposer_priority:
                                      type: string
                                      format: int64
                              proposer:
                                type: object
                                properties:
                                  address:
                                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                    type: string
                                    format: byte
                                  pub_key:
                                    title: PublicKey defines the keys available for
                                      use with Validators
                                    type: object
                                    properties:
                                      ed25519:
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                                      secp256k1:
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                                  voting_power:
                                    type: string
                                    format: int64
                                  proposer_priority:
                                    type: string
                                    format: int64
                              total_voting_power:
                                type: string
                                format: int64
                      common_height:
                        type: string
                        format: int64
                      byzantine_validators:
                        type: array
                        items:
                          type: object
                          properties:
                            address:
                              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                              type: string
                              format: byte
                            pub_key:
                              title: PublicKey defines the keys available for use
                                with Validators
                              type: object
                              properties:
                                ed25519:
                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                  type: string
                                  format: byte
                                secp256k1:
                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                  type: string
                                  format: byte
                            voting_power:
                              type: string
                              format: int64
                            proposer_priority:
                              type: string
                              format: int64
                      total_voting_power:
                        type: string
                        format: int64
                      timestamp:
                        type: string
                        format: date-time
                    description: LightClientAttackEvidence contains evidence of a
                      set of validators attempting to mislead a light client.
        last_commit:
          type: object
          properties:
            height:
              type: string
              format: int64
            round:
              type: integer
              format: int32
            block_id:
              title: BlockID
              type: object
              properties:
                hash:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                part_set_header:
                  title: PartsetHeader
                  type: object
                  properties:
                    total:
                      type: integer
                      format: int64
                    hash:
                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                      type: string
                      format: byte
            signatures:
              type: array
              items:
                type: object
                properties:
                  block_id_flag:
                    title: BlockIdFlag indicates which BlcokID the signature is for
                    type: string
                    default: BLOCK_ID_FLAG_UNKNOWN
                    enum:
                    - BLOCK_ID_FLAG_UNKNOWN
                    - BLOCK_ID_FLAG_ABSENT
                    - BLOCK_ID_FLAG_COMMIT
                    - BLOCK_ID_FLAG_NIL
                  validator_address:
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    format: byte
                  timestamp:
                    type: string
                    format: date-time
                  signature:
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    format: byte
                description: CommitSig is a part of the Vote included in a Commit.
          description: Commit contains the evidence that a block was committed by
            a set of validators.
    tendermint.types.BlockID:
      title: BlockID
      type: object
      properties:
        hash:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        part_set_header:
          title: PartsetHeader
          type: object
          properties:
            total:
              type: integer
              format: int64
            hash:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
    tendermint.types.BlockIDFlag:
      title: BlockIdFlag indicates which BlcokID the signature is for
      type: string
      default: BLOCK_ID_FLAG_UNKNOWN
      enum:
      - BLOCK_ID_FLAG_UNKNOWN
      - BLOCK_ID_FLAG_ABSENT
      - BLOCK_ID_FLAG_COMMIT
      - BLOCK_ID_FLAG_NIL
    tendermint.types.Commit:
      type: object
      properties:
        height:
          type: string
          format: int64
        round:
          type: integer
          format: int32
        block_id:
          title: BlockID
          type: object
          properties:
            hash:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
            part_set_header:
              title: PartsetHeader
              type: object
              properties:
                total:
                  type: integer
                  format: int64
                hash:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
        signatures:
          type: array
          items:
            type: object
            properties:
              block_id_flag:
                title: BlockIdFlag indicates which BlcokID the signature is for
                type: string
                default: BLOCK_ID_FLAG_UNKNOWN
                enum:
                - BLOCK_ID_FLAG_UNKNOWN
                - BLOCK_ID_FLAG_ABSENT
                - BLOCK_ID_FLAG_COMMIT
                - BLOCK_ID_FLAG_NIL
              validator_address:
                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                type: string
                format: byte
              timestamp:
                type: string
                format: date-time
              signature:
                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                type: string
                format: byte
            description: CommitSig is a part of the Vote included in a Commit.
      description: Commit contains the evidence that a block was committed by a set
        of validators.
    tendermint.types.CommitSig:
      type: object
      properties:
        block_id_flag:
          title: BlockIdFlag indicates which BlcokID the signature is for
          type: string
          default: BLOCK_ID_FLAG_UNKNOWN
          enum:
          - BLOCK_ID_FLAG_UNKNOWN
          - BLOCK_ID_FLAG_ABSENT
          - BLOCK_ID_FLAG_COMMIT
          - BLOCK_ID_FLAG_NIL
        validator_address:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        timestamp:
          type: string
          format: date-time
        signature:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
      description: CommitSig is a part of the Vote included in a Commit.
    tendermint.types.Data:
      title: Data contains the set of transactions included in the block
      type: object
      properties:
        txs:
          type: array
          description: |-
            Txs that will be applied by state @ block.Height+1.
            NOTE: not all txs here are valid.  We're just agreeing on the order first.
            This means that block.AppHash does not include these txs.
          items:
            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
            type: string
            format: byte
    tendermint.types.DuplicateVoteEvidence:
      type: object
      properties:
        vote_a:
          type: object
          properties:
            type:
              type: string
              description: |-
                SignedMsgType is a type of signed message in the consensus.

                 - SIGNED_MSG_TYPE_PREVOTE: Votes
                 - SIGNED_MSG_TYPE_PROPOSAL: Proposals
              default: SIGNED_MSG_TYPE_UNKNOWN
              enum:
              - SIGNED_MSG_TYPE_UNKNOWN
              - SIGNED_MSG_TYPE_PREVOTE
              - SIGNED_MSG_TYPE_PRECOMMIT
              - SIGNED_MSG_TYPE_PROPOSAL
            height:
              type: string
              format: int64
            round:
              type: integer
              format: int32
            block_id:
              title: BlockID
              type: object
              properties:
                hash:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                part_set_header:
                  title: PartsetHeader
                  type: object
                  properties:
                    total:
                      type: integer
                      format: int64
                    hash:
                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                      type: string
                      format: byte
            timestamp:
              type: string
              format: date-time
            validator_address:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
            validator_index:
              type: integer
              format: int32
            signature:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
          description: |-
            Vote represents a prevote, precommit, or commit vote from validators for
            consensus.
        vote_b:
          type: object
          properties:
            type:
              type: string
              description: |-
                SignedMsgType is a type of signed message in the consensus.

                 - SIGNED_MSG_TYPE_PREVOTE: Votes
                 - SIGNED_MSG_TYPE_PROPOSAL: Proposals
              default: SIGNED_MSG_TYPE_UNKNOWN
              enum:
              - SIGNED_MSG_TYPE_UNKNOWN
              - SIGNED_MSG_TYPE_PREVOTE
              - SIGNED_MSG_TYPE_PRECOMMIT
              - SIGNED_MSG_TYPE_PROPOSAL
            height:
              type: string
              format: int64
            round:
              type: integer
              format: int32
            block_id:
              title: BlockID
              type: object
              properties:
                hash:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                part_set_header:
                  title: PartsetHeader
                  type: object
                  properties:
                    total:
                      type: integer
                      format: int64
                    hash:
                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                      type: string
                      format: byte
            timestamp:
              type: string
              format: date-time
            validator_address:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
            validator_index:
              type: integer
              format: int32
            signature:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
          description: |-
            Vote represents a prevote, precommit, or commit vote from validators for
            consensus.
        total_voting_power:
          type: string
          format: int64
        validator_power:
          type: string
          format: int64
        timestamp:
          type: string
          format: date-time
      description: DuplicateVoteEvidence contains evidence of a validator signed two
        conflicting votes.
    tendermint.types.Evidence:
      type: object
      properties:
        duplicate_vote_evidence:
          type: object
          properties:
            vote_a:
              type: object
              properties:
                type:
                  type: string
                  description: |-
                    SignedMsgType is a type of signed message in the consensus.

                     - SIGNED_MSG_TYPE_PREVOTE: Votes
                     - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                  default: SIGNED_MSG_TYPE_UNKNOWN
                  enum:
                  - SIGNED_MSG_TYPE_UNKNOWN
                  - SIGNED_MSG_TYPE_PREVOTE
                  - SIGNED_MSG_TYPE_PRECOMMIT
                  - SIGNED_MSG_TYPE_PROPOSAL
                height:
                  type: string
                  format: int64
                round:
                  type: integer
                  format: int32
                block_id:
                  title: BlockID
                  type: object
                  properties:
                    hash:
                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                      type: string
                      format: byte
                    part_set_header:
                      title: PartsetHeader
                      type: object
                      properties:
                        total:
                          type: integer
                          format: int64
                        hash:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
                timestamp:
                  type: string
                  format: date-time
                validator_address:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                validator_index:
                  type: integer
                  format: int32
                signature:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
              description: |-
                Vote represents a prevote, precommit, or commit vote from validators for
                consensus.
            vote_b:
              type: object
              properties:
                type:
                  type: string
                  description: |-
                    SignedMsgType is a type of signed message in the consensus.

                     - SIGNED_MSG_TYPE_PREVOTE: Votes
                     - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                  default: SIGNED_MSG_TYPE_UNKNOWN
                  enum:
                  - SIGNED_MSG_TYPE_UNKNOWN
                  - SIGNED_MSG_TYPE_PREVOTE
                  - SIGNED_MSG_TYPE_PRECOMMIT
                  - SIGNED_MSG_TYPE_PROPOSAL
                height:
                  type: string
                  format: int64
                round:
                  type: integer
                  format: int32
                block_id:
                  title: BlockID
                  type: object
                  properties:
                    hash:
                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                      type: string
                      format: byte
                    part_set_header:
                      title: PartsetHeader
                      type: object
                      properties:
                        total:
                          type: integer
                          format: int64
                        hash:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
                timestamp:
                  type: string
                  format: date-time
                validator_address:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                validator_index:
                  type: integer
                  format: int32
                signature:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
              description: |-
                Vote represents a prevote, precommit, or commit vote from validators for
                consensus.
            total_voting_power:
              type: string
              format: int64
            validator_power:
              type: string
              format: int64
            timestamp:
              type: string
              format: date-time
          description: DuplicateVoteEvidence contains evidence of a validator signed
            two conflicting votes.
        light_client_attack_evidence:
          type: object
          properties:
            conflicting_block:
              type: object
              properties:
                signed_header:
                  type: object
                  properties:
                    header:
                      type: object
                      properties:
                        version:
                          title: basic block info
                          type: object
                          properties:
                            block:
                              type: string
                              format: uint64
                            app:
                              type: string
                              format: uint64
                          description: |-
                            Consensus captures the consensus rules for processing a block in the blockchain,
                            including all blockchain data structures and the rules of the application's
                            state transition machine.
                        chain_id:
                          type: string
                        height:
                          type: string
                          format: int64
                        time:
                          type: string
                          format: date-time
                        last_block_id:
                          title: BlockID
                          type: object
                          properties:
                            hash:
                              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                              type: string
                              format: byte
                            part_set_header:
                              title: PartsetHeader
                              type: object
                              properties:
                                total:
                                  type: integer
                                  format: int64
                                hash:
                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                  type: string
                                  format: byte
                        last_commit_hash:
                          title: hashes of block data
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
                        data_hash:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
                        validators_hash:
                          title: hashes from the app output from the prev block
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
                        next_validators_hash:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
                        consensus_hash:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
                        app_hash:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
                        last_results_hash:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
                        evidence_hash:
                          title: consensus info
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
                        proposer_address:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
                      description: Header defines the structure of a block header.
                    commit:
                      type: object
                      properties:
                        height:
                          type: string
                          format: int64
                        round:
                          type: integer
                          format: int32
                        block_id:
                          title: BlockID
                          type: object
                          properties:
                            hash:
                              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                              type: string
                              format: byte
                            part_set_header:
                              title: PartsetHeader
                              type: object
                              properties:
                                total:
                                  type: integer
                                  format: int64
                                hash:
                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                  type: string
                                  format: byte
                        signatures:
                          type: array
                          items:
                            type: object
                            properties:
                              block_id_flag:
                                title: BlockIdFlag indicates which BlcokID the signature
                                  is for
                                type: string
                                default: BLOCK_ID_FLAG_UNKNOWN
                                enum:
                                - BLOCK_ID_FLAG_UNKNOWN
                                - BLOCK_ID_FLAG_ABSENT
                                - BLOCK_ID_FLAG_COMMIT
                                - BLOCK_ID_FLAG_NIL
                              validator_address:
                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                type: string
                                format: byte
                              timestamp:
                                type: string
                                format: date-time
                              signature:
                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                type: string
                                format: byte
                            description: CommitSig is a part of the Vote included
                              in a Commit.
                      description: Commit contains the evidence that a block was committed
                        by a set of validators.
                validator_set:
                  type: object
                  properties:
                    validators:
                      type: array
                      items:
                        type: object
                        properties:
                          address:
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            format: byte
                          pub_key:
                            title: PublicKey defines the keys available for use with
                              Validators
                            type: object
                            properties:
                              ed25519:
                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                type: string
                                format: byte
                              secp256k1:
                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                type: string
                                format: byte
                          voting_power:
                            type: string
                            format: int64
                          proposer_priority:
                            type: string
                            format: int64
                    proposer:
                      type: object
                      properties:
                        address:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
                        pub_key:
                          title: PublicKey defines the keys available for use with
                            Validators
                          type: object
                          properties:
                            ed25519:
                              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                              type: string
                              format: byte
                            secp256k1:
                              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                              type: string
                              format: byte
                        voting_power:
                          type: string
                          format: int64
                        proposer_priority:
                          type: string
                          format: int64
                    total_voting_power:
                      type: string
                      format: int64
            common_height:
              type: string
              format: int64
            byzantine_validators:
              type: array
              items:
                type: object
                properties:
                  address:
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    format: byte
                  pub_key:
                    title: PublicKey defines the keys available for use with Validators
                    type: object
                    properties:
                      ed25519:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        format: byte
                      secp256k1:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        format: byte
                  voting_power:
                    type: string
                    format: int64
                  proposer_priority:
                    type: string
                    format: int64
            total_voting_power:
              type: string
              format: int64
            timestamp:
              type: string
              format: date-time
          description: LightClientAttackEvidence contains evidence of a set of validators
            attempting to mislead a light client.
    tendermint.types.EvidenceList:
      type: object
      properties:
        evidence:
          type: array
          items:
            type: object
            properties:
              duplicate_vote_evidence:
                type: object
                properties:
                  vote_a:
                    type: object
                    properties:
                      type:
                        type: string
                        description: |-
                          SignedMsgType is a type of signed message in the consensus.

                           - SIGNED_MSG_TYPE_PREVOTE: Votes
                           - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                        default: SIGNED_MSG_TYPE_UNKNOWN
                        enum:
                        - SIGNED_MSG_TYPE_UNKNOWN
                        - SIGNED_MSG_TYPE_PREVOTE
                        - SIGNED_MSG_TYPE_PRECOMMIT
                        - SIGNED_MSG_TYPE_PROPOSAL
                      height:
                        type: string
                        format: int64
                      round:
                        type: integer
                        format: int32
                      block_id:
                        title: BlockID
                        type: object
                        properties:
                          hash:
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            format: byte
                          part_set_header:
                            title: PartsetHeader
                            type: object
                            properties:
                              total:
                                type: integer
                                format: int64
                              hash:
                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                type: string
                                format: byte
                      timestamp:
                        type: string
                        format: date-time
                      validator_address:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        format: byte
                      validator_index:
                        type: integer
                        format: int32
                      signature:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        format: byte
                    description: |-
                      Vote represents a prevote, precommit, or commit vote from validators for
                      consensus.
                  vote_b:
                    type: object
                    properties:
                      type:
                        type: string
                        description: |-
                          SignedMsgType is a type of signed message in the consensus.

                           - SIGNED_MSG_TYPE_PREVOTE: Votes
                           - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                        default: SIGNED_MSG_TYPE_UNKNOWN
                        enum:
                        - SIGNED_MSG_TYPE_UNKNOWN
                        - SIGNED_MSG_TYPE_PREVOTE
                        - SIGNED_MSG_TYPE_PRECOMMIT
                        - SIGNED_MSG_TYPE_PROPOSAL
                      height:
                        type: string
                        format: int64
                      round:
                        type: integer
                        format: int32
                      block_id:
                        title: BlockID
                        type: object
                        properties:
                          hash:
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            format: byte
                          part_set_header:
                            title: PartsetHeader
                            type: object
                            properties:
                              total:
                                type: integer
                                format: int64
                              hash:
                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                type: string
                                format: byte
                      timestamp:
                        type: string
                        format: date-time
                      validator_address:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        format: byte
                      validator_index:
                        type: integer
                        format: int32
                      signature:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        format: byte
                    description: |-
                      Vote represents a prevote, precommit, or commit vote from validators for
                      consensus.
                  total_voting_power:
                    type: string
                    format: int64
                  validator_power:
                    type: string
                    format: int64
                  timestamp:
                    type: string
                    format: date-time
                description: DuplicateVoteEvidence contains evidence of a validator
                  signed two conflicting votes.
              light_client_attack_evidence:
                type: object
                properties:
                  conflicting_block:
                    type: object
                    properties:
                      signed_header:
                        type: object
                        properties:
                          header:
                            type: object
                            properties:
                              version:
                                title: basic block info
                                type: object
                                properties:
                                  block:
                                    type: string
                                    format: uint64
                                  app:
                                    type: string
                                    format: uint64
                                description: |-
                                  Consensus captures the consensus rules for processing a block in the blockchain,
                                  including all blockchain data structures and the rules of the application's
                                  state transition machine.
                              chain_id:
                                type: string
                              height:
                                type: string
                                format: int64
                              time:
                                type: string
                                format: date-time
                              last_block_id:
                                title: BlockID
                                type: object
                                properties:
                                  hash:
                                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                    type: string
                                    format: byte
                                  part_set_header:
                                    title: PartsetHeader
                                    type: object
                                    properties:
                                      total:
                                        type: integer
                                        format: int64
                                      hash:
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                              last_commit_hash:
                                title: hashes of block data
                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                type: string
                                format: byte
                              data_hash:
                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                type: string
                                format: byte
                              validators_hash:
                                title: hashes from the app output from the prev block
                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                type: string
                                format: byte
                              next_validators_hash:
                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                type: string
                                format: byte
                              consensus_hash:
                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                type: string
                                format: byte
                              app_hash:
                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                type: string
                                format: byte
                              last_results_hash:
                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                type: string
                                format: byte
                              evidence_hash:
                                title: consensus info
                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                type: string
                                format: byte
                              proposer_address:
                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                type: string
                                format: byte
                            description: Header defines the structure of a block header.
                          commit:
                            type: object
                            properties:
                              height:
                                type: string
                                format: int64
                              round:
                                type: integer
                                format: int32
                              block_id:
                                title: BlockID
                                type: object
                                properties:
                                  hash:
                                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                    type: string
                                    format: byte
                                  part_set_header:
                                    title: PartsetHeader
                                    type: object
                                    properties:
                                      total:
                                        type: integer
                                        format: int64
                                      hash:
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                              signatures:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    block_id_flag:
                                      title: BlockIdFlag indicates which BlcokID the
                                        signature is for
                                      type: string
                                      default: BLOCK_ID_FLAG_UNKNOWN
                                      enum:
                                      - BLOCK_ID_FLAG_UNKNOWN
                                      - BLOCK_ID_FLAG_ABSENT
                                      - BLOCK_ID_FLAG_COMMIT
                                      - BLOCK_ID_FLAG_NIL
                                    validator_address:
                                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                      type: string
                                      format: byte
                                    timestamp:
                                      type: string
                                      format: date-time
                                    signature:
                                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                      type: string
                                      format: byte
                                  description: CommitSig is a part of the Vote included
                                    in a Commit.
                            description: Commit contains the evidence that a block
                              was committed by a set of validators.
                      validator_set:
                        type: object
                        properties:
                          validators:
                            type: array
                            items:
                              type: object
                              properties:
                                address:
                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                  type: string
                                  format: byte
                                pub_key:
                                  title: PublicKey defines the keys available for
                                    use with Validators
                                  type: object
                                  properties:
                                    ed25519:
                                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                      type: string
                                      format: byte
                                    secp256k1:
                                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                      type: string
                                      format: byte
                                voting_power:
                                  type: string
                                  format: int64
                                proposer_priority:
                                  type: string
                                  format: int64
                          proposer:
                            type: object
                            properties:
                              address:
                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                type: string
                                format: byte
                              pub_key:
                                title: PublicKey defines the keys available for use
                                  with Validators
                                type: object
                                properties:
                                  ed25519:
                                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                    type: string
                                    format: byte
                                  secp256k1:
                                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                    type: string
                                    format: byte
                              voting_power:
                                type: string
                                format: int64
                              proposer_priority:
                                type: string
                                format: int64
                          total_voting_power:
                            type: string
                            format: int64
                  common_height:
                    type: string
                    format: int64
                  byzantine_validators:
                    type: array
                    items:
                      type: object
                      properties:
                        address:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
                        pub_key:
                          title: PublicKey defines the keys available for use with
                            Validators
                          type: object
                          properties:
                            ed25519:
                              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                              type: string
                              format: byte
                            secp256k1:
                              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                              type: string
                              format: byte
                        voting_power:
                          type: string
                          format: int64
                        proposer_priority:
                          type: string
                          format: int64
                  total_voting_power:
                    type: string
                    format: int64
                  timestamp:
                    type: string
                    format: date-time
                description: LightClientAttackEvidence contains evidence of a set
                  of validators attempting to mislead a light client.
    tendermint.types.Header:
      type: object
      properties:
        version:
          title: basic block info
          type: object
          properties:
            block:
              type: string
              format: uint64
            app:
              type: string
              format: uint64
          description: |-
            Consensus captures the consensus rules for processing a block in the blockchain,
            including all blockchain data structures and the rules of the application's
            state transition machine.
        chain_id:
          type: string
        height:
          type: string
          format: int64
        time:
          type: string
          format: date-time
        last_block_id:
          title: BlockID
          type: object
          properties:
            hash:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
            part_set_header:
              title: PartsetHeader
              type: object
              properties:
                total:
                  type: integer
                  format: int64
                hash:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
        last_commit_hash:
          title: hashes of block data
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        data_hash:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        validators_hash:
          title: hashes from the app output from the prev block
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        next_validators_hash:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        consensus_hash:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        app_hash:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        last_results_hash:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        evidence_hash:
          title: consensus info
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        proposer_address:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
      description: Header defines the structure of a block header.
    tendermint.types.LightBlock:
      type: object
      properties:
        signed_header:
          type: object
          properties:
            header:
              type: object
              properties:
                version:
                  title: basic block info
                  type: object
                  properties:
                    block:
                      type: string
                      format: uint64
                    app:
                      type: string
                      format: uint64
                  description: |-
                    Consensus captures the consensus rules for processing a block in the blockchain,
                    including all blockchain data structures and the rules of the application's
                    state transition machine.
                chain_id:
                  type: string
                height:
                  type: string
                  format: int64
                time:
                  type: string
                  format: date-time
                last_block_id:
                  title: BlockID
                  type: object
                  properties:
                    hash:
                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                      type: string
                      format: byte
                    part_set_header:
                      title: PartsetHeader
                      type: object
                      properties:
                        total:
                          type: integer
                          format: int64
                        hash:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
                last_commit_hash:
                  title: hashes of block data
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                data_hash:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                validators_hash:
                  title: hashes from the app output from the prev block
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                next_validators_hash:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                consensus_hash:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                app_hash:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                last_results_hash:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                evidence_hash:
                  title: consensus info
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                proposer_address:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
              description: Header defines the structure of a block header.
            commit:
              type: object
              properties:
                height:
                  type: string
                  format: int64
                round:
                  type: integer
                  format: int32
                block_id:
                  title: BlockID
                  type: object
                  properties:
                    hash:
                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                      type: string
                      format: byte
                    part_set_header:
                      title: PartsetHeader
                      type: object
                      properties:
                        total:
                          type: integer
                          format: int64
                        hash:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
                signatures:
                  type: array
                  items:
                    type: object
                    properties:
                      block_id_flag:
                        title: BlockIdFlag indicates which BlcokID the signature is
                          for
                        type: string
                        default: BLOCK_ID_FLAG_UNKNOWN
                        enum:
                        - BLOCK_ID_FLAG_UNKNOWN
                        - BLOCK_ID_FLAG_ABSENT
                        - BLOCK_ID_FLAG_COMMIT
                        - BLOCK_ID_FLAG_NIL
                      validator_address:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        format: byte
                      timestamp:
                        type: string
                        format: date-time
                      signature:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        format: byte
                    description: CommitSig is a part of the Vote included in a Commit.
              description: Commit contains the evidence that a block was committed
                by a set of validators.
        validator_set:
          type: object
          properties:
            validators:
              type: array
              items:
                type: object
                properties:
                  address:
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    format: byte
                  pub_key:
                    title: PublicKey defines the keys available for use with Validators
                    type: object
                    properties:
                      ed25519:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        format: byte
                      secp256k1:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        format: byte
                  voting_power:
                    type: string
                    format: int64
                  proposer_priority:
                    type: string
                    format: int64
            proposer:
              type: object
              properties:
                address:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                pub_key:
                  title: PublicKey defines the keys available for use with Validators
                  type: object
                  properties:
                    ed25519:
                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                      type: string
                      format: byte
                    secp256k1:
                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                      type: string
                      format: byte
                voting_power:
                  type: string
                  format: int64
                proposer_priority:
                  type: string
                  format: int64
            total_voting_power:
              type: string
              format: int64
    tendermint.types.LightClientAttackEvidence:
      type: object
      properties:
        conflicting_block:
          type: object
          properties:
            signed_header:
              type: object
              properties:
                header:
                  type: object
                  properties:
                    version:
                      title: basic block info
                      type: object
                      properties:
                        block:
                          type: string
                          format: uint64
                        app:
                          type: string
                          format: uint64
                      description: |-
                        Consensus captures the consensus rules for processing a block in the blockchain,
                        including all blockchain data structures and the rules of the application's
                        state transition machine.
                    chain_id:
                      type: string
                    height:
                      type: string
                      format: int64
                    time:
                      type: string
                      format: date-time
                    last_block_id:
                      title: BlockID
                      type: object
                      properties:
                        hash:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
                        part_set_header:
                          title: PartsetHeader
                          type: object
                          properties:
                            total:
                              type: integer
                              format: int64
                            hash:
                              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                              type: string
                              format: byte
                    last_commit_hash:
                      title: hashes of block data
                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                      type: string
                      format: byte
                    data_hash:
                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                      type: string
                      format: byte
                    validators_hash:
                      title: hashes from the app output from the prev block
                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                      type: string
                      format: byte
                    next_validators_hash:
                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                      type: string
                      format: byte
                    consensus_hash:
                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                      type: string
                      format: byte
                    app_hash:
                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                      type: string
                      format: byte
                    last_results_hash:
                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                      type: string
                      format: byte
                    evidence_hash:
                      title: consensus info
                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                      type: string
                      format: byte
                    proposer_address:
                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                      type: string
                      format: byte
                  description: Header defines the structure of a block header.
                commit:
                  type: object
                  properties:
                    height:
                      type: string
                      format: int64
                    round:
                      type: integer
                      format: int32
                    block_id:
                      title: BlockID
                      type: object
                      properties:
                        hash:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
                        part_set_header:
                          title: PartsetHeader
                          type: object
                          properties:
                            total:
                              type: integer
                              format: int64
                            hash:
                              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                              type: string
                              format: byte
                    signatures:
                      type: array
                      items:
                        type: object
                        properties:
                          block_id_flag:
                            title: BlockIdFlag indicates which BlcokID the signature
                              is for
                            type: string
                            default: BLOCK_ID_FLAG_UNKNOWN
                            enum:
                            - BLOCK_ID_FLAG_UNKNOWN
                            - BLOCK_ID_FLAG_ABSENT
                            - BLOCK_ID_FLAG_COMMIT
                            - BLOCK_ID_FLAG_NIL
                          validator_address:
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            format: byte
                          timestamp:
                            type: string
                            format: date-time
                          signature:
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            format: byte
                        description: CommitSig is a part of the Vote included in a
                          Commit.
                  description: Commit contains the evidence that a block was committed
                    by a set of validators.
            validator_set:
              type: object
              properties:
                validators:
                  type: array
                  items:
                    type: object
                    properties:
                      address:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        format: byte
                      pub_key:
                        title: PublicKey defines the keys available for use with Validators
                        type: object
                        properties:
                          ed25519:
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            format: byte
                          secp256k1:
                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            type: string
                            format: byte
                      voting_power:
                        type: string
                        format: int64
                      proposer_priority:
                        type: string
                        format: int64
                proposer:
                  type: object
                  properties:
                    address:
                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                      type: string
                      format: byte
                    pub_key:
                      title: PublicKey defines the keys available for use with Validators
                      type: object
                      properties:
                        ed25519:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
                        secp256k1:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
                    voting_power:
                      type: string
                      format: int64
                    proposer_priority:
                      type: string
                      format: int64
                total_voting_power:
                  type: string
                  format: int64
        common_height:
          type: string
          format: int64
        byzantine_validators:
          type: array
          items:
            type: object
            properties:
              address:
                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                type: string
                format: byte
              pub_key:
                title: PublicKey defines the keys available for use with Validators
                type: object
                properties:
                  ed25519:
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    format: byte
                  secp256k1:
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    format: byte
              voting_power:
                type: string
                format: int64
              proposer_priority:
                type: string
                format: int64
        total_voting_power:
          type: string
          format: int64
        timestamp:
          type: string
          format: date-time
      description: LightClientAttackEvidence contains evidence of a set of validators
        attempting to mislead a light client.
    tendermint.types.PartSetHeader:
      title: PartsetHeader
      type: object
      properties:
        total:
          type: integer
          format: int64
        hash:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
    tendermint.types.SignedHeader:
      type: object
      properties:
        header:
          type: object
          properties:
            version:
              title: basic block info
              type: object
              properties:
                block:
                  type: string
                  format: uint64
                app:
                  type: string
                  format: uint64
              description: |-
                Consensus captures the consensus rules for processing a block in the blockchain,
                including all blockchain data structures and the rules of the application's
                state transition machine.
            chain_id:
              type: string
            height:
              type: string
              format: int64
            time:
              type: string
              format: date-time
            last_block_id:
              title: BlockID
              type: object
              properties:
                hash:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                part_set_header:
                  title: PartsetHeader
                  type: object
                  properties:
                    total:
                      type: integer
                      format: int64
                    hash:
                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                      type: string
                      format: byte
            last_commit_hash:
              title: hashes of block data
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
            data_hash:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
            validators_hash:
              title: hashes from the app output from the prev block
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
            next_validators_hash:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
            consensus_hash:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
            app_hash:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
            last_results_hash:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
            evidence_hash:
              title: consensus info
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
            proposer_address:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
          description: Header defines the structure of a block header.
        commit:
          type: object
          properties:
            height:
              type: string
              format: int64
            round:
              type: integer
              format: int32
            block_id:
              title: BlockID
              type: object
              properties:
                hash:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                part_set_header:
                  title: PartsetHeader
                  type: object
                  properties:
                    total:
                      type: integer
                      format: int64
                    hash:
                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                      type: string
                      format: byte
            signatures:
              type: array
              items:
                type: object
                properties:
                  block_id_flag:
                    title: BlockIdFlag indicates which BlcokID the signature is for
                    type: string
                    default: BLOCK_ID_FLAG_UNKNOWN
                    enum:
                    - BLOCK_ID_FLAG_UNKNOWN
                    - BLOCK_ID_FLAG_ABSENT
                    - BLOCK_ID_FLAG_COMMIT
                    - BLOCK_ID_FLAG_NIL
                  validator_address:
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    format: byte
                  timestamp:
                    type: string
                    format: date-time
                  signature:
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    format: byte
                description: CommitSig is a part of the Vote included in a Commit.
          description: Commit contains the evidence that a block was committed by
            a set of validators.
    tendermint.types.SignedMsgType:
      type: string
      description: |-
        SignedMsgType is a type of signed message in the consensus.

         - SIGNED_MSG_TYPE_PREVOTE: Votes
         - SIGNED_MSG_TYPE_PROPOSAL: Proposals
      default: SIGNED_MSG_TYPE_UNKNOWN
      enum:
      - SIGNED_MSG_TYPE_UNKNOWN
      - SIGNED_MSG_TYPE_PREVOTE
      - SIGNED_MSG_TYPE_PRECOMMIT
      - SIGNED_MSG_TYPE_PROPOSAL
    tendermint.types.Validator:
      type: object
      properties:
        address:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        pub_key:
          title: PublicKey defines the keys available for use with Validators
          type: object
          properties:
            ed25519:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
            secp256k1:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
        voting_power:
          type: string
          format: int64
        proposer_priority:
          type: string
          format: int64
    tendermint.types.ValidatorSet:
      type: object
      properties:
        validators:
          type: array
          items:
            type: object
            properties:
              address:
                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                type: string
                format: byte
              pub_key:
                title: PublicKey defines the keys available for use with Validators
                type: object
                properties:
                  ed25519:
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    format: byte
                  secp256k1:
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    format: byte
              voting_power:
                type: string
                format: int64
              proposer_priority:
                type: string
                format: int64
        proposer:
          type: object
          properties:
            address:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
            pub_key:
              title: PublicKey defines the keys available for use with Validators
              type: object
              properties:
                ed25519:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                secp256k1:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
            voting_power:
              type: string
              format: int64
            proposer_priority:
              type: string
              format: int64
        total_voting_power:
          type: string
          format: int64
    tendermint.types.Vote:
      type: object
      properties:
        type:
          type: string
          description: |-
            SignedMsgType is a type of signed message in the consensus.

             - SIGNED_MSG_TYPE_PREVOTE: Votes
             - SIGNED_MSG_TYPE_PROPOSAL: Proposals
          default: SIGNED_MSG_TYPE_UNKNOWN
          enum:
          - SIGNED_MSG_TYPE_UNKNOWN
          - SIGNED_MSG_TYPE_PREVOTE
          - SIGNED_MSG_TYPE_PRECOMMIT
          - SIGNED_MSG_TYPE_PROPOSAL
        height:
          type: string
          format: int64
        round:
          type: integer
          format: int32
        block_id:
          title: BlockID
          type: object
          properties:
            hash:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
            part_set_header:
              title: PartsetHeader
              type: object
              properties:
                total:
                  type: integer
                  format: int64
                hash:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
        timestamp:
          type: string
          format: date-time
        validator_address:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        validator_index:
          type: integer
          format: int32
        signature:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
      description: |-
        Vote represents a prevote, precommit, or commit vote from validators for
        consensus.
    tendermint.version.Consensus:
      type: object
      properties:
        block:
          type: string
          format: uint64
        app:
          type: string
          format: uint64
      description: |-
        Consensus captures the consensus rules for processing a block in the blockchain,
        including all blockchain data structures and the rules of the application's
        state transition machine.
    cosmos.distribution.v1beta1.DelegationDelegatorReward:
      type: object
      properties:
        validator_address:
          type: string
        reward:
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              DecCoin defines a token with a denomination and a decimal amount.

              NOTE: The amount field is an Dec which implements the custom method
              signatures required by gogoproto.
      description: |-
        DelegationDelegatorReward represents the properties
        of a delegator's delegation reward.
    cosmos.distribution.v1beta1.Params:
      type: object
      properties:
        community_tax:
          type: string
        base_proposer_reward:
          type: string
          description: |-
            Deprecated: The base_proposer_reward field is deprecated and is no longer used
            in the x/distribution module's reward mechanism.
        bonus_proposer_reward:
          type: string
          description: |-
            Deprecated: The bonus_proposer_reward field is deprecated and is no longer used
            in the x/distribution module's reward mechanism.
        withdraw_addr_enabled:
          type: boolean
      description: Params defines the set of params for the distribution module.
    cosmos.distribution.v1beta1.QueryCommunityPoolResponse:
      type: object
      properties:
        pool:
          type: array
          description: pool defines community pool's coins.
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              DecCoin defines a token with a denomination and a decimal amount.

              NOTE: The amount field is an Dec which implements the custom method
              signatures required by gogoproto.
      description: |-
        QueryCommunityPoolResponse is the response type for the Query/CommunityPool
        RPC method.
    cosmos.distribution.v1beta1.QueryDelegationRewardsResponse:
      type: object
      properties:
        rewards:
          type: array
          description: rewards defines the rewards accrued by a delegation.
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              DecCoin defines a token with a denomination and a decimal amount.

              NOTE: The amount field is an Dec which implements the custom method
              signatures required by gogoproto.
      description: |-
        QueryDelegationRewardsResponse is the response type for the
        Query/DelegationRewards RPC method.
    cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse:
      type: object
      properties:
        rewards:
          type: array
          description: rewards defines all the rewards accrued by a delegator.
          items:
            type: object
            properties:
              validator_address:
                type: string
              reward:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: |-
                    DecCoin defines a token with a denomination and a decimal amount.

                    NOTE: The amount field is an Dec which implements the custom method
                    signatures required by gogoproto.
            description: |-
              DelegationDelegatorReward represents the properties
              of a delegator's delegation reward.
        total:
          type: array
          description: total defines the sum of all the rewards.
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              DecCoin defines a token with a denomination and a decimal amount.

              NOTE: The amount field is an Dec which implements the custom method
              signatures required by gogoproto.
      description: |-
        QueryDelegationTotalRewardsResponse is the response type for the
        Query/DelegationTotalRewards RPC method.
    cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse:
      type: object
      properties:
        validators:
          type: array
          description: validators defines the validators a delegator is delegating
            for.
          items:
            type: string
      description: |-
        QueryDelegatorValidatorsResponse is the response type for the
        Query/DelegatorValidators RPC method.
    cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse:
      type: object
      properties:
        withdraw_address:
          type: string
          description: withdraw_address defines the delegator address to query for.
      description: |-
        QueryDelegatorWithdrawAddressResponse is the response type for the
        Query/DelegatorWithdrawAddress RPC method.
    cosmos.distribution.v1beta1.QueryParamsResponse:
      type: object
      properties:
        params:
          type: object
          properties:
            community_tax:
              type: string
            base_proposer_reward:
              type: string
              description: |-
                Deprecated: The base_proposer_reward field is deprecated and is no longer used
                in the x/distribution module's reward mechanism.
            bonus_proposer_reward:
              type: string
              description: |-
                Deprecated: The bonus_proposer_reward field is deprecated and is no longer used
                in the x/distribution module's reward mechanism.
            withdraw_addr_enabled:
              type: boolean
          description: params defines the parameters of the module.
      description: QueryParamsResponse is the response type for the Query/Params RPC
        method.
    cosmos.distribution.v1beta1.QueryValidatorCommissionResponse:
      title: |-
        QueryValidatorCommissionResponse is the response type for the
        Query/ValidatorCommission RPC method
      type: object
      properties:
        commission:
          type: object
          properties:
            commission:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: |-
                  DecCoin defines a token with a denomination and a decimal amount.

                  NOTE: The amount field is an Dec which implements the custom method
                  signatures required by gogoproto.
          description: commission defines the commission the validator received.
    cosmos.distribution.v1beta1.QueryValidatorDistributionInfoResponse:
      type: object
      properties:
        operator_address:
          type: string
          description: operator_address defines the validator operator address.
        self_bond_rewards:
          type: array
          description: self_bond_rewards defines the self delegations rewards.
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              DecCoin defines a token with a denomination and a decimal amount.

              NOTE: The amount field is an Dec which implements the custom method
              signatures required by gogoproto.
        commission:
          type: array
          description: commission defines the commission the validator received.
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              DecCoin defines a token with a denomination and a decimal amount.

              NOTE: The amount field is an Dec which implements the custom method
              signatures required by gogoproto.
      description: QueryValidatorDistributionInfoResponse is the response type for
        the Query/ValidatorDistributionInfo RPC method.
    cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse:
      type: object
      properties:
        rewards:
          type: object
          properties:
            rewards:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: |-
                  DecCoin defines a token with a denomination and a decimal amount.

                  NOTE: The amount field is an Dec which implements the custom method
                  signatures required by gogoproto.
          description: |-
            ValidatorOutstandingRewards represents outstanding (un-withdrawn) rewards
            for a validator inexpensive to track, allows simple sanity checks.
      description: |-
        QueryValidatorOutstandingRewardsResponse is the response type for the
        Query/ValidatorOutstandingRewards RPC method.
    cosmos.distribution.v1beta1.QueryValidatorSlashesResponse:
      type: object
      properties:
        slashes:
          type: array
          description: slashes defines the slashes the validator received.
          items:
            type: object
            properties:
              validator_period:
                type: string
                format: uint64
              fraction:
                type: string
            description: |-
              ValidatorSlashEvent represents a validator slash event.
              Height is implicit within the store key.
              This is needed to calculate appropriate amount of staking tokens
              for delegations which are withdrawn after a slash has occurred.
        pagination:
          type: object
          properties:
            next_key:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
      description: |-
        QueryValidatorSlashesResponse is the response type for the
        Query/ValidatorSlashes RPC method.
    cosmos.distribution.v1beta1.ValidatorAccumulatedCommission:
      type: object
      properties:
        commission:
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              DecCoin defines a token with a denomination and a decimal amount.

              NOTE: The amount field is an Dec which implements the custom method
              signatures required by gogoproto.
      description: |-
        ValidatorAccumulatedCommission represents accumulated commission
        for a validator kept as a running counter, can be withdrawn at any time.
    cosmos.distribution.v1beta1.ValidatorOutstandingRewards:
      type: object
      properties:
        rewards:
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              DecCoin defines a token with a denomination and a decimal amount.

              NOTE: The amount field is an Dec which implements the custom method
              signatures required by gogoproto.
      description: |-
        ValidatorOutstandingRewards represents outstanding (un-withdrawn) rewards
        for a validator inexpensive to track, allows simple sanity checks.
    cosmos.distribution.v1beta1.ValidatorSlashEvent:
      type: object
      properties:
        validator_period:
          type: string
          format: uint64
        fraction:
          type: string
      description: |-
        ValidatorSlashEvent represents a validator slash event.
        Height is implicit within the store key.
        This is needed to calculate appropriate amount of staking tokens
        for delegations which are withdrawn after a slash has occurred.
    cosmos.evidence.v1beta1.QueryAllEvidenceResponse:
      type: object
      properties:
        evidence:
          type: array
          description: evidence returns all evidences.
          items:
            type: object
            properties:
              type_url:
                type: string
                description: |-
                  A URL/resource name that uniquely identifies the type of the serialized
                  protocol buffer message. This string must contain at least
                  one "/" character. The last segment of the URL's path must represent
                  the fully qualified name of the type (as in
                  `path/google.protobuf.Duration`). The name should be in a canonical form
                  (e.g., leading "." is not accepted).

                  In practice, teams usually precompile into the binary all types that they
                  expect it to use in the context of Any. However, for URLs which use the
                  scheme `http`, `https`, or no scheme, one can optionally set up a type
                  server that maps type URLs to message definitions as follows:

                  * If no scheme is provided, `https` is assumed.
                  * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                    value in binary format, or produce an error.
                  * Applications are allowed to cache lookup results based on the
                    URL, or have them precompiled into a binary to avoid any
                    lookup. Therefore, binary compatibility needs to be preserved
                    on changes to types. (Use versioned type names to manage
                    breaking changes.)

                  Note: this functionality is not currently available in the official
                  protobuf release, and it is not used for type URLs beginning with
                  type.googleapis.com.

                  Schemes other than `http`, `https` (or the empty scheme) might be
                  used with implementation specific semantics.
              value:
                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                type: string
                description: Must be a valid serialized protocol buffer of the above
                  specified type.
                format: byte
            description: |-
              `Any` contains an arbitrary serialized protocol buffer message along with a
              URL that describes the type of the serialized message.

              Protobuf library provides support to pack/unpack Any values in the form
              of utility functions or additional generated methods of the Any type.

              Example 1: Pack and unpack a message in C++.

                  Foo foo = ...;
                  Any any;
                  any.PackFrom(foo);
                  ...
                  if (any.UnpackTo(&foo)) {
                    ...
                  }

              Example 2: Pack and unpack a message in Java.

                  Foo foo = ...;
                  Any any = Any.pack(foo);
                  ...
                  if (any.is(Foo.class)) {
                    foo = any.unpack(Foo.class);
                  }

               Example 3: Pack and unpack a message in Python.

                  foo = Foo(...)
                  any = Any()
                  any.Pack(foo)
                  ...
                  if any.Is(Foo.DESCRIPTOR):
                    any.Unpack(foo)
                    ...

               Example 4: Pack and unpack a message in Go

                   foo := &pb.Foo{...}
                   any, err := ptypes.MarshalAny(foo)
                   ...
                   foo := &pb.Foo{}
                   if err := ptypes.UnmarshalAny(any, foo); err != nil {
                     ...
                   }

              The pack methods provided by protobuf library will by default use
              'type.googleapis.com/full.type.name' as the type URL and the unpack
              methods only use the fully qualified type name after the last '/'
              in the type URL, for example "foo.bar.com/x/y.z" will yield type
              name "y.z".


              JSON
              ====
              The JSON representation of an `Any` value uses the regular
              representation of the deserialized, embedded message, with an
              additional field `@type` which contains the type URL. Example:

                  package google.profile;
                  message Person {
                    string first_name = 1;
                    string last_name = 2;
                  }

                  {
                    "@type": "type.googleapis.com/google.profile.Person",
                    "firstName": <string>,
                    "lastName": <string>
                  }

              If the embedded message type is well-known and has a custom JSON
              representation, that representation will be embedded adding a field
              `value` which holds the custom JSON in addition to the `@type`
              field. Example (for message [google.protobuf.Duration][]):

                  {
                    "@type": "type.googleapis.com/google.protobuf.Duration",
                    "value": "1.212s"
                  }
        pagination:
          type: object
          properties:
            next_key:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
      description: |-
        QueryAllEvidenceResponse is the response type for the Query/AllEvidence RPC
        method.
    cosmos.evidence.v1beta1.QueryEvidenceResponse:
      type: object
      properties:
        evidence:
          type: object
          properties:
            type_url:
              type: string
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
            value:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

             Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

             Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := ptypes.MarshalAny(foo)
                 ...
                 foo := &pb.Foo{}
                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".


            JSON
            ====
            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
      description: QueryEvidenceResponse is the response type for the Query/Evidence
        RPC method.
    cosmos.base.node.v1beta1.ConfigResponse:
      type: object
      properties:
        minimum_gas_price:
          type: string
      description: ConfigResponse defines the response structure for the Config gRPC
        query.
    cosmos.feegrant.v1beta1.Grant:
      title: Grant is stored in the KVStore to record a grant with full context
      type: object
      properties:
        granter:
          type: string
          description: granter is the address of the user granting an allowance of
            their funds.
        grantee:
          type: string
          description: grantee is the address of the user being granted an allowance
            of another user's funds.
        allowance:
          type: object
          properties:
            type_url:
              type: string
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
            value:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
          description: "allowance can be any of basic, periodic, allowed fee allowance."
    cosmos.feegrant.v1beta1.QueryAllowanceResponse:
      type: object
      properties:
        allowance:
          title: Grant is stored in the KVStore to record a grant with full context
          type: object
          properties:
            granter:
              type: string
              description: granter is the address of the user granting an allowance
                of their funds.
            grantee:
              type: string
              description: grantee is the address of the user being granted an allowance
                of another user's funds.
            allowance:
              type: object
              properties:
                type_url:
                  type: string
                  description: |-
                    A URL/resource name that uniquely identifies the type of the serialized
                    protocol buffer message. This string must contain at least
                    one "/" character. The last segment of the URL's path must represent
                    the fully qualified name of the type (as in
                    `path/google.protobuf.Duration`). The name should be in a canonical form
                    (e.g., leading "." is not accepted).

                    In practice, teams usually precompile into the binary all types that they
                    expect it to use in the context of Any. However, for URLs which use the
                    scheme `http`, `https`, or no scheme, one can optionally set up a type
                    server that maps type URLs to message definitions as follows:

                    * If no scheme is provided, `https` is assumed.
                    * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the official
                    protobuf release, and it is not used for type URLs beginning with
                    type.googleapis.com.

                    Schemes other than `http`, `https` (or the empty scheme) might be
                    used with implementation specific semantics.
                value:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
              description: "allowance can be any of basic, periodic, allowed fee allowance."
          description: allowance is a allowance granted for grantee by granter.
      description: QueryAllowanceResponse is the response type for the Query/Allowance
        RPC method.
    cosmos.feegrant.v1beta1.QueryAllowancesByGranterResponse:
      type: object
      properties:
        allowances:
          type: array
          description: allowances that have been issued by the granter.
          items:
            title: Grant is stored in the KVStore to record a grant with full context
            type: object
            properties:
              granter:
                type: string
                description: granter is the address of the user granting an allowance
                  of their funds.
              grantee:
                type: string
                description: grantee is the address of the user being granted an allowance
                  of another user's funds.
              allowance:
                type: object
                properties:
                  type_url:
                    type: string
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                  value:
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                description: "allowance can be any of basic, periodic, allowed fee\
                  \ allowance."
        pagination:
          type: object
          properties:
            next_key:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines an pagination for the response.
      description: |-
        QueryAllowancesByGranterResponse is the response type for the Query/AllowancesByGranter RPC method.

        Since: cosmos-sdk 0.46
    cosmos.feegrant.v1beta1.QueryAllowancesResponse:
      type: object
      properties:
        allowances:
          type: array
          description: allowances are allowance's granted for grantee by granter.
          items:
            title: Grant is stored in the KVStore to record a grant with full context
            type: object
            properties:
              granter:
                type: string
                description: granter is the address of the user granting an allowance
                  of their funds.
              grantee:
                type: string
                description: grantee is the address of the user being granted an allowance
                  of another user's funds.
              allowance:
                type: object
                properties:
                  type_url:
                    type: string
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                  value:
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                description: "allowance can be any of basic, periodic, allowed fee\
                  \ allowance."
        pagination:
          type: object
          properties:
            next_key:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines an pagination for the response.
      description: QueryAllowancesResponse is the response type for the Query/Allowances
        RPC method.
    cosmos.gov.v1beta1.Deposit:
      type: object
      properties:
        proposal_id:
          type: string
          description: proposal_id defines the unique id of the proposal.
          format: uint64
        depositor:
          type: string
          description: depositor defines the deposit addresses from the proposals.
        amount:
          type: array
          description: amount to be deposited by depositor.
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
      description: |-
        Deposit defines an amount deposited by an account address to an active
        proposal.
    cosmos.gov.v1beta1.DepositParams:
      type: object
      properties:
        min_deposit:
          type: array
          description: Minimum deposit for a proposal to enter voting period.
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
        max_deposit_period:
          type: string
          description: |-
            Maximum period for Atom holders to deposit on a proposal. Initial value: 2
            months.
      description: DepositParams defines the params for deposits on governance proposals.
    cosmos.gov.v1beta1.Proposal:
      type: object
      properties:
        proposal_id:
          type: string
          description: proposal_id defines the unique id of the proposal.
          format: uint64
        content:
          type: object
          properties:
            type_url:
              type: string
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
            value:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

             Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

             Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := ptypes.MarshalAny(foo)
                 ...
                 foo := &pb.Foo{}
                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".


            JSON
            ====
            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
        status:
          type: string
          description: status defines the proposal status.
          default: PROPOSAL_STATUS_UNSPECIFIED
          enum:
          - PROPOSAL_STATUS_UNSPECIFIED
          - PROPOSAL_STATUS_DEPOSIT_PERIOD
          - PROPOSAL_STATUS_VOTING_PERIOD
          - PROPOSAL_STATUS_PASSED
          - PROPOSAL_STATUS_REJECTED
          - PROPOSAL_STATUS_FAILED
        final_tally_result:
          type: object
          properties:
            "yes":
              type: string
              description: yes is the number of yes votes on a proposal.
            abstain:
              type: string
              description: abstain is the number of abstain votes on a proposal.
            "no":
              type: string
              description: no is the number of no votes on a proposal.
            no_with_veto:
              type: string
              description: no_with_veto is the number of no with veto votes on a proposal.
          description: |-
            final_tally_result is the final tally result of the proposal. When
            querying a proposal via gRPC, this field is not populated until the
            proposal's voting period has ended.
        submit_time:
          type: string
          description: submit_time is the time of proposal submission.
          format: date-time
        deposit_end_time:
          type: string
          description: deposit_end_time is the end time for deposition.
          format: date-time
        total_deposit:
          type: array
          description: total_deposit is the total deposit on the proposal.
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
        voting_start_time:
          type: string
          description: voting_start_time is the starting time to vote on a proposal.
          format: date-time
        voting_end_time:
          type: string
          description: voting_end_time is the end time of voting on a proposal.
          format: date-time
      description: Proposal defines the core field members of a governance proposal.
    cosmos.gov.v1beta1.ProposalStatus:
      type: string
      description: |-
        ProposalStatus enumerates the valid statuses of a proposal.

         - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default proposal status.
         - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit
        period.
         - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
        period.
         - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
        passed.
         - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has
        been rejected.
         - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has
        failed.
      default: PROPOSAL_STATUS_UNSPECIFIED
      enum:
      - PROPOSAL_STATUS_UNSPECIFIED
      - PROPOSAL_STATUS_DEPOSIT_PERIOD
      - PROPOSAL_STATUS_VOTING_PERIOD
      - PROPOSAL_STATUS_PASSED
      - PROPOSAL_STATUS_REJECTED
      - PROPOSAL_STATUS_FAILED
    cosmos.gov.v1beta1.QueryDepositResponse:
      type: object
      properties:
        deposit:
          type: object
          properties:
            proposal_id:
              type: string
              description: proposal_id defines the unique id of the proposal.
              format: uint64
            depositor:
              type: string
              description: depositor defines the deposit addresses from the proposals.
            amount:
              type: array
              description: amount to be deposited by depositor.
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
          description: |-
            Deposit defines an amount deposited by an account address to an active
            proposal.
      description: QueryDepositResponse is the response type for the Query/Deposit
        RPC method.
    cosmos.gov.v1beta1.QueryDepositsResponse:
      type: object
      properties:
        deposits:
          type: array
          description: deposits defines the requested deposits.
          items:
            type: object
            properties:
              proposal_id:
                type: string
                description: proposal_id defines the unique id of the proposal.
                format: uint64
              depositor:
                type: string
                description: depositor defines the deposit addresses from the proposals.
              amount:
                type: array
                description: amount to be deposited by depositor.
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: |-
                    Coin defines a token with a denomination and an amount.

                    NOTE: The amount field is an Int which implements the custom method
                    signatures required by gogoproto.
            description: |-
              Deposit defines an amount deposited by an account address to an active
              proposal.
        pagination:
          type: object
          properties:
            next_key:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
      description: QueryDepositsResponse is the response type for the Query/Deposits
        RPC method.
    cosmos.gov.v1beta1.QueryParamsResponse:
      type: object
      properties:
        voting_params:
          type: object
          properties:
            voting_period:
              type: string
              description: Duration of the voting period.
          description: voting_params defines the parameters related to voting.
        deposit_params:
          type: object
          properties:
            min_deposit:
              type: array
              description: Minimum deposit for a proposal to enter voting period.
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
            max_deposit_period:
              type: string
              description: |-
                Maximum period for Atom holders to deposit on a proposal. Initial value: 2
                months.
          description: deposit_params defines the parameters related to deposit.
        tally_params:
          type: object
          properties:
            quorum:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                Minimum percentage of total stake needed to vote for a result to be
                considered valid.
              format: byte
            threshold:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: "Minimum proportion of Yes votes for proposal to pass.\
                \ Default value: 0.5."
              format: byte
            veto_threshold:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                Minimum value of Veto votes to Total votes ratio for proposal to be
                vetoed. Default value: 1/3.
              format: byte
          description: tally_params defines the parameters related to tally.
      description: QueryParamsResponse is the response type for the Query/Params RPC
        method.
    cosmos.gov.v1beta1.QueryProposalResponse:
      type: object
      properties:
        proposal:
          type: object
          properties:
            proposal_id:
              type: string
              description: proposal_id defines the unique id of the proposal.
              format: uint64
            content:
              type: object
              properties:
                type_url:
                  type: string
                  description: |-
                    A URL/resource name that uniquely identifies the type of the serialized
                    protocol buffer message. This string must contain at least
                    one "/" character. The last segment of the URL's path must represent
                    the fully qualified name of the type (as in
                    `path/google.protobuf.Duration`). The name should be in a canonical form
                    (e.g., leading "." is not accepted).

                    In practice, teams usually precompile into the binary all types that they
                    expect it to use in the context of Any. However, for URLs which use the
                    scheme `http`, `https`, or no scheme, one can optionally set up a type
                    server that maps type URLs to message definitions as follows:

                    * If no scheme is provided, `https` is assumed.
                    * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the official
                    protobuf release, and it is not used for type URLs beginning with
                    type.googleapis.com.

                    Schemes other than `http`, `https` (or the empty scheme) might be
                    used with implementation specific semantics.
                value:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
              description: |-
                `Any` contains an arbitrary serialized protocol buffer message along with a
                URL that describes the type of the serialized message.

                Protobuf library provides support to pack/unpack Any values in the form
                of utility functions or additional generated methods of the Any type.

                Example 1: Pack and unpack a message in C++.

                    Foo foo = ...;
                    Any any;
                    any.PackFrom(foo);
                    ...
                    if (any.UnpackTo(&foo)) {
                      ...
                    }

                Example 2: Pack and unpack a message in Java.

                    Foo foo = ...;
                    Any any = Any.pack(foo);
                    ...
                    if (any.is(Foo.class)) {
                      foo = any.unpack(Foo.class);
                    }

                 Example 3: Pack and unpack a message in Python.

                    foo = Foo(...)
                    any = Any()
                    any.Pack(foo)
                    ...
                    if any.Is(Foo.DESCRIPTOR):
                      any.Unpack(foo)
                      ...

                 Example 4: Pack and unpack a message in Go

                     foo := &pb.Foo{...}
                     any, err := ptypes.MarshalAny(foo)
                     ...
                     foo := &pb.Foo{}
                     if err := ptypes.UnmarshalAny(any, foo); err != nil {
                       ...
                     }

                The pack methods provided by protobuf library will by default use
                'type.googleapis.com/full.type.name' as the type URL and the unpack
                methods only use the fully qualified type name after the last '/'
                in the type URL, for example "foo.bar.com/x/y.z" will yield type
                name "y.z".


                JSON
                ====
                The JSON representation of an `Any` value uses the regular
                representation of the deserialized, embedded message, with an
                additional field `@type` which contains the type URL. Example:

                    package google.profile;
                    message Person {
                      string first_name = 1;
                      string last_name = 2;
                    }

                    {
                      "@type": "type.googleapis.com/google.profile.Person",
                      "firstName": <string>,
                      "lastName": <string>
                    }

                If the embedded message type is well-known and has a custom JSON
                representation, that representation will be embedded adding a field
                `value` which holds the custom JSON in addition to the `@type`
                field. Example (for message [google.protobuf.Duration][]):

                    {
                      "@type": "type.googleapis.com/google.protobuf.Duration",
                      "value": "1.212s"
                    }
            status:
              type: string
              description: status defines the proposal status.
              default: PROPOSAL_STATUS_UNSPECIFIED
              enum:
              - PROPOSAL_STATUS_UNSPECIFIED
              - PROPOSAL_STATUS_DEPOSIT_PERIOD
              - PROPOSAL_STATUS_VOTING_PERIOD
              - PROPOSAL_STATUS_PASSED
              - PROPOSAL_STATUS_REJECTED
              - PROPOSAL_STATUS_FAILED
            final_tally_result:
              type: object
              properties:
                "yes":
                  type: string
                  description: yes is the number of yes votes on a proposal.
                abstain:
                  type: string
                  description: abstain is the number of abstain votes on a proposal.
                "no":
                  type: string
                  description: no is the number of no votes on a proposal.
                no_with_veto:
                  type: string
                  description: no_with_veto is the number of no with veto votes on
                    a proposal.
              description: |-
                final_tally_result is the final tally result of the proposal. When
                querying a proposal via gRPC, this field is not populated until the
                proposal's voting period has ended.
            submit_time:
              type: string
              description: submit_time is the time of proposal submission.
              format: date-time
            deposit_end_time:
              type: string
              description: deposit_end_time is the end time for deposition.
              format: date-time
            total_deposit:
              type: array
              description: total_deposit is the total deposit on the proposal.
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
            voting_start_time:
              type: string
              description: voting_start_time is the starting time to vote on a proposal.
              format: date-time
            voting_end_time:
              type: string
              description: voting_end_time is the end time of voting on a proposal.
              format: date-time
          description: Proposal defines the core field members of a governance proposal.
      description: QueryProposalResponse is the response type for the Query/Proposal
        RPC method.
    cosmos.gov.v1beta1.QueryProposalsResponse:
      type: object
      properties:
        proposals:
          type: array
          description: proposals defines all the requested governance proposals.
          items:
            type: object
            properties:
              proposal_id:
                type: string
                description: proposal_id defines the unique id of the proposal.
                format: uint64
              content:
                type: object
                properties:
                  type_url:
                    type: string
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                  value:
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                   Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                   Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := ptypes.MarshalAny(foo)
                       ...
                       foo := &pb.Foo{}
                       if err := ptypes.UnmarshalAny(any, foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".


                  JSON
                  ====
                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
              status:
                type: string
                description: status defines the proposal status.
                default: PROPOSAL_STATUS_UNSPECIFIED
                enum:
                - PROPOSAL_STATUS_UNSPECIFIED
                - PROPOSAL_STATUS_DEPOSIT_PERIOD
                - PROPOSAL_STATUS_VOTING_PERIOD
                - PROPOSAL_STATUS_PASSED
                - PROPOSAL_STATUS_REJECTED
                - PROPOSAL_STATUS_FAILED
              final_tally_result:
                type: object
                properties:
                  "yes":
                    type: string
                    description: yes is the number of yes votes on a proposal.
                  abstain:
                    type: string
                    description: abstain is the number of abstain votes on a proposal.
                  "no":
                    type: string
                    description: no is the number of no votes on a proposal.
                  no_with_veto:
                    type: string
                    description: no_with_veto is the number of no with veto votes
                      on a proposal.
                description: |-
                  final_tally_result is the final tally result of the proposal. When
                  querying a proposal via gRPC, this field is not populated until the
                  proposal's voting period has ended.
              submit_time:
                type: string
                description: submit_time is the time of proposal submission.
                format: date-time
              deposit_end_time:
                type: string
                description: deposit_end_time is the end time for deposition.
                format: date-time
              total_deposit:
                type: array
                description: total_deposit is the total deposit on the proposal.
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: |-
                    Coin defines a token with a denomination and an amount.

                    NOTE: The amount field is an Int which implements the custom method
                    signatures required by gogoproto.
              voting_start_time:
                type: string
                description: voting_start_time is the starting time to vote on a proposal.
                format: date-time
              voting_end_time:
                type: string
                description: voting_end_time is the end time of voting on a proposal.
                format: date-time
            description: Proposal defines the core field members of a governance proposal.
        pagination:
          type: object
          properties:
            next_key:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
      description: |-
        QueryProposalsResponse is the response type for the Query/Proposals RPC
        method.
    cosmos.gov.v1beta1.QueryTallyResultResponse:
      type: object
      properties:
        tally:
          type: object
          properties:
            "yes":
              type: string
              description: yes is the number of yes votes on a proposal.
            abstain:
              type: string
              description: abstain is the number of abstain votes on a proposal.
            "no":
              type: string
              description: no is the number of no votes on a proposal.
            no_with_veto:
              type: string
              description: no_with_veto is the number of no with veto votes on a proposal.
          description: tally defines the requested tally.
      description: QueryTallyResultResponse is the response type for the Query/Tally
        RPC method.
    cosmos.gov.v1beta1.QueryVoteResponse:
      type: object
      properties:
        vote:
          type: object
          properties:
            proposal_id:
              type: string
              description: proposal_id defines the unique id of the proposal.
              format: uint64
            voter:
              type: string
              description: voter is the voter address of the proposal.
            option:
              type: string
              description: |-
                Deprecated: Prefer to use `options` instead. This field is set in queries
                if and only if `len(options) == 1` and that option has weight 1. In all
                other cases, this field will default to VOTE_OPTION_UNSPECIFIED.
              default: VOTE_OPTION_UNSPECIFIED
              enum:
              - VOTE_OPTION_UNSPECIFIED
              - VOTE_OPTION_YES
              - VOTE_OPTION_ABSTAIN
              - VOTE_OPTION_NO
              - VOTE_OPTION_NO_WITH_VETO
            options:
              type: array
              description: |-
                options is the weighted vote options.

                Since: cosmos-sdk 0.43
              items:
                type: object
                properties:
                  option:
                    type: string
                    description: "option defines the valid vote options, it must not\
                      \ contain duplicate vote options."
                    default: VOTE_OPTION_UNSPECIFIED
                    enum:
                    - VOTE_OPTION_UNSPECIFIED
                    - VOTE_OPTION_YES
                    - VOTE_OPTION_ABSTAIN
                    - VOTE_OPTION_NO
                    - VOTE_OPTION_NO_WITH_VETO
                  weight:
                    type: string
                    description: weight is the vote weight associated with the vote
                      option.
                description: |-
                  WeightedVoteOption defines a unit of vote for vote split.

                  Since: cosmos-sdk 0.43
          description: |-
            Vote defines a vote on a governance proposal.
            A Vote consists of a proposal ID, the voter, and the vote option.
      description: QueryVoteResponse is the response type for the Query/Vote RPC method.
    cosmos.gov.v1beta1.QueryVotesResponse:
      type: object
      properties:
        votes:
          type: array
          description: votes defines the queried votes.
          items:
            type: object
            properties:
              proposal_id:
                type: string
                description: proposal_id defines the unique id of the proposal.
                format: uint64
              voter:
                type: string
                description: voter is the voter address of the proposal.
              option:
                type: string
                description: |-
                  Deprecated: Prefer to use `options` instead. This field is set in queries
                  if and only if `len(options) == 1` and that option has weight 1. In all
                  other cases, this field will default to VOTE_OPTION_UNSPECIFIED.
                default: VOTE_OPTION_UNSPECIFIED
                enum:
                - VOTE_OPTION_UNSPECIFIED
                - VOTE_OPTION_YES
                - VOTE_OPTION_ABSTAIN
                - VOTE_OPTION_NO
                - VOTE_OPTION_NO_WITH_VETO
              options:
                type: array
                description: |-
                  options is the weighted vote options.

                  Since: cosmos-sdk 0.43
                items:
                  type: object
                  properties:
                    option:
                      type: string
                      description: "option defines the valid vote options, it must\
                        \ not contain duplicate vote options."
                      default: VOTE_OPTION_UNSPECIFIED
                      enum:
                      - VOTE_OPTION_UNSPECIFIED
                      - VOTE_OPTION_YES
                      - VOTE_OPTION_ABSTAIN
                      - VOTE_OPTION_NO
                      - VOTE_OPTION_NO_WITH_VETO
                    weight:
                      type: string
                      description: weight is the vote weight associated with the vote
                        option.
                  description: |-
                    WeightedVoteOption defines a unit of vote for vote split.

                    Since: cosmos-sdk 0.43
            description: |-
              Vote defines a vote on a governance proposal.
              A Vote consists of a proposal ID, the voter, and the vote option.
        pagination:
          type: object
          properties:
            next_key:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
      description: QueryVotesResponse is the response type for the Query/Votes RPC
        method.
    cosmos.gov.v1beta1.TallyParams:
      type: object
      properties:
        quorum:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          description: |-
            Minimum percentage of total stake needed to vote for a result to be
            considered valid.
          format: byte
        threshold:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          description: "Minimum proportion of Yes votes for proposal to pass. Default\
            \ value: 0.5."
          format: byte
        veto_threshold:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          description: |-
            Minimum value of Veto votes to Total votes ratio for proposal to be
            vetoed. Default value: 1/3.
          format: byte
      description: TallyParams defines the params for tallying votes on governance
        proposals.
    cosmos.gov.v1beta1.TallyResult:
      type: object
      properties:
        "yes":
          type: string
          description: yes is the number of yes votes on a proposal.
        abstain:
          type: string
          description: abstain is the number of abstain votes on a proposal.
        "no":
          type: string
          description: no is the number of no votes on a proposal.
        no_with_veto:
          type: string
          description: no_with_veto is the number of no with veto votes on a proposal.
      description: TallyResult defines a standard tally for a governance proposal.
    cosmos.gov.v1beta1.Vote:
      type: object
      properties:
        proposal_id:
          type: string
          description: proposal_id defines the unique id of the proposal.
          format: uint64
        voter:
          type: string
          description: voter is the voter address of the proposal.
        option:
          type: string
          description: |-
            Deprecated: Prefer to use `options` instead. This field is set in queries
            if and only if `len(options) == 1` and that option has weight 1. In all
            other cases, this field will default to VOTE_OPTION_UNSPECIFIED.
          default: VOTE_OPTION_UNSPECIFIED
          enum:
          - VOTE_OPTION_UNSPECIFIED
          - VOTE_OPTION_YES
          - VOTE_OPTION_ABSTAIN
          - VOTE_OPTION_NO
          - VOTE_OPTION_NO_WITH_VETO
        options:
          type: array
          description: |-
            options is the weighted vote options.

            Since: cosmos-sdk 0.43
          items:
            type: object
            properties:
              option:
                type: string
                description: "option defines the valid vote options, it must not contain\
                  \ duplicate vote options."
                default: VOTE_OPTION_UNSPECIFIED
                enum:
                - VOTE_OPTION_UNSPECIFIED
                - VOTE_OPTION_YES
                - VOTE_OPTION_ABSTAIN
                - VOTE_OPTION_NO
                - VOTE_OPTION_NO_WITH_VETO
              weight:
                type: string
                description: weight is the vote weight associated with the vote option.
            description: |-
              WeightedVoteOption defines a unit of vote for vote split.

              Since: cosmos-sdk 0.43
      description: |-
        Vote defines a vote on a governance proposal.
        A Vote consists of a proposal ID, the voter, and the vote option.
    cosmos.gov.v1beta1.VoteOption:
      type: string
      description: |-
        VoteOption enumerates the valid vote options for a given governance proposal.

         - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.
         - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.
         - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.
         - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.
         - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.
      default: VOTE_OPTION_UNSPECIFIED
      enum:
      - VOTE_OPTION_UNSPECIFIED
      - VOTE_OPTION_YES
      - VOTE_OPTION_ABSTAIN
      - VOTE_OPTION_NO
      - VOTE_OPTION_NO_WITH_VETO
    cosmos.gov.v1beta1.VotingParams:
      type: object
      properties:
        voting_period:
          type: string
          description: Duration of the voting period.
      description: VotingParams defines the params for voting on governance proposals.
    cosmos.gov.v1beta1.WeightedVoteOption:
      type: object
      properties:
        option:
          type: string
          description: "option defines the valid vote options, it must not contain\
            \ duplicate vote options."
          default: VOTE_OPTION_UNSPECIFIED
          enum:
          - VOTE_OPTION_UNSPECIFIED
          - VOTE_OPTION_YES
          - VOTE_OPTION_ABSTAIN
          - VOTE_OPTION_NO
          - VOTE_OPTION_NO_WITH_VETO
        weight:
          type: string
          description: weight is the vote weight associated with the vote option.
      description: |-
        WeightedVoteOption defines a unit of vote for vote split.

        Since: cosmos-sdk 0.43
    cosmos.gov.v1.Deposit:
      type: object
      properties:
        proposal_id:
          type: string
          description: proposal_id defines the unique id of the proposal.
          format: uint64
        depositor:
          type: string
          description: depositor defines the deposit addresses from the proposals.
        amount:
          type: array
          description: amount to be deposited by depositor.
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
      description: |-
        Deposit defines an amount deposited by an account address to an active
        proposal.
    cosmos.gov.v1.DepositParams:
      type: object
      properties:
        min_deposit:
          type: array
          description: Minimum deposit for a proposal to enter voting period.
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
        max_deposit_period:
          type: string
          description: |-
            Maximum period for Atom holders to deposit on a proposal. Initial value: 2
            months.
      description: DepositParams defines the params for deposits on governance proposals.
    cosmos.gov.v1.Params:
      type: object
      properties:
        min_deposit:
          type: array
          description: Minimum deposit for a proposal to enter voting period.
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
        max_deposit_period:
          type: string
          description: |-
            Maximum period for Atom holders to deposit on a proposal. Initial value: 2
            months.
        voting_period:
          type: string
          description: Duration of the voting period.
        quorum:
          type: string
          description: |-
            Minimum percentage of total stake needed to vote for a result to be
             considered valid.
        threshold:
          type: string
          description: "Minimum proportion of Yes votes for proposal to pass. Default\
            \ value: 0.5."
        veto_threshold:
          type: string
          description: |-
            Minimum value of Veto votes to Total votes ratio for proposal to be
             vetoed. Default value: 1/3.
        min_initial_deposit_ratio:
          type: string
          description: The ratio representing the proportion of the deposit value
            that must be paid at proposal submission.
        burn_vote_quorum:
          title: burn deposits if a proposal does not meet quorum
          type: boolean
        burn_proposal_deposit_prevote:
          title: burn deposits if the proposal does not enter voting period
          type: boolean
        burn_vote_veto:
          title: burn deposits if quorum with vote type no_veto is met
          type: boolean
      description: |-
        Params defines the parameters for the x/gov module.

        Since: cosmos-sdk 0.47
    cosmos.gov.v1.Proposal:
      type: object
      properties:
        id:
          type: string
          description: id defines the unique id of the proposal.
          format: uint64
        messages:
          type: array
          description: messages are the arbitrary messages to be executed if the proposal
            passes.
          items:
            type: object
            properties:
              type_url:
                type: string
                description: |-
                  A URL/resource name that uniquely identifies the type of the serialized
                  protocol buffer message. This string must contain at least
                  one "/" character. The last segment of the URL's path must represent
                  the fully qualified name of the type (as in
                  `path/google.protobuf.Duration`). The name should be in a canonical form
                  (e.g., leading "." is not accepted).

                  In practice, teams usually precompile into the binary all types that they
                  expect it to use in the context of Any. However, for URLs which use the
                  scheme `http`, `https`, or no scheme, one can optionally set up a type
                  server that maps type URLs to message definitions as follows:

                  * If no scheme is provided, `https` is assumed.
                  * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                    value in binary format, or produce an error.
                  * Applications are allowed to cache lookup results based on the
                    URL, or have them precompiled into a binary to avoid any
                    lookup. Therefore, binary compatibility needs to be preserved
                    on changes to types. (Use versioned type names to manage
                    breaking changes.)

                  Note: this functionality is not currently available in the official
                  protobuf release, and it is not used for type URLs beginning with
                  type.googleapis.com.

                  Schemes other than `http`, `https` (or the empty scheme) might be
                  used with implementation specific semantics.
              value:
                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                type: string
                description: Must be a valid serialized protocol buffer of the above
                  specified type.
                format: byte
            description: |-
              `Any` contains an arbitrary serialized protocol buffer message along with a
              URL that describes the type of the serialized message.

              Protobuf library provides support to pack/unpack Any values in the form
              of utility functions or additional generated methods of the Any type.

              Example 1: Pack and unpack a message in C++.

                  Foo foo = ...;
                  Any any;
                  any.PackFrom(foo);
                  ...
                  if (any.UnpackTo(&foo)) {
                    ...
                  }

              Example 2: Pack and unpack a message in Java.

                  Foo foo = ...;
                  Any any = Any.pack(foo);
                  ...
                  if (any.is(Foo.class)) {
                    foo = any.unpack(Foo.class);
                  }

               Example 3: Pack and unpack a message in Python.

                  foo = Foo(...)
                  any = Any()
                  any.Pack(foo)
                  ...
                  if any.Is(Foo.DESCRIPTOR):
                    any.Unpack(foo)
                    ...

               Example 4: Pack and unpack a message in Go

                   foo := &pb.Foo{...}
                   any, err := ptypes.MarshalAny(foo)
                   ...
                   foo := &pb.Foo{}
                   if err := ptypes.UnmarshalAny(any, foo); err != nil {
                     ...
                   }

              The pack methods provided by protobuf library will by default use
              'type.googleapis.com/full.type.name' as the type URL and the unpack
              methods only use the fully qualified type name after the last '/'
              in the type URL, for example "foo.bar.com/x/y.z" will yield type
              name "y.z".


              JSON
              ====
              The JSON representation of an `Any` value uses the regular
              representation of the deserialized, embedded message, with an
              additional field `@type` which contains the type URL. Example:

                  package google.profile;
                  message Person {
                    string first_name = 1;
                    string last_name = 2;
                  }

                  {
                    "@type": "type.googleapis.com/google.profile.Person",
                    "firstName": <string>,
                    "lastName": <string>
                  }

              If the embedded message type is well-known and has a custom JSON
              representation, that representation will be embedded adding a field
              `value` which holds the custom JSON in addition to the `@type`
              field. Example (for message [google.protobuf.Duration][]):

                  {
                    "@type": "type.googleapis.com/google.protobuf.Duration",
                    "value": "1.212s"
                  }
        status:
          type: string
          description: status defines the proposal status.
          default: PROPOSAL_STATUS_UNSPECIFIED
          enum:
          - PROPOSAL_STATUS_UNSPECIFIED
          - PROPOSAL_STATUS_DEPOSIT_PERIOD
          - PROPOSAL_STATUS_VOTING_PERIOD
          - PROPOSAL_STATUS_PASSED
          - PROPOSAL_STATUS_REJECTED
          - PROPOSAL_STATUS_FAILED
        final_tally_result:
          type: object
          properties:
            yes_count:
              type: string
              description: yes_count is the number of yes votes on a proposal.
            abstain_count:
              type: string
              description: abstain_count is the number of abstain votes on a proposal.
            no_count:
              type: string
              description: no_count is the number of no votes on a proposal.
            no_with_veto_count:
              type: string
              description: no_with_veto_count is the number of no with veto votes
                on a proposal.
          description: |-
            final_tally_result is the final tally result of the proposal. When
            querying a proposal via gRPC, this field is not populated until the
            proposal's voting period has ended.
        submit_time:
          type: string
          description: submit_time is the time of proposal submission.
          format: date-time
        deposit_end_time:
          type: string
          description: deposit_end_time is the end time for deposition.
          format: date-time
        total_deposit:
          type: array
          description: total_deposit is the total deposit on the proposal.
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
        voting_start_time:
          type: string
          description: voting_start_time is the starting time to vote on a proposal.
          format: date-time
        voting_end_time:
          type: string
          description: voting_end_time is the end time of voting on a proposal.
          format: date-time
        metadata:
          type: string
          description: metadata is any arbitrary metadata attached to the proposal.
        title:
          title: title is the title of the proposal
          type: string
          description: "Since: cosmos-sdk 0.47"
        summary:
          title: summary is a short summary of the proposal
          type: string
          description: "Since: cosmos-sdk 0.47"
        proposer:
          title: Proposer is the address of the proposal sumbitter
          type: string
          description: "Since: cosmos-sdk 0.47"
      description: Proposal defines the core field members of a governance proposal.
    cosmos.gov.v1.ProposalStatus:
      type: string
      description: |-
        ProposalStatus enumerates the valid statuses of a proposal.

         - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default proposal status.
         - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit
        period.
         - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
        period.
         - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
        passed.
         - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has
        been rejected.
         - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has
        failed.
      default: PROPOSAL_STATUS_UNSPECIFIED
      enum:
      - PROPOSAL_STATUS_UNSPECIFIED
      - PROPOSAL_STATUS_DEPOSIT_PERIOD
      - PROPOSAL_STATUS_VOTING_PERIOD
      - PROPOSAL_STATUS_PASSED
      - PROPOSAL_STATUS_REJECTED
      - PROPOSAL_STATUS_FAILED
    cosmos.gov.v1.QueryDepositResponse:
      type: object
      properties:
        deposit:
          type: object
          properties:
            proposal_id:
              type: string
              description: proposal_id defines the unique id of the proposal.
              format: uint64
            depositor:
              type: string
              description: depositor defines the deposit addresses from the proposals.
            amount:
              type: array
              description: amount to be deposited by depositor.
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
          description: |-
            Deposit defines an amount deposited by an account address to an active
            proposal.
      description: QueryDepositResponse is the response type for the Query/Deposit
        RPC method.
    cosmos.gov.v1.QueryDepositsResponse:
      type: object
      properties:
        deposits:
          type: array
          description: deposits defines the requested deposits.
          items:
            type: object
            properties:
              proposal_id:
                type: string
                description: proposal_id defines the unique id of the proposal.
                format: uint64
              depositor:
                type: string
                description: depositor defines the deposit addresses from the proposals.
              amount:
                type: array
                description: amount to be deposited by depositor.
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: |-
                    Coin defines a token with a denomination and an amount.

                    NOTE: The amount field is an Int which implements the custom method
                    signatures required by gogoproto.
            description: |-
              Deposit defines an amount deposited by an account address to an active
              proposal.
        pagination:
          type: object
          properties:
            next_key:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
      description: QueryDepositsResponse is the response type for the Query/Deposits
        RPC method.
    cosmos.gov.v1.QueryParamsResponse:
      type: object
      properties:
        voting_params:
          type: object
          properties:
            voting_period:
              type: string
              description: Duration of the voting period.
          description: |-
            Deprecated: Prefer to use `params` instead.
            voting_params defines the parameters related to voting.
        deposit_params:
          type: object
          properties:
            min_deposit:
              type: array
              description: Minimum deposit for a proposal to enter voting period.
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
            max_deposit_period:
              type: string
              description: |-
                Maximum period for Atom holders to deposit on a proposal. Initial value: 2
                months.
          description: |-
            Deprecated: Prefer to use `params` instead.
            deposit_params defines the parameters related to deposit.
        tally_params:
          type: object
          properties:
            quorum:
              type: string
              description: |-
                Minimum percentage of total stake needed to vote for a result to be
                considered valid.
            threshold:
              type: string
              description: "Minimum proportion of Yes votes for proposal to pass.\
                \ Default value: 0.5."
            veto_threshold:
              type: string
              description: |-
                Minimum value of Veto votes to Total votes ratio for proposal to be
                vetoed. Default value: 1/3.
          description: |-
            Deprecated: Prefer to use `params` instead.
            tally_params defines the parameters related to tally.
        params:
          type: object
          properties:
            min_deposit:
              type: array
              description: Minimum deposit for a proposal to enter voting period.
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
            max_deposit_period:
              type: string
              description: |-
                Maximum period for Atom holders to deposit on a proposal. Initial value: 2
                months.
            voting_period:
              type: string
              description: Duration of the voting period.
            quorum:
              type: string
              description: |-
                Minimum percentage of total stake needed to vote for a result to be
                 considered valid.
            threshold:
              type: string
              description: "Minimum proportion of Yes votes for proposal to pass.\
                \ Default value: 0.5."
            veto_threshold:
              type: string
              description: |-
                Minimum value of Veto votes to Total votes ratio for proposal to be
                 vetoed. Default value: 1/3.
            min_initial_deposit_ratio:
              type: string
              description: The ratio representing the proportion of the deposit value
                that must be paid at proposal submission.
            burn_vote_quorum:
              title: burn deposits if a proposal does not meet quorum
              type: boolean
            burn_proposal_deposit_prevote:
              title: burn deposits if the proposal does not enter voting period
              type: boolean
            burn_vote_veto:
              title: burn deposits if quorum with vote type no_veto is met
              type: boolean
          description: |-
            params defines all the paramaters of x/gov module.

            Since: cosmos-sdk 0.47
      description: QueryParamsResponse is the response type for the Query/Params RPC
        method.
    cosmos.gov.v1.QueryProposalResponse:
      type: object
      properties:
        proposal:
          type: object
          properties:
            id:
              type: string
              description: id defines the unique id of the proposal.
              format: uint64
            messages:
              type: array
              description: messages are the arbitrary messages to be executed if the
                proposal passes.
              items:
                type: object
                properties:
                  type_url:
                    type: string
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                  value:
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                   Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                   Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := ptypes.MarshalAny(foo)
                       ...
                       foo := &pb.Foo{}
                       if err := ptypes.UnmarshalAny(any, foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".


                  JSON
                  ====
                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
            status:
              type: string
              description: status defines the proposal status.
              default: PROPOSAL_STATUS_UNSPECIFIED
              enum:
              - PROPOSAL_STATUS_UNSPECIFIED
              - PROPOSAL_STATUS_DEPOSIT_PERIOD
              - PROPOSAL_STATUS_VOTING_PERIOD
              - PROPOSAL_STATUS_PASSED
              - PROPOSAL_STATUS_REJECTED
              - PROPOSAL_STATUS_FAILED
            final_tally_result:
              type: object
              properties:
                yes_count:
                  type: string
                  description: yes_count is the number of yes votes on a proposal.
                abstain_count:
                  type: string
                  description: abstain_count is the number of abstain votes on a proposal.
                no_count:
                  type: string
                  description: no_count is the number of no votes on a proposal.
                no_with_veto_count:
                  type: string
                  description: no_with_veto_count is the number of no with veto votes
                    on a proposal.
              description: |-
                final_tally_result is the final tally result of the proposal. When
                querying a proposal via gRPC, this field is not populated until the
                proposal's voting period has ended.
            submit_time:
              type: string
              description: submit_time is the time of proposal submission.
              format: date-time
            deposit_end_time:
              type: string
              description: deposit_end_time is the end time for deposition.
              format: date-time
            total_deposit:
              type: array
              description: total_deposit is the total deposit on the proposal.
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
            voting_start_time:
              type: string
              description: voting_start_time is the starting time to vote on a proposal.
              format: date-time
            voting_end_time:
              type: string
              description: voting_end_time is the end time of voting on a proposal.
              format: date-time
            metadata:
              type: string
              description: metadata is any arbitrary metadata attached to the proposal.
            title:
              title: title is the title of the proposal
              type: string
              description: "Since: cosmos-sdk 0.47"
            summary:
              title: summary is a short summary of the proposal
              type: string
              description: "Since: cosmos-sdk 0.47"
            proposer:
              title: Proposer is the address of the proposal sumbitter
              type: string
              description: "Since: cosmos-sdk 0.47"
          description: Proposal defines the core field members of a governance proposal.
      description: QueryProposalResponse is the response type for the Query/Proposal
        RPC method.
    cosmos.gov.v1.QueryProposalsResponse:
      type: object
      properties:
        proposals:
          type: array
          description: proposals defines all the requested governance proposals.
          items:
            type: object
            properties:
              id:
                type: string
                description: id defines the unique id of the proposal.
                format: uint64
              messages:
                type: array
                description: messages are the arbitrary messages to be executed if
                  the proposal passes.
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: |-
                        A URL/resource name that uniquely identifies the type of the serialized
                        protocol buffer message. This string must contain at least
                        one "/" character. The last segment of the URL's path must represent
                        the fully qualified name of the type (as in
                        `path/google.protobuf.Duration`). The name should be in a canonical form
                        (e.g., leading "." is not accepted).

                        In practice, teams usually precompile into the binary all types that they
                        expect it to use in the context of Any. However, for URLs which use the
                        scheme `http`, `https`, or no scheme, one can optionally set up a type
                        server that maps type URLs to message definitions as follows:

                        * If no scheme is provided, `https` is assumed.
                        * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in the official
                        protobuf release, and it is not used for type URLs beginning with
                        type.googleapis.com.

                        Schemes other than `http`, `https` (or the empty scheme) might be
                        used with implementation specific semantics.
                    value:
                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                      type: string
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                  description: |-
                    `Any` contains an arbitrary serialized protocol buffer message along with a
                    URL that describes the type of the serialized message.

                    Protobuf library provides support to pack/unpack Any values in the form
                    of utility functions or additional generated methods of the Any type.

                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by default use
                    'type.googleapis.com/full.type.name' as the type URL and the unpack
                    methods only use the fully qualified type name after the last '/'
                    in the type URL, for example "foo.bar.com/x/y.z" will yield type
                    name "y.z".


                    JSON
                    ====
                    The JSON representation of an `Any` value uses the regular
                    representation of the deserialized, embedded message, with an
                    additional field `@type` which contains the type URL. Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom JSON
                    representation, that representation will be embedded adding a field
                    `value` which holds the custom JSON in addition to the `@type`
                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
              status:
                type: string
                description: status defines the proposal status.
                default: PROPOSAL_STATUS_UNSPECIFIED
                enum:
                - PROPOSAL_STATUS_UNSPECIFIED
                - PROPOSAL_STATUS_DEPOSIT_PERIOD
                - PROPOSAL_STATUS_VOTING_PERIOD
                - PROPOSAL_STATUS_PASSED
                - PROPOSAL_STATUS_REJECTED
                - PROPOSAL_STATUS_FAILED
              final_tally_result:
                type: object
                properties:
                  yes_count:
                    type: string
                    description: yes_count is the number of yes votes on a proposal.
                  abstain_count:
                    type: string
                    description: abstain_count is the number of abstain votes on a
                      proposal.
                  no_count:
                    type: string
                    description: no_count is the number of no votes on a proposal.
                  no_with_veto_count:
                    type: string
                    description: no_with_veto_count is the number of no with veto
                      votes on a proposal.
                description: |-
                  final_tally_result is the final tally result of the proposal. When
                  querying a proposal via gRPC, this field is not populated until the
                  proposal's voting period has ended.
              submit_time:
                type: string
                description: submit_time is the time of proposal submission.
                format: date-time
              deposit_end_time:
                type: string
                description: deposit_end_time is the end time for deposition.
                format: date-time
              total_deposit:
                type: array
                description: total_deposit is the total deposit on the proposal.
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: |-
                    Coin defines a token with a denomination and an amount.

                    NOTE: The amount field is an Int which implements the custom method
                    signatures required by gogoproto.
              voting_start_time:
                type: string
                description: voting_start_time is the starting time to vote on a proposal.
                format: date-time
              voting_end_time:
                type: string
                description: voting_end_time is the end time of voting on a proposal.
                format: date-time
              metadata:
                type: string
                description: metadata is any arbitrary metadata attached to the proposal.
              title:
                title: title is the title of the proposal
                type: string
                description: "Since: cosmos-sdk 0.47"
              summary:
                title: summary is a short summary of the proposal
                type: string
                description: "Since: cosmos-sdk 0.47"
              proposer:
                title: Proposer is the address of the proposal sumbitter
                type: string
                description: "Since: cosmos-sdk 0.47"
            description: Proposal defines the core field members of a governance proposal.
        pagination:
          type: object
          properties:
            next_key:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
      description: |-
        QueryProposalsResponse is the response type for the Query/Proposals RPC
        method.
    cosmos.gov.v1.QueryTallyResultResponse:
      type: object
      properties:
        tally:
          type: object
          properties:
            yes_count:
              type: string
              description: yes_count is the number of yes votes on a proposal.
            abstain_count:
              type: string
              description: abstain_count is the number of abstain votes on a proposal.
            no_count:
              type: string
              description: no_count is the number of no votes on a proposal.
            no_with_veto_count:
              type: string
              description: no_with_veto_count is the number of no with veto votes
                on a proposal.
          description: tally defines the requested tally.
      description: QueryTallyResultResponse is the response type for the Query/Tally
        RPC method.
    cosmos.gov.v1.QueryVoteResponse:
      type: object
      properties:
        vote:
          type: object
          properties:
            proposal_id:
              type: string
              description: proposal_id defines the unique id of the proposal.
              format: uint64
            voter:
              type: string
              description: voter is the voter address of the proposal.
            options:
              type: array
              description: options is the weighted vote options.
              items:
                type: object
                properties:
                  option:
                    type: string
                    description: "option defines the valid vote options, it must not\
                      \ contain duplicate vote options."
                    default: VOTE_OPTION_UNSPECIFIED
                    enum:
                    - VOTE_OPTION_UNSPECIFIED
                    - VOTE_OPTION_YES
                    - VOTE_OPTION_ABSTAIN
                    - VOTE_OPTION_NO
                    - VOTE_OPTION_NO_WITH_VETO
                  weight:
                    type: string
                    description: weight is the vote weight associated with the vote
                      option.
                description: WeightedVoteOption defines a unit of vote for vote split.
            metadata:
              type: string
              description: metadata is any  arbitrary metadata to attached to the
                vote.
          description: |-
            Vote defines a vote on a governance proposal.
            A Vote consists of a proposal ID, the voter, and the vote option.
      description: QueryVoteResponse is the response type for the Query/Vote RPC method.
    cosmos.gov.v1.QueryVotesResponse:
      type: object
      properties:
        votes:
          type: array
          description: votes defines the queried votes.
          items:
            type: object
            properties:
              proposal_id:
                type: string
                description: proposal_id defines the unique id of the proposal.
                format: uint64
              voter:
                type: string
                description: voter is the voter address of the proposal.
              options:
                type: array
                description: options is the weighted vote options.
                items:
                  type: object
                  properties:
                    option:
                      type: string
                      description: "option defines the valid vote options, it must\
                        \ not contain duplicate vote options."
                      default: VOTE_OPTION_UNSPECIFIED
                      enum:
                      - VOTE_OPTION_UNSPECIFIED
                      - VOTE_OPTION_YES
                      - VOTE_OPTION_ABSTAIN
                      - VOTE_OPTION_NO
                      - VOTE_OPTION_NO_WITH_VETO
                    weight:
                      type: string
                      description: weight is the vote weight associated with the vote
                        option.
                  description: WeightedVoteOption defines a unit of vote for vote
                    split.
              metadata:
                type: string
                description: metadata is any  arbitrary metadata to attached to the
                  vote.
            description: |-
              Vote defines a vote on a governance proposal.
              A Vote consists of a proposal ID, the voter, and the vote option.
        pagination:
          type: object
          properties:
            next_key:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
      description: QueryVotesResponse is the response type for the Query/Votes RPC
        method.
    cosmos.gov.v1.TallyParams:
      type: object
      properties:
        quorum:
          type: string
          description: |-
            Minimum percentage of total stake needed to vote for a result to be
            considered valid.
        threshold:
          type: string
          description: "Minimum proportion of Yes votes for proposal to pass. Default\
            \ value: 0.5."
        veto_threshold:
          type: string
          description: |-
            Minimum value of Veto votes to Total votes ratio for proposal to be
            vetoed. Default value: 1/3.
      description: TallyParams defines the params for tallying votes on governance
        proposals.
    cosmos.gov.v1.TallyResult:
      type: object
      properties:
        yes_count:
          type: string
          description: yes_count is the number of yes votes on a proposal.
        abstain_count:
          type: string
          description: abstain_count is the number of abstain votes on a proposal.
        no_count:
          type: string
          description: no_count is the number of no votes on a proposal.
        no_with_veto_count:
          type: string
          description: no_with_veto_count is the number of no with veto votes on a
            proposal.
      description: TallyResult defines a standard tally for a governance proposal.
    cosmos.gov.v1.Vote:
      type: object
      properties:
        proposal_id:
          type: string
          description: proposal_id defines the unique id of the proposal.
          format: uint64
        voter:
          type: string
          description: voter is the voter address of the proposal.
        options:
          type: array
          description: options is the weighted vote options.
          items:
            type: object
            properties:
              option:
                type: string
                description: "option defines the valid vote options, it must not contain\
                  \ duplicate vote options."
                default: VOTE_OPTION_UNSPECIFIED
                enum:
                - VOTE_OPTION_UNSPECIFIED
                - VOTE_OPTION_YES
                - VOTE_OPTION_ABSTAIN
                - VOTE_OPTION_NO
                - VOTE_OPTION_NO_WITH_VETO
              weight:
                type: string
                description: weight is the vote weight associated with the vote option.
            description: WeightedVoteOption defines a unit of vote for vote split.
        metadata:
          type: string
          description: metadata is any  arbitrary metadata to attached to the vote.
      description: |-
        Vote defines a vote on a governance proposal.
        A Vote consists of a proposal ID, the voter, and the vote option.
    cosmos.gov.v1.VoteOption:
      type: string
      description: |-
        VoteOption enumerates the valid vote options for a given governance proposal.

         - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.
         - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.
         - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.
         - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.
         - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.
      default: VOTE_OPTION_UNSPECIFIED
      enum:
      - VOTE_OPTION_UNSPECIFIED
      - VOTE_OPTION_YES
      - VOTE_OPTION_ABSTAIN
      - VOTE_OPTION_NO
      - VOTE_OPTION_NO_WITH_VETO
    cosmos.gov.v1.VotingParams:
      type: object
      properties:
        voting_period:
          type: string
          description: Duration of the voting period.
      description: VotingParams defines the params for voting on governance proposals.
    cosmos.gov.v1.WeightedVoteOption:
      type: object
      properties:
        option:
          type: string
          description: "option defines the valid vote options, it must not contain\
            \ duplicate vote options."
          default: VOTE_OPTION_UNSPECIFIED
          enum:
          - VOTE_OPTION_UNSPECIFIED
          - VOTE_OPTION_YES
          - VOTE_OPTION_ABSTAIN
          - VOTE_OPTION_NO
          - VOTE_OPTION_NO_WITH_VETO
        weight:
          type: string
          description: weight is the vote weight associated with the vote option.
      description: WeightedVoteOption defines a unit of vote for vote split.
    cosmos.consensus.v1.QueryParamsResponse:
      type: object
      properties:
        params:
          type: object
          properties:
            block:
              type: object
              properties:
                max_bytes:
                  title: |-
                    Max block size, in bytes.
                    Note: must be greater than 0
                  type: string
                  format: int64
                max_gas:
                  title: |-
                    Max gas per block.
                    Note: must be greater or equal to -1
                  type: string
                  format: int64
              description: BlockParams contains limits on the block size.
            evidence:
              type: object
              properties:
                max_age_num_blocks:
                  type: string
                  description: |-
                    Max age of evidence, in blocks.

                    The basic formula for calculating this is: MaxAgeDuration / {average block
                    time}.
                  format: int64
                max_age_duration:
                  type: string
                  description: |-
                    Max age of evidence, in time.

                    It should correspond with an app's "unbonding period" or other similar
                    mechanism for handling [Nothing-At-Stake
                    attacks](https://github.com/ethereum/wiki/wiki/Proof-of-Stake-FAQ#what-is-the-nothing-at-stake-problem-and-how-can-it-be-fixed).
                max_bytes:
                  title: |-
                    This sets the maximum size of total evidence in bytes that can be committed in a single block.
                    and should fall comfortably under the max block bytes.
                    Default is 1048576 or 1MB
                  type: string
                  format: int64
              description: EvidenceParams determine how we handle evidence of malfeasance.
            validator:
              type: object
              properties:
                pub_key_types:
                  type: array
                  items:
                    type: string
              description: |-
                ValidatorParams restrict the public key types validators can use.
                NOTE: uses ABCI pubkey naming, not Amino names.
            version:
              type: object
              properties:
                app:
                  type: string
                  format: uint64
              description: VersionParams contains the ABCI application version.
          description: |-
            params are the tendermint consensus params stored in the consensus module.
            Please note that `params.version` is not populated in this response, it is
            tracked separately in the x/upgrade module.
      description: QueryParamsResponse defines the response type for querying x/consensus
        parameters.
    tendermint.types.BlockParams:
      type: object
      properties:
        max_bytes:
          title: |-
            Max block size, in bytes.
            Note: must be greater than 0
          type: string
          format: int64
        max_gas:
          title: |-
            Max gas per block.
            Note: must be greater or equal to -1
          type: string
          format: int64
      description: BlockParams contains limits on the block size.
    tendermint.types.ConsensusParams:
      type: object
      properties:
        block:
          type: object
          properties:
            max_bytes:
              title: |-
                Max block size, in bytes.
                Note: must be greater than 0
              type: string
              format: int64
            max_gas:
              title: |-
                Max gas per block.
                Note: must be greater or equal to -1
              type: string
              format: int64
          description: BlockParams contains limits on the block size.
        evidence:
          type: object
          properties:
            max_age_num_blocks:
              type: string
              description: |-
                Max age of evidence, in blocks.

                The basic formula for calculating this is: MaxAgeDuration / {average block
                time}.
              format: int64
            max_age_duration:
              type: string
              description: |-
                Max age of evidence, in time.

                It should correspond with an app's "unbonding period" or other similar
                mechanism for handling [Nothing-At-Stake
                attacks](https://github.com/ethereum/wiki/wiki/Proof-of-Stake-FAQ#what-is-the-nothing-at-stake-problem-and-how-can-it-be-fixed).
            max_bytes:
              title: |-
                This sets the maximum size of total evidence in bytes that can be committed in a single block.
                and should fall comfortably under the max block bytes.
                Default is 1048576 or 1MB
              type: string
              format: int64
          description: EvidenceParams determine how we handle evidence of malfeasance.
        validator:
          type: object
          properties:
            pub_key_types:
              type: array
              items:
                type: string
          description: |-
            ValidatorParams restrict the public key types validators can use.
            NOTE: uses ABCI pubkey naming, not Amino names.
        version:
          type: object
          properties:
            app:
              type: string
              format: uint64
          description: VersionParams contains the ABCI application version.
      description: |-
        ConsensusParams contains consensus critical parameters that determine the
        validity of blocks.
    tendermint.types.EvidenceParams:
      type: object
      properties:
        max_age_num_blocks:
          type: string
          description: |-
            Max age of evidence, in blocks.

            The basic formula for calculating this is: MaxAgeDuration / {average block
            time}.
          format: int64
        max_age_duration:
          type: string
          description: |-
            Max age of evidence, in time.

            It should correspond with an app's "unbonding period" or other similar
            mechanism for handling [Nothing-At-Stake
            attacks](https://github.com/ethereum/wiki/wiki/Proof-of-Stake-FAQ#what-is-the-nothing-at-stake-problem-and-how-can-it-be-fixed).
        max_bytes:
          title: |-
            This sets the maximum size of total evidence in bytes that can be committed in a single block.
            and should fall comfortably under the max block bytes.
            Default is 1048576 or 1MB
          type: string
          format: int64
      description: EvidenceParams determine how we handle evidence of malfeasance.
    tendermint.types.ValidatorParams:
      type: object
      properties:
        pub_key_types:
          type: array
          items:
            type: string
      description: |-
        ValidatorParams restrict the public key types validators can use.
        NOTE: uses ABCI pubkey naming, not Amino names.
    tendermint.types.VersionParams:
      type: object
      properties:
        app:
          type: string
          format: uint64
      description: VersionParams contains the ABCI application version.
    cosmos.group.v1.GroupInfo:
      type: object
      properties:
        id:
          type: string
          description: id is the unique ID of the group.
          format: uint64
        admin:
          type: string
          description: admin is the account address of the group's admin.
        metadata:
          type: string
          description: metadata is any arbitrary metadata to attached to the group.
        version:
          title: |-
            version is used to track changes to a group's membership structure that
            would break existing proposals. Whenever any members weight is changed,
            or any member is added or removed this version is incremented and will
            cause proposals based on older versions of this group to fail
          type: string
          format: uint64
        total_weight:
          type: string
          description: total_weight is the sum of the group members' weights.
        created_at:
          type: string
          description: created_at is a timestamp specifying when a group was created.
          format: date-time
      description: GroupInfo represents the high-level on-chain information for a
        group.
    cosmos.group.v1.GroupMember:
      type: object
      properties:
        group_id:
          type: string
          description: group_id is the unique ID of the group.
          format: uint64
        member:
          type: object
          properties:
            address:
              type: string
              description: address is the member's account address.
            weight:
              type: string
              description: weight is the member's voting weight that should be greater
                than 0.
            metadata:
              type: string
              description: metadata is any arbitrary metadata attached to the member.
            added_at:
              type: string
              description: added_at is a timestamp specifying when a member was added.
              format: date-time
          description: member is the member data.
      description: GroupMember represents the relationship between a group and a member.
    cosmos.group.v1.GroupPolicyInfo:
      type: object
      properties:
        address:
          type: string
          description: address is the account address of group policy.
        group_id:
          type: string
          description: group_id is the unique ID of the group.
          format: uint64
        admin:
          type: string
          description: admin is the account address of the group admin.
        metadata:
          title: |-
            metadata is any arbitrary metadata attached to the group policy.
            the recommended format of the metadata is to be found here:
            https://docs.cosmos.network/v0.47/modules/group#decision-policy-1
          type: string
        version:
          type: string
          description: |-
            version is used to track changes to a group's GroupPolicyInfo structure that
            would create a different result on a running proposal.
          format: uint64
        decision_policy:
          type: object
          properties:
            type_url:
              type: string
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
            value:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

             Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

             Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := ptypes.MarshalAny(foo)
                 ...
                 foo := &pb.Foo{}
                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".


            JSON
            ====
            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
        created_at:
          type: string
          description: created_at is a timestamp specifying when a group policy was
            created.
          format: date-time
      description: GroupPolicyInfo represents the high-level on-chain information
        for a group policy.
    cosmos.group.v1.Member:
      type: object
      properties:
        address:
          type: string
          description: address is the member's account address.
        weight:
          type: string
          description: weight is the member's voting weight that should be greater
            than 0.
        metadata:
          type: string
          description: metadata is any arbitrary metadata attached to the member.
        added_at:
          type: string
          description: added_at is a timestamp specifying when a member was added.
          format: date-time
      description: |-
        Member represents a group member with an account address,
        non-zero weight, metadata and added_at timestamp.
    cosmos.group.v1.Proposal:
      type: object
      properties:
        id:
          type: string
          description: id is the unique id of the proposal.
          format: uint64
        group_policy_address:
          type: string
          description: group_policy_address is the account address of group policy.
        metadata:
          title: |-
            metadata is any arbitrary metadata attached to the proposal.
            the recommended format of the metadata is to be found here:
            https://docs.cosmos.network/v0.47/modules/group#proposal-4
          type: string
        proposers:
          type: array
          description: proposers are the account addresses of the proposers.
          items:
            type: string
        submit_time:
          type: string
          description: submit_time is a timestamp specifying when a proposal was submitted.
          format: date-time
        group_version:
          type: string
          description: |-
            group_version tracks the version of the group at proposal submission.
            This field is here for informational purposes only.
          format: uint64
        group_policy_version:
          type: string
          description: |-
            group_policy_version tracks the version of the group policy at proposal submission.
            When a decision policy is changed, existing proposals from previous policy
            versions will become invalid with the `ABORTED` status.
            This field is here for informational purposes only.
          format: uint64
        status:
          type: string
          description: status represents the high level position in the life cycle
            of the proposal. Initial value is Submitted.
          default: PROPOSAL_STATUS_UNSPECIFIED
          enum:
          - PROPOSAL_STATUS_UNSPECIFIED
          - PROPOSAL_STATUS_SUBMITTED
          - PROPOSAL_STATUS_ACCEPTED
          - PROPOSAL_STATUS_REJECTED
          - PROPOSAL_STATUS_ABORTED
          - PROPOSAL_STATUS_WITHDRAWN
        final_tally_result:
          type: object
          properties:
            yes_count:
              type: string
              description: yes_count is the weighted sum of yes votes.
            abstain_count:
              type: string
              description: abstain_count is the weighted sum of abstainers.
            no_count:
              type: string
              description: no_count is the weighted sum of no votes.
            no_with_veto_count:
              type: string
              description: no_with_veto_count is the weighted sum of veto.
          description: |-
            final_tally_result contains the sums of all weighted votes for this
            proposal for each vote option. It is empty at submission, and only
            populated after tallying, at voting period end or at proposal execution,
            whichever happens first.
        voting_period_end:
          type: string
          description: |-
            voting_period_end is the timestamp before which voting must be done.
            Unless a successful MsgExec is called before (to execute a proposal whose
            tally is successful before the voting period ends), tallying will be done
            at this point, and the `final_tally_result`and `status` fields will be
            accordingly updated.
          format: date-time
        executor_result:
          type: string
          description: executor_result is the final result of the proposal execution.
            Initial value is NotRun.
          default: PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED
          enum:
          - PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED
          - PROPOSAL_EXECUTOR_RESULT_NOT_RUN
          - PROPOSAL_EXECUTOR_RESULT_SUCCESS
          - PROPOSAL_EXECUTOR_RESULT_FAILURE
        messages:
          type: array
          description: messages is a list of `sdk.Msg`s that will be executed if the
            proposal passes.
          items:
            type: object
            properties:
              type_url:
                type: string
                description: |-
                  A URL/resource name that uniquely identifies the type of the serialized
                  protocol buffer message. This string must contain at least
                  one "/" character. The last segment of the URL's path must represent
                  the fully qualified name of the type (as in
                  `path/google.protobuf.Duration`). The name should be in a canonical form
                  (e.g., leading "." is not accepted).

                  In practice, teams usually precompile into the binary all types that they
                  expect it to use in the context of Any. However, for URLs which use the
                  scheme `http`, `https`, or no scheme, one can optionally set up a type
                  server that maps type URLs to message definitions as follows:

                  * If no scheme is provided, `https` is assumed.
                  * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                    value in binary format, or produce an error.
                  * Applications are allowed to cache lookup results based on the
                    URL, or have them precompiled into a binary to avoid any
                    lookup. Therefore, binary compatibility needs to be preserved
                    on changes to types. (Use versioned type names to manage
                    breaking changes.)

                  Note: this functionality is not currently available in the official
                  protobuf release, and it is not used for type URLs beginning with
                  type.googleapis.com.

                  Schemes other than `http`, `https` (or the empty scheme) might be
                  used with implementation specific semantics.
              value:
                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                type: string
                description: Must be a valid serialized protocol buffer of the above
                  specified type.
                format: byte
            description: |-
              `Any` contains an arbitrary serialized protocol buffer message along with a
              URL that describes the type of the serialized message.

              Protobuf library provides support to pack/unpack Any values in the form
              of utility functions or additional generated methods of the Any type.

              Example 1: Pack and unpack a message in C++.

                  Foo foo = ...;
                  Any any;
                  any.PackFrom(foo);
                  ...
                  if (any.UnpackTo(&foo)) {
                    ...
                  }

              Example 2: Pack and unpack a message in Java.

                  Foo foo = ...;
                  Any any = Any.pack(foo);
                  ...
                  if (any.is(Foo.class)) {
                    foo = any.unpack(Foo.class);
                  }

               Example 3: Pack and unpack a message in Python.

                  foo = Foo(...)
                  any = Any()
                  any.Pack(foo)
                  ...
                  if any.Is(Foo.DESCRIPTOR):
                    any.Unpack(foo)
                    ...

               Example 4: Pack and unpack a message in Go

                   foo := &pb.Foo{...}
                   any, err := ptypes.MarshalAny(foo)
                   ...
                   foo := &pb.Foo{}
                   if err := ptypes.UnmarshalAny(any, foo); err != nil {
                     ...
                   }

              The pack methods provided by protobuf library will by default use
              'type.googleapis.com/full.type.name' as the type URL and the unpack
              methods only use the fully qualified type name after the last '/'
              in the type URL, for example "foo.bar.com/x/y.z" will yield type
              name "y.z".


              JSON
              ====
              The JSON representation of an `Any` value uses the regular
              representation of the deserialized, embedded message, with an
              additional field `@type` which contains the type URL. Example:

                  package google.profile;
                  message Person {
                    string first_name = 1;
                    string last_name = 2;
                  }

                  {
                    "@type": "type.googleapis.com/google.profile.Person",
                    "firstName": <string>,
                    "lastName": <string>
                  }

              If the embedded message type is well-known and has a custom JSON
              representation, that representation will be embedded adding a field
              `value` which holds the custom JSON in addition to the `@type`
              field. Example (for message [google.protobuf.Duration][]):

                  {
                    "@type": "type.googleapis.com/google.protobuf.Duration",
                    "value": "1.212s"
                  }
        title:
          title: title is the title of the proposal
          type: string
          description: "Since: cosmos-sdk 0.47"
        summary:
          title: summary is a short summary of the proposal
          type: string
          description: "Since: cosmos-sdk 0.47"
      description: |-
        Proposal defines a group proposal. Any member of a group can submit a proposal
        for a group policy to decide upon.
        A proposal consists of a set of `sdk.Msg`s that will be executed if the proposal
        passes as well as some optional metadata associated with the proposal.
    cosmos.group.v1.ProposalExecutorResult:
      type: string
      description: |-
        ProposalExecutorResult defines types of proposal executor results.

         - PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED: An empty value is not allowed.
         - PROPOSAL_EXECUTOR_RESULT_NOT_RUN: We have not yet run the executor.
         - PROPOSAL_EXECUTOR_RESULT_SUCCESS: The executor was successful and proposed action updated state.
         - PROPOSAL_EXECUTOR_RESULT_FAILURE: The executor returned an error and proposed action didn't update state.
      default: PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED
      enum:
      - PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED
      - PROPOSAL_EXECUTOR_RESULT_NOT_RUN
      - PROPOSAL_EXECUTOR_RESULT_SUCCESS
      - PROPOSAL_EXECUTOR_RESULT_FAILURE
    cosmos.group.v1.ProposalStatus:
      type: string
      description: |-
        ProposalStatus defines proposal statuses.

         - PROPOSAL_STATUS_UNSPECIFIED: An empty value is invalid and not allowed.
         - PROPOSAL_STATUS_SUBMITTED: Initial status of a proposal when submitted.
         - PROPOSAL_STATUS_ACCEPTED: Final status of a proposal when the final tally is done and the outcome
        passes the group policy's decision policy.
         - PROPOSAL_STATUS_REJECTED: Final status of a proposal when the final tally is done and the outcome
        is rejected by the group policy's decision policy.
         - PROPOSAL_STATUS_ABORTED: Final status of a proposal when the group policy is modified before the
        final tally.
         - PROPOSAL_STATUS_WITHDRAWN: A proposal can be withdrawn before the voting start time by the owner.
        When this happens the final status is Withdrawn.
      default: PROPOSAL_STATUS_UNSPECIFIED
      enum:
      - PROPOSAL_STATUS_UNSPECIFIED
      - PROPOSAL_STATUS_SUBMITTED
      - PROPOSAL_STATUS_ACCEPTED
      - PROPOSAL_STATUS_REJECTED
      - PROPOSAL_STATUS_ABORTED
      - PROPOSAL_STATUS_WITHDRAWN
    cosmos.group.v1.QueryGroupInfoResponse:
      type: object
      properties:
        info:
          type: object
          properties:
            id:
              type: string
              description: id is the unique ID of the group.
              format: uint64
            admin:
              type: string
              description: admin is the account address of the group's admin.
            metadata:
              type: string
              description: metadata is any arbitrary metadata to attached to the group.
            version:
              title: |-
                version is used to track changes to a group's membership structure that
                would break existing proposals. Whenever any members weight is changed,
                or any member is added or removed this version is incremented and will
                cause proposals based on older versions of this group to fail
              type: string
              format: uint64
            total_weight:
              type: string
              description: total_weight is the sum of the group members' weights.
            created_at:
              type: string
              description: created_at is a timestamp specifying when a group was created.
              format: date-time
          description: info is the GroupInfo of the group.
      description: QueryGroupInfoResponse is the Query/GroupInfo response type.
    cosmos.group.v1.QueryGroupMembersResponse:
      type: object
      properties:
        members:
          type: array
          description: members are the members of the group with given group_id.
          items:
            type: object
            properties:
              group_id:
                type: string
                description: group_id is the unique ID of the group.
                format: uint64
              member:
                type: object
                properties:
                  address:
                    type: string
                    description: address is the member's account address.
                  weight:
                    type: string
                    description: weight is the member's voting weight that should
                      be greater than 0.
                  metadata:
                    type: string
                    description: metadata is any arbitrary metadata attached to the
                      member.
                  added_at:
                    type: string
                    description: added_at is a timestamp specifying when a member
                      was added.
                    format: date-time
                description: member is the member data.
            description: GroupMember represents the relationship between a group and
              a member.
        pagination:
          type: object
          properties:
            next_key:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
      description: QueryGroupMembersResponse is the Query/GroupMembersResponse response
        type.
    cosmos.group.v1.QueryGroupPoliciesByAdminResponse:
      type: object
      properties:
        group_policies:
          type: array
          description: group_policies are the group policies info with provided admin.
          items:
            type: object
            properties:
              address:
                type: string
                description: address is the account address of group policy.
              group_id:
                type: string
                description: group_id is the unique ID of the group.
                format: uint64
              admin:
                type: string
                description: admin is the account address of the group admin.
              metadata:
                title: |-
                  metadata is any arbitrary metadata attached to the group policy.
                  the recommended format of the metadata is to be found here:
                  https://docs.cosmos.network/v0.47/modules/group#decision-policy-1
                type: string
              version:
                type: string
                description: |-
                  version is used to track changes to a group's GroupPolicyInfo structure that
                  would create a different result on a running proposal.
                format: uint64
              decision_policy:
                type: object
                properties:
                  type_url:
                    type: string
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                  value:
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                   Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                   Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := ptypes.MarshalAny(foo)
                       ...
                       foo := &pb.Foo{}
                       if err := ptypes.UnmarshalAny(any, foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".


                  JSON
                  ====
                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
              created_at:
                type: string
                description: created_at is a timestamp specifying when a group policy
                  was created.
                format: date-time
            description: GroupPolicyInfo represents the high-level on-chain information
              for a group policy.
        pagination:
          type: object
          properties:
            next_key:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
      description: QueryGroupPoliciesByAdminResponse is the Query/GroupPoliciesByAdmin
        response type.
    cosmos.group.v1.QueryGroupPoliciesByGroupResponse:
      type: object
      properties:
        group_policies:
          type: array
          description: group_policies are the group policies info associated with
            the provided group.
          items:
            type: object
            properties:
              address:
                type: string
                description: address is the account address of group policy.
              group_id:
                type: string
                description: group_id is the unique ID of the group.
                format: uint64
              admin:
                type: string
                description: admin is the account address of the group admin.
              metadata:
                title: |-
                  metadata is any arbitrary metadata attached to the group policy.
                  the recommended format of the metadata is to be found here:
                  https://docs.cosmos.network/v0.47/modules/group#decision-policy-1
                type: string
              version:
                type: string
                description: |-
                  version is used to track changes to a group's GroupPolicyInfo structure that
                  would create a different result on a running proposal.
                format: uint64
              decision_policy:
                type: object
                properties:
                  type_url:
                    type: string
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                  value:
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                   Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                   Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := ptypes.MarshalAny(foo)
                       ...
                       foo := &pb.Foo{}
                       if err := ptypes.UnmarshalAny(any, foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".


                  JSON
                  ====
                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
              created_at:
                type: string
                description: created_at is a timestamp specifying when a group policy
                  was created.
                format: date-time
            description: GroupPolicyInfo represents the high-level on-chain information
              for a group policy.
        pagination:
          type: object
          properties:
            next_key:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
      description: QueryGroupPoliciesByGroupResponse is the Query/GroupPoliciesByGroup
        response type.
    cosmos.group.v1.QueryGroupPolicyInfoResponse:
      type: object
      properties:
        info:
          type: object
          properties:
            address:
              type: string
              description: address is the account address of group policy.
            group_id:
              type: string
              description: group_id is the unique ID of the group.
              format: uint64
            admin:
              type: string
              description: admin is the account address of the group admin.
            metadata:
              title: |-
                metadata is any arbitrary metadata attached to the group policy.
                the recommended format of the metadata is to be found here:
                https://docs.cosmos.network/v0.47/modules/group#decision-policy-1
              type: string
            version:
              type: string
              description: |-
                version is used to track changes to a group's GroupPolicyInfo structure that
                would create a different result on a running proposal.
              format: uint64
            decision_policy:
              type: object
              properties:
                type_url:
                  type: string
                  description: |-
                    A URL/resource name that uniquely identifies the type of the serialized
                    protocol buffer message. This string must contain at least
                    one "/" character. The last segment of the URL's path must represent
                    the fully qualified name of the type (as in
                    `path/google.protobuf.Duration`). The name should be in a canonical form
                    (e.g., leading "." is not accepted).

                    In practice, teams usually precompile into the binary all types that they
                    expect it to use in the context of Any. However, for URLs which use the
                    scheme `http`, `https`, or no scheme, one can optionally set up a type
                    server that maps type URLs to message definitions as follows:

                    * If no scheme is provided, `https` is assumed.
                    * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the official
                    protobuf release, and it is not used for type URLs beginning with
                    type.googleapis.com.

                    Schemes other than `http`, `https` (or the empty scheme) might be
                    used with implementation specific semantics.
                value:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
              description: |-
                `Any` contains an arbitrary serialized protocol buffer message along with a
                URL that describes the type of the serialized message.

                Protobuf library provides support to pack/unpack Any values in the form
                of utility functions or additional generated methods of the Any type.

                Example 1: Pack and unpack a message in C++.

                    Foo foo = ...;
                    Any any;
                    any.PackFrom(foo);
                    ...
                    if (any.UnpackTo(&foo)) {
                      ...
                    }

                Example 2: Pack and unpack a message in Java.

                    Foo foo = ...;
                    Any any = Any.pack(foo);
                    ...
                    if (any.is(Foo.class)) {
                      foo = any.unpack(Foo.class);
                    }

                 Example 3: Pack and unpack a message in Python.

                    foo = Foo(...)
                    any = Any()
                    any.Pack(foo)
                    ...
                    if any.Is(Foo.DESCRIPTOR):
                      any.Unpack(foo)
                      ...

                 Example 4: Pack and unpack a message in Go

                     foo := &pb.Foo{...}
                     any, err := ptypes.MarshalAny(foo)
                     ...
                     foo := &pb.Foo{}
                     if err := ptypes.UnmarshalAny(any, foo); err != nil {
                       ...
                     }

                The pack methods provided by protobuf library will by default use
                'type.googleapis.com/full.type.name' as the type URL and the unpack
                methods only use the fully qualified type name after the last '/'
                in the type URL, for example "foo.bar.com/x/y.z" will yield type
                name "y.z".


                JSON
                ====
                The JSON representation of an `Any` value uses the regular
                representation of the deserialized, embedded message, with an
                additional field `@type` which contains the type URL. Example:

                    package google.profile;
                    message Person {
                      string first_name = 1;
                      string last_name = 2;
                    }

                    {
                      "@type": "type.googleapis.com/google.profile.Person",
                      "firstName": <string>,
                      "lastName": <string>
                    }

                If the embedded message type is well-known and has a custom JSON
                representation, that representation will be embedded adding a field
                `value` which holds the custom JSON in addition to the `@type`
                field. Example (for message [google.protobuf.Duration][]):

                    {
                      "@type": "type.googleapis.com/google.protobuf.Duration",
                      "value": "1.212s"
                    }
            created_at:
              type: string
              description: created_at is a timestamp specifying when a group policy
                was created.
              format: date-time
          description: GroupPolicyInfo represents the high-level on-chain information
            for a group policy.
      description: QueryGroupPolicyInfoResponse is the Query/GroupPolicyInfo response
        type.
    cosmos.group.v1.QueryGroupsByAdminResponse:
      type: object
      properties:
        groups:
          type: array
          description: groups are the groups info with the provided admin.
          items:
            type: object
            properties:
              id:
                type: string
                description: id is the unique ID of the group.
                format: uint64
              admin:
                type: string
                description: admin is the account address of the group's admin.
              metadata:
                type: string
                description: metadata is any arbitrary metadata to attached to the
                  group.
              version:
                title: |-
                  version is used to track changes to a group's membership structure that
                  would break existing proposals. Whenever any members weight is changed,
                  or any member is added or removed this version is incremented and will
                  cause proposals based on older versions of this group to fail
                type: string
                format: uint64
              total_weight:
                type: string
                description: total_weight is the sum of the group members' weights.
              created_at:
                type: string
                description: created_at is a timestamp specifying when a group was
                  created.
                format: date-time
            description: GroupInfo represents the high-level on-chain information
              for a group.
        pagination:
          type: object
          properties:
            next_key:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
      description: QueryGroupsByAdminResponse is the Query/GroupsByAdminResponse response
        type.
    cosmos.group.v1.QueryGroupsByMemberResponse:
      type: object
      properties:
        groups:
          type: array
          description: groups are the groups info with the provided group member.
          items:
            type: object
            properties:
              id:
                type: string
                description: id is the unique ID of the group.
                format: uint64
              admin:
                type: string
                description: admin is the account address of the group's admin.
              metadata:
                type: string
                description: metadata is any arbitrary metadata to attached to the
                  group.
              version:
                title: |-
                  version is used to track changes to a group's membership structure that
                  would break existing proposals. Whenever any members weight is changed,
                  or any member is added or removed this version is incremented and will
                  cause proposals based on older versions of this group to fail
                type: string
                format: uint64
              total_weight:
                type: string
                description: total_weight is the sum of the group members' weights.
              created_at:
                type: string
                description: created_at is a timestamp specifying when a group was
                  created.
                format: date-time
            description: GroupInfo represents the high-level on-chain information
              for a group.
        pagination:
          type: object
          properties:
            next_key:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
      description: QueryGroupsByMemberResponse is the Query/GroupsByMember response
        type.
    cosmos.group.v1.QueryGroupsResponse:
      type: object
      properties:
        groups:
          type: array
          description: '`groups` is all the groups present in state.'
          items:
            type: object
            properties:
              id:
                type: string
                description: id is the unique ID of the group.
                format: uint64
              admin:
                type: string
                description: admin is the account address of the group's admin.
              metadata:
                type: string
                description: metadata is any arbitrary metadata to attached to the
                  group.
              version:
                title: |-
                  version is used to track changes to a group's membership structure that
                  would break existing proposals. Whenever any members weight is changed,
                  or any member is added or removed this version is incremented and will
                  cause proposals based on older versions of this group to fail
                type: string
                format: uint64
              total_weight:
                type: string
                description: total_weight is the sum of the group members' weights.
              created_at:
                type: string
                description: created_at is a timestamp specifying when a group was
                  created.
                format: date-time
            description: GroupInfo represents the high-level on-chain information
              for a group.
        pagination:
          type: object
          properties:
            next_key:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
      description: |-
        QueryGroupsResponse is the Query/Groups response type.

        Since: cosmos-sdk 0.47.1
    cosmos.group.v1.QueryProposalResponse:
      type: object
      properties:
        proposal:
          type: object
          properties:
            id:
              type: string
              description: id is the unique id of the proposal.
              format: uint64
            group_policy_address:
              type: string
              description: group_policy_address is the account address of group policy.
            metadata:
              title: |-
                metadata is any arbitrary metadata attached to the proposal.
                the recommended format of the metadata is to be found here:
                https://docs.cosmos.network/v0.47/modules/group#proposal-4
              type: string
            proposers:
              type: array
              description: proposers are the account addresses of the proposers.
              items:
                type: string
            submit_time:
              type: string
              description: submit_time is a timestamp specifying when a proposal was
                submitted.
              format: date-time
            group_version:
              type: string
              description: |-
                group_version tracks the version of the group at proposal submission.
                This field is here for informational purposes only.
              format: uint64
            group_policy_version:
              type: string
              description: |-
                group_policy_version tracks the version of the group policy at proposal submission.
                When a decision policy is changed, existing proposals from previous policy
                versions will become invalid with the `ABORTED` status.
                This field is here for informational purposes only.
              format: uint64
            status:
              type: string
              description: status represents the high level position in the life cycle
                of the proposal. Initial value is Submitted.
              default: PROPOSAL_STATUS_UNSPECIFIED
              enum:
              - PROPOSAL_STATUS_UNSPECIFIED
              - PROPOSAL_STATUS_SUBMITTED
              - PROPOSAL_STATUS_ACCEPTED
              - PROPOSAL_STATUS_REJECTED
              - PROPOSAL_STATUS_ABORTED
              - PROPOSAL_STATUS_WITHDRAWN
            final_tally_result:
              type: object
              properties:
                yes_count:
                  type: string
                  description: yes_count is the weighted sum of yes votes.
                abstain_count:
                  type: string
                  description: abstain_count is the weighted sum of abstainers.
                no_count:
                  type: string
                  description: no_count is the weighted sum of no votes.
                no_with_veto_count:
                  type: string
                  description: no_with_veto_count is the weighted sum of veto.
              description: |-
                final_tally_result contains the sums of all weighted votes for this
                proposal for each vote option. It is empty at submission, and only
                populated after tallying, at voting period end or at proposal execution,
                whichever happens first.
            voting_period_end:
              type: string
              description: |-
                voting_period_end is the timestamp before which voting must be done.
                Unless a successful MsgExec is called before (to execute a proposal whose
                tally is successful before the voting period ends), tallying will be done
                at this point, and the `final_tally_result`and `status` fields will be
                accordingly updated.
              format: date-time
            executor_result:
              type: string
              description: executor_result is the final result of the proposal execution.
                Initial value is NotRun.
              default: PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED
              enum:
              - PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED
              - PROPOSAL_EXECUTOR_RESULT_NOT_RUN
              - PROPOSAL_EXECUTOR_RESULT_SUCCESS
              - PROPOSAL_EXECUTOR_RESULT_FAILURE
            messages:
              type: array
              description: messages is a list of `sdk.Msg`s that will be executed
                if the proposal passes.
              items:
                type: object
                properties:
                  type_url:
                    type: string
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                  value:
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                   Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                   Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := ptypes.MarshalAny(foo)
                       ...
                       foo := &pb.Foo{}
                       if err := ptypes.UnmarshalAny(any, foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".


                  JSON
                  ====
                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
            title:
              title: title is the title of the proposal
              type: string
              description: "Since: cosmos-sdk 0.47"
            summary:
              title: summary is a short summary of the proposal
              type: string
              description: "Since: cosmos-sdk 0.47"
          description: proposal is the proposal info.
      description: QueryProposalResponse is the Query/Proposal response type.
    cosmos.group.v1.QueryProposalsByGroupPolicyResponse:
      type: object
      properties:
        proposals:
          type: array
          description: proposals are the proposals with given group policy.
          items:
            type: object
            properties:
              id:
                type: string
                description: id is the unique id of the proposal.
                format: uint64
              group_policy_address:
                type: string
                description: group_policy_address is the account address of group
                  policy.
              metadata:
                title: |-
                  metadata is any arbitrary metadata attached to the proposal.
                  the recommended format of the metadata is to be found here:
                  https://docs.cosmos.network/v0.47/modules/group#proposal-4
                type: string
              proposers:
                type: array
                description: proposers are the account addresses of the proposers.
                items:
                  type: string
              submit_time:
                type: string
                description: submit_time is a timestamp specifying when a proposal
                  was submitted.
                format: date-time
              group_version:
                type: string
                description: |-
                  group_version tracks the version of the group at proposal submission.
                  This field is here for informational purposes only.
                format: uint64
              group_policy_version:
                type: string
                description: |-
                  group_policy_version tracks the version of the group policy at proposal submission.
                  When a decision policy is changed, existing proposals from previous policy
                  versions will become invalid with the `ABORTED` status.
                  This field is here for informational purposes only.
                format: uint64
              status:
                type: string
                description: status represents the high level position in the life
                  cycle of the proposal. Initial value is Submitted.
                default: PROPOSAL_STATUS_UNSPECIFIED
                enum:
                - PROPOSAL_STATUS_UNSPECIFIED
                - PROPOSAL_STATUS_SUBMITTED
                - PROPOSAL_STATUS_ACCEPTED
                - PROPOSAL_STATUS_REJECTED
                - PROPOSAL_STATUS_ABORTED
                - PROPOSAL_STATUS_WITHDRAWN
              final_tally_result:
                type: object
                properties:
                  yes_count:
                    type: string
                    description: yes_count is the weighted sum of yes votes.
                  abstain_count:
                    type: string
                    description: abstain_count is the weighted sum of abstainers.
                  no_count:
                    type: string
                    description: no_count is the weighted sum of no votes.
                  no_with_veto_count:
                    type: string
                    description: no_with_veto_count is the weighted sum of veto.
                description: |-
                  final_tally_result contains the sums of all weighted votes for this
                  proposal for each vote option. It is empty at submission, and only
                  populated after tallying, at voting period end or at proposal execution,
                  whichever happens first.
              voting_period_end:
                type: string
                description: |-
                  voting_period_end is the timestamp before which voting must be done.
                  Unless a successful MsgExec is called before (to execute a proposal whose
                  tally is successful before the voting period ends), tallying will be done
                  at this point, and the `final_tally_result`and `status` fields will be
                  accordingly updated.
                format: date-time
              executor_result:
                type: string
                description: executor_result is the final result of the proposal execution.
                  Initial value is NotRun.
                default: PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED
                enum:
                - PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED
                - PROPOSAL_EXECUTOR_RESULT_NOT_RUN
                - PROPOSAL_EXECUTOR_RESULT_SUCCESS
                - PROPOSAL_EXECUTOR_RESULT_FAILURE
              messages:
                type: array
                description: messages is a list of `sdk.Msg`s that will be executed
                  if the proposal passes.
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: |-
                        A URL/resource name that uniquely identifies the type of the serialized
                        protocol buffer message. This string must contain at least
                        one "/" character. The last segment of the URL's path must represent
                        the fully qualified name of the type (as in
                        `path/google.protobuf.Duration`). The name should be in a canonical form
                        (e.g., leading "." is not accepted).

                        In practice, teams usually precompile into the binary all types that they
                        expect it to use in the context of Any. However, for URLs which use the
                        scheme `http`, `https`, or no scheme, one can optionally set up a type
                        server that maps type URLs to message definitions as follows:

                        * If no scheme is provided, `https` is assumed.
                        * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in the official
                        protobuf release, and it is not used for type URLs beginning with
                        type.googleapis.com.

                        Schemes other than `http`, `https` (or the empty scheme) might be
                        used with implementation specific semantics.
                    value:
                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                      type: string
                      description: Must be a valid serialized protocol buffer of the
                        above specified type.
                      format: byte
                  description: |-
                    `Any` contains an arbitrary serialized protocol buffer message along with a
                    URL that describes the type of the serialized message.

                    Protobuf library provides support to pack/unpack Any values in the form
                    of utility functions or additional generated methods of the Any type.

                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by default use
                    'type.googleapis.com/full.type.name' as the type URL and the unpack
                    methods only use the fully qualified type name after the last '/'
                    in the type URL, for example "foo.bar.com/x/y.z" will yield type
                    name "y.z".


                    JSON
                    ====
                    The JSON representation of an `Any` value uses the regular
                    representation of the deserialized, embedded message, with an
                    additional field `@type` which contains the type URL. Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom JSON
                    representation, that representation will be embedded adding a field
                    `value` which holds the custom JSON in addition to the `@type`
                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
              title:
                title: title is the title of the proposal
                type: string
                description: "Since: cosmos-sdk 0.47"
              summary:
                title: summary is a short summary of the proposal
                type: string
                description: "Since: cosmos-sdk 0.47"
            description: |-
              Proposal defines a group proposal. Any member of a group can submit a proposal
              for a group policy to decide upon.
              A proposal consists of a set of `sdk.Msg`s that will be executed if the proposal
              passes as well as some optional metadata associated with the proposal.
        pagination:
          type: object
          properties:
            next_key:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
      description: QueryProposalsByGroupPolicyResponse is the Query/ProposalByGroupPolicy
        response type.
    cosmos.group.v1.QueryTallyResultResponse:
      type: object
      properties:
        tally:
          type: object
          properties:
            yes_count:
              type: string
              description: yes_count is the weighted sum of yes votes.
            abstain_count:
              type: string
              description: abstain_count is the weighted sum of abstainers.
            no_count:
              type: string
              description: no_count is the weighted sum of no votes.
            no_with_veto_count:
              type: string
              description: no_with_veto_count is the weighted sum of veto.
          description: tally defines the requested tally.
      description: QueryTallyResultResponse is the Query/TallyResult response type.
    cosmos.group.v1.QueryVoteByProposalVoterResponse:
      type: object
      properties:
        vote:
          type: object
          properties:
            proposal_id:
              type: string
              description: proposal is the unique ID of the proposal.
              format: uint64
            voter:
              type: string
              description: voter is the account address of the voter.
            option:
              type: string
              description: option is the voter's choice on the proposal.
              default: VOTE_OPTION_UNSPECIFIED
              enum:
              - VOTE_OPTION_UNSPECIFIED
              - VOTE_OPTION_YES
              - VOTE_OPTION_ABSTAIN
              - VOTE_OPTION_NO
              - VOTE_OPTION_NO_WITH_VETO
            metadata:
              type: string
              description: metadata is any arbitrary metadata attached to the vote.
            submit_time:
              type: string
              description: submit_time is the timestamp when the vote was submitted.
              format: date-time
          description: vote is the vote with given proposal_id and voter.
      description: QueryVoteByProposalVoterResponse is the Query/VoteByProposalVoter
        response type.
    cosmos.group.v1.QueryVotesByProposalResponse:
      type: object
      properties:
        votes:
          type: array
          description: votes are the list of votes for given proposal_id.
          items:
            type: object
            properties:
              proposal_id:
                type: string
                description: proposal is the unique ID of the proposal.
                format: uint64
              voter:
                type: string
                description: voter is the account address of the voter.
              option:
                type: string
                description: option is the voter's choice on the proposal.
                default: VOTE_OPTION_UNSPECIFIED
                enum:
                - VOTE_OPTION_UNSPECIFIED
                - VOTE_OPTION_YES
                - VOTE_OPTION_ABSTAIN
                - VOTE_OPTION_NO
                - VOTE_OPTION_NO_WITH_VETO
              metadata:
                type: string
                description: metadata is any arbitrary metadata attached to the vote.
              submit_time:
                type: string
                description: submit_time is the timestamp when the vote was submitted.
                format: date-time
            description: Vote represents a vote for a proposal.
        pagination:
          type: object
          properties:
            next_key:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
      description: QueryVotesByProposalResponse is the Query/VotesByProposal response
        type.
    cosmos.group.v1.QueryVotesByVoterResponse:
      type: object
      properties:
        votes:
          type: array
          description: votes are the list of votes by given voter.
          items:
            type: object
            properties:
              proposal_id:
                type: string
                description: proposal is the unique ID of the proposal.
                format: uint64
              voter:
                type: string
                description: voter is the account address of the voter.
              option:
                type: string
                description: option is the voter's choice on the proposal.
                default: VOTE_OPTION_UNSPECIFIED
                enum:
                - VOTE_OPTION_UNSPECIFIED
                - VOTE_OPTION_YES
                - VOTE_OPTION_ABSTAIN
                - VOTE_OPTION_NO
                - VOTE_OPTION_NO_WITH_VETO
              metadata:
                type: string
                description: metadata is any arbitrary metadata attached to the vote.
              submit_time:
                type: string
                description: submit_time is the timestamp when the vote was submitted.
                format: date-time
            description: Vote represents a vote for a proposal.
        pagination:
          type: object
          properties:
            next_key:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
      description: QueryVotesByVoterResponse is the Query/VotesByVoter response type.
    cosmos.group.v1.TallyResult:
      type: object
      properties:
        yes_count:
          type: string
          description: yes_count is the weighted sum of yes votes.
        abstain_count:
          type: string
          description: abstain_count is the weighted sum of abstainers.
        no_count:
          type: string
          description: no_count is the weighted sum of no votes.
        no_with_veto_count:
          type: string
          description: no_with_veto_count is the weighted sum of veto.
      description: TallyResult represents the sum of weighted votes for each vote
        option.
    cosmos.group.v1.Vote:
      type: object
      properties:
        proposal_id:
          type: string
          description: proposal is the unique ID of the proposal.
          format: uint64
        voter:
          type: string
          description: voter is the account address of the voter.
        option:
          type: string
          description: option is the voter's choice on the proposal.
          default: VOTE_OPTION_UNSPECIFIED
          enum:
          - VOTE_OPTION_UNSPECIFIED
          - VOTE_OPTION_YES
          - VOTE_OPTION_ABSTAIN
          - VOTE_OPTION_NO
          - VOTE_OPTION_NO_WITH_VETO
        metadata:
          type: string
          description: metadata is any arbitrary metadata attached to the vote.
        submit_time:
          type: string
          description: submit_time is the timestamp when the vote was submitted.
          format: date-time
      description: Vote represents a vote for a proposal.
    cosmos.group.v1.VoteOption:
      type: string
      description: |-
        VoteOption enumerates the valid vote options for a given proposal.

         - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines an unspecified vote option which will
        return an error.
         - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.
         - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.
         - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.
         - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.
      default: VOTE_OPTION_UNSPECIFIED
      enum:
      - VOTE_OPTION_UNSPECIFIED
      - VOTE_OPTION_YES
      - VOTE_OPTION_ABSTAIN
      - VOTE_OPTION_NO
      - VOTE_OPTION_NO_WITH_VETO
    cosmos.mint.v1beta1.Params:
      type: object
      properties:
        mint_denom:
          title: type of coin to mint
          type: string
        inflation_rate_change:
          title: maximum annual change in inflation rate
          type: string
        inflation_max:
          title: maximum inflation rate
          type: string
        inflation_min:
          title: minimum inflation rate
          type: string
        goal_bonded:
          title: goal of percent bonded atoms
          type: string
        blocks_per_year:
          title: expected blocks per year
          type: string
          format: uint64
      description: Params defines the parameters for the x/mint module.
    cosmos.mint.v1beta1.QueryAnnualProvisionsResponse:
      type: object
      properties:
        annual_provisions:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          description: annual_provisions is the current minting annual provisions
            value.
          format: byte
      description: |-
        QueryAnnualProvisionsResponse is the response type for the
        Query/AnnualProvisions RPC method.
    cosmos.mint.v1beta1.QueryInflationResponse:
      type: object
      properties:
        inflation:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          description: inflation is the current minting inflation value.
          format: byte
      description: |-
        QueryInflationResponse is the response type for the Query/Inflation RPC
        method.
    cosmos.mint.v1beta1.QueryParamsResponse:
      type: object
      properties:
        params:
          type: object
          properties:
            mint_denom:
              title: type of coin to mint
              type: string
            inflation_rate_change:
              title: maximum annual change in inflation rate
              type: string
            inflation_max:
              title: maximum inflation rate
              type: string
            inflation_min:
              title: minimum inflation rate
              type: string
            goal_bonded:
              title: goal of percent bonded atoms
              type: string
            blocks_per_year:
              title: expected blocks per year
              type: string
              format: uint64
          description: params defines the parameters of the module.
      description: QueryParamsResponse is the response type for the Query/Params RPC
        method.
    cosmos.params.v1beta1.ParamChange:
      type: object
      properties:
        subspace:
          type: string
        key:
          type: string
        value:
          type: string
      description: |-
        ParamChange defines an individual parameter change, for use in
        ParameterChangeProposal.
    cosmos.params.v1beta1.QueryParamsResponse:
      type: object
      properties:
        param:
          type: object
          properties:
            subspace:
              type: string
            key:
              type: string
            value:
              type: string
          description: param defines the queried parameter.
      description: QueryParamsResponse is response type for the Query/Params RPC method.
    cosmos.params.v1beta1.QuerySubspacesResponse:
      type: object
      properties:
        subspaces:
          type: array
          items:
            type: object
            properties:
              subspace:
                type: string
              keys:
                type: array
                items:
                  type: string
            description: |-
              Subspace defines a parameter subspace name and all the keys that exist for
              the subspace.

              Since: cosmos-sdk 0.46
      description: |-
        QuerySubspacesResponse defines the response types for querying for all
        registered subspaces and all keys for a subspace.

        Since: cosmos-sdk 0.46
    cosmos.params.v1beta1.Subspace:
      type: object
      properties:
        subspace:
          type: string
        keys:
          type: array
          items:
            type: string
      description: |-
        Subspace defines a parameter subspace name and all the keys that exist for
        the subspace.

        Since: cosmos-sdk 0.46
    cosmos.slashing.v1beta1.Params:
      type: object
      properties:
        signed_blocks_window:
          type: string
          format: int64
        min_signed_per_window:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        downtime_jail_duration:
          type: string
        slash_fraction_double_sign:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        slash_fraction_downtime:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
      description: Params represents the parameters used for by the slashing module.
    cosmos.slashing.v1beta1.QueryParamsResponse:
      title: QueryParamsResponse is the response type for the Query/Params RPC method
      type: object
      properties:
        params:
          type: object
          properties:
            signed_blocks_window:
              type: string
              format: int64
            min_signed_per_window:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
            downtime_jail_duration:
              type: string
            slash_fraction_double_sign:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
            slash_fraction_downtime:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
          description: Params represents the parameters used for by the slashing module.
    cosmos.slashing.v1beta1.QuerySigningInfoResponse:
      title: |-
        QuerySigningInfoResponse is the response type for the Query/SigningInfo RPC
        method
      type: object
      properties:
        val_signing_info:
          title: val_signing_info is the signing info of requested val cons address
          type: object
          properties:
            address:
              type: string
            start_height:
              title: Height at which validator was first a candidate OR was unjailed
              type: string
              format: int64
            index_offset:
              type: string
              description: |-
                Index which is incremented each time the validator was a bonded
                in a block and may have signed a precommit or not. This in conjunction with the
                `SignedBlocksWindow` param determines the index in the `MissedBlocksBitArray`.
              format: int64
            jailed_until:
              type: string
              description: Timestamp until which the validator is jailed due to liveness
                downtime.
              format: date-time
            tombstoned:
              type: boolean
              description: |-
                Whether or not a validator has been tombstoned (killed out of validator set). It is set
                once the validator commits an equivocation or for any other configured misbehiavor.
            missed_blocks_counter:
              type: string
              description: |-
                A counter kept to avoid unnecessary array reads.
                Note that `Sum(MissedBlocksBitArray)` always equals `MissedBlocksCounter`.
              format: int64
          description: |-
            ValidatorSigningInfo defines a validator's signing info for monitoring their
            liveness activity.
    cosmos.slashing.v1beta1.QuerySigningInfosResponse:
      title: |-
        QuerySigningInfosResponse is the response type for the Query/SigningInfos RPC
        method
      type: object
      properties:
        info:
          title: info is the signing info of all validators
          type: array
          items:
            type: object
            properties:
              address:
                type: string
              start_height:
                title: Height at which validator was first a candidate OR was unjailed
                type: string
                format: int64
              index_offset:
                type: string
                description: |-
                  Index which is incremented each time the validator was a bonded
                  in a block and may have signed a precommit or not. This in conjunction with the
                  `SignedBlocksWindow` param determines the index in the `MissedBlocksBitArray`.
                format: int64
              jailed_until:
                type: string
                description: Timestamp until which the validator is jailed due to
                  liveness downtime.
                format: date-time
              tombstoned:
                type: boolean
                description: |-
                  Whether or not a validator has been tombstoned (killed out of validator set). It is set
                  once the validator commits an equivocation or for any other configured misbehiavor.
              missed_blocks_counter:
                type: string
                description: |-
                  A counter kept to avoid unnecessary array reads.
                  Note that `Sum(MissedBlocksBitArray)` always equals `MissedBlocksCounter`.
                format: int64
            description: |-
              ValidatorSigningInfo defines a validator's signing info for monitoring their
              liveness activity.
        pagination:
          type: object
          properties:
            next_key:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
    cosmos.slashing.v1beta1.ValidatorSigningInfo:
      type: object
      properties:
        address:
          type: string
        start_height:
          title: Height at which validator was first a candidate OR was unjailed
          type: string
          format: int64
        index_offset:
          type: string
          description: |-
            Index which is incremented each time the validator was a bonded
            in a block and may have signed a precommit or not. This in conjunction with the
            `SignedBlocksWindow` param determines the index in the `MissedBlocksBitArray`.
          format: int64
        jailed_until:
          type: string
          description: Timestamp until which the validator is jailed due to liveness
            downtime.
          format: date-time
        tombstoned:
          type: boolean
          description: |-
            Whether or not a validator has been tombstoned (killed out of validator set). It is set
            once the validator commits an equivocation or for any other configured misbehiavor.
        missed_blocks_counter:
          type: string
          description: |-
            A counter kept to avoid unnecessary array reads.
            Note that `Sum(MissedBlocksBitArray)` always equals `MissedBlocksCounter`.
          format: int64
      description: |-
        ValidatorSigningInfo defines a validator's signing info for monitoring their
        liveness activity.
    cosmos.staking.v1beta1.BondStatus:
      type: string
      description: |-
        BondStatus is the status of a validator.

         - BOND_STATUS_UNSPECIFIED: UNSPECIFIED defines an invalid validator status.
         - BOND_STATUS_UNBONDED: UNBONDED defines a validator that is not bonded.
         - BOND_STATUS_UNBONDING: UNBONDING defines a validator that is unbonding.
         - BOND_STATUS_BONDED: BONDED defines a validator that is bonded.
      default: BOND_STATUS_UNSPECIFIED
      enum:
      - BOND_STATUS_UNSPECIFIED
      - BOND_STATUS_UNBONDED
      - BOND_STATUS_UNBONDING
      - BOND_STATUS_BONDED
    cosmos.staking.v1beta1.Commission:
      type: object
      properties:
        commission_rates:
          type: object
          properties:
            rate:
              type: string
              description: "rate is the commission rate charged to delegators, as\
                \ a fraction."
            max_rate:
              type: string
              description: "max_rate defines the maximum commission rate which validator\
                \ can ever charge, as a fraction."
            max_change_rate:
              type: string
              description: "max_change_rate defines the maximum daily increase of\
                \ the validator commission, as a fraction."
          description: commission_rates defines the initial commission rates to be
            used for creating a validator.
        update_time:
          type: string
          description: update_time is the last time the commission rate was changed.
          format: date-time
      description: Commission defines commission parameters for a given validator.
    cosmos.staking.v1beta1.CommissionRates:
      type: object
      properties:
        rate:
          type: string
          description: "rate is the commission rate charged to delegators, as a fraction."
        max_rate:
          type: string
          description: "max_rate defines the maximum commission rate which validator\
            \ can ever charge, as a fraction."
        max_change_rate:
          type: string
          description: "max_change_rate defines the maximum daily increase of the\
            \ validator commission, as a fraction."
      description: |-
        CommissionRates defines the initial commission rates to be used for creating
        a validator.
    cosmos.staking.v1beta1.Delegation:
      type: object
      properties:
        delegator_address:
          type: string
          description: delegator_address is the bech32-encoded address of the delegator.
        validator_address:
          type: string
          description: validator_address is the bech32-encoded address of the validator.
        shares:
          type: string
          description: shares define the delegation shares received.
      description: |-
        Delegation represents the bond with tokens held by an account. It is
        owned by one delegator, and is associated with the voting power of one
        validator.
    cosmos.staking.v1beta1.DelegationResponse:
      type: object
      properties:
        delegation:
          type: object
          properties:
            delegator_address:
              type: string
              description: delegator_address is the bech32-encoded address of the
                delegator.
            validator_address:
              type: string
              description: validator_address is the bech32-encoded address of the
                validator.
            shares:
              type: string
              description: shares define the delegation shares received.
          description: |-
            Delegation represents the bond with tokens held by an account. It is
            owned by one delegator, and is associated with the voting power of one
            validator.
        balance:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
      description: |-
        DelegationResponse is equivalent to Delegation except that it contains a
        balance in addition to shares which is more suitable for client responses.
    cosmos.staking.v1beta1.Description:
      type: object
      properties:
        moniker:
          type: string
          description: moniker defines a human-readable name for the validator.
        identity:
          type: string
          description: identity defines an optional identity signature (ex. UPort
            or Keybase).
        website:
          type: string
          description: website defines an optional website link.
        security_contact:
          type: string
          description: security_contact defines an optional email for security contact.
        details:
          type: string
          description: details define other optional details.
      description: Description defines a validator description.
    cosmos.staking.v1beta1.HistoricalInfo:
      type: object
      properties:
        header:
          type: object
          properties:
            version:
              title: basic block info
              type: object
              properties:
                block:
                  type: string
                  format: uint64
                app:
                  type: string
                  format: uint64
              description: |-
                Consensus captures the consensus rules for processing a block in the blockchain,
                including all blockchain data structures and the rules of the application's
                state transition machine.
            chain_id:
              type: string
            height:
              type: string
              format: int64
            time:
              type: string
              format: date-time
            last_block_id:
              title: prev block info
              type: object
              properties:
                hash:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                part_set_header:
                  title: PartsetHeader
                  type: object
                  properties:
                    total:
                      type: integer
                      format: int64
                    hash:
                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                      type: string
                      format: byte
            last_commit_hash:
              title: hashes of block data
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
            data_hash:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
            validators_hash:
              title: hashes from the app output from the prev block
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
            next_validators_hash:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
            consensus_hash:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
            app_hash:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
            last_results_hash:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
            evidence_hash:
              title: consensus info
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
            proposer_address:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
          description: Header defines the structure of a block header.
        valset:
          type: array
          items:
            type: object
            properties:
              operator_address:
                type: string
                description: operator_address defines the address of the validator's
                  operator; bech encoded in JSON.
              consensus_pubkey:
                type: object
                properties:
                  type_url:
                    type: string
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                  value:
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                   Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                   Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := ptypes.MarshalAny(foo)
                       ...
                       foo := &pb.Foo{}
                       if err := ptypes.UnmarshalAny(any, foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".


                  JSON
                  ====
                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
              jailed:
                type: boolean
                description: jailed defined whether the validator has been jailed
                  from bonded status or not.
              status:
                type: string
                description: status is the validator status (bonded/unbonding/unbonded).
                default: BOND_STATUS_UNSPECIFIED
                enum:
                - BOND_STATUS_UNSPECIFIED
                - BOND_STATUS_UNBONDED
                - BOND_STATUS_UNBONDING
                - BOND_STATUS_BONDED
              tokens:
                type: string
                description: tokens define the delegated tokens (incl. self-delegation).
              delegator_shares:
                type: string
                description: delegator_shares defines total shares issued to a validator's
                  delegators.
              description:
                type: object
                properties:
                  moniker:
                    type: string
                    description: moniker defines a human-readable name for the validator.
                  identity:
                    type: string
                    description: identity defines an optional identity signature (ex.
                      UPort or Keybase).
                  website:
                    type: string
                    description: website defines an optional website link.
                  security_contact:
                    type: string
                    description: security_contact defines an optional email for security
                      contact.
                  details:
                    type: string
                    description: details define other optional details.
                description: description defines the description terms for the validator.
              unbonding_height:
                type: string
                description: "unbonding_height defines, if unbonding, the height at\
                  \ which this validator has begun unbonding."
                format: int64
              unbonding_time:
                type: string
                description: "unbonding_time defines, if unbonding, the min time for\
                  \ the validator to complete unbonding."
                format: date-time
              commission:
                type: object
                properties:
                  commission_rates:
                    type: object
                    properties:
                      rate:
                        type: string
                        description: "rate is the commission rate charged to delegators,\
                          \ as a fraction."
                      max_rate:
                        type: string
                        description: "max_rate defines the maximum commission rate\
                          \ which validator can ever charge, as a fraction."
                      max_change_rate:
                        type: string
                        description: "max_change_rate defines the maximum daily increase\
                          \ of the validator commission, as a fraction."
                    description: commission_rates defines the initial commission rates
                      to be used for creating a validator.
                  update_time:
                    type: string
                    description: update_time is the last time the commission rate
                      was changed.
                    format: date-time
                description: commission defines the commission parameters.
              min_self_delegation:
                type: string
                description: |-
                  min_self_delegation is the validator's self declared minimum self delegation.

                  Since: cosmos-sdk 0.46
              unbonding_on_hold_ref_count:
                title: strictly positive if this validator's unbonding has been stopped
                  by external modules
                type: string
                format: int64
              unbonding_ids:
                title: "list of unbonding ids, each uniquely identifing an unbonding\
                  \ of this validator"
                type: array
                items:
                  type: string
                  format: uint64
            description: |-
              Validator defines a validator, together with the total amount of the
              Validator's bond shares and their exchange rate to coins. Slashing results in
              a decrease in the exchange rate, allowing correct calculation of future
              undelegations without iterating over delegators. When coins are delegated to
              this validator, the validator is credited with a delegation whose number of
              bond shares is based on the amount of coins delegated divided by the current
              exchange rate. Voting power can be calculated as total bonded shares
              multiplied by exchange rate.
      description: |-
        HistoricalInfo contains header and validator information for a given block.
        It is stored as part of staking module's state, which persists the `n` most
        recent HistoricalInfo
        (`n` is set by the staking module's `historical_entries` parameter).
    cosmos.staking.v1beta1.Params:
      type: object
      properties:
        unbonding_time:
          type: string
          description: unbonding_time is the time duration of unbonding.
        max_validators:
          type: integer
          description: max_validators is the maximum number of validators.
          format: int64
        max_entries:
          type: integer
          description: max_entries is the max entries for either unbonding delegation
            or redelegation (per pair/trio).
          format: int64
        historical_entries:
          type: integer
          description: historical_entries is the number of historical entries to persist.
          format: int64
        bond_denom:
          type: string
          description: bond_denom defines the bondable coin denomination.
        min_commission_rate:
          title: min_commission_rate is the chain-wide minimum commission rate that
            a validator can charge their delegators
          type: string
      description: Params defines the parameters for the x/staking module.
    cosmos.staking.v1beta1.Pool:
      type: object
      properties:
        not_bonded_tokens:
          type: string
        bonded_tokens:
          type: string
      description: |-
        Pool is used for tracking bonded and not-bonded token supply of the bond
        denomination.
    cosmos.staking.v1beta1.QueryDelegationResponse:
      type: object
      properties:
        delegation_response:
          type: object
          properties:
            delegation:
              type: object
              properties:
                delegator_address:
                  type: string
                  description: delegator_address is the bech32-encoded address of
                    the delegator.
                validator_address:
                  type: string
                  description: validator_address is the bech32-encoded address of
                    the validator.
                shares:
                  type: string
                  description: shares define the delegation shares received.
              description: |-
                Delegation represents the bond with tokens held by an account. It is
                owned by one delegator, and is associated with the voting power of one
                validator.
            balance:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: |-
                Coin defines a token with a denomination and an amount.

                NOTE: The amount field is an Int which implements the custom method
                signatures required by gogoproto.
          description: |-
            DelegationResponse is equivalent to Delegation except that it contains a
            balance in addition to shares which is more suitable for client responses.
      description: QueryDelegationResponse is response type for the Query/Delegation
        RPC method.
    cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse:
      type: object
      properties:
        delegation_responses:
          type: array
          description: delegation_responses defines all the delegations' info of a
            delegator.
          items:
            type: object
            properties:
              delegation:
                type: object
                properties:
                  delegator_address:
                    type: string
                    description: delegator_address is the bech32-encoded address of
                      the delegator.
                  validator_address:
                    type: string
                    description: validator_address is the bech32-encoded address of
                      the validator.
                  shares:
                    type: string
                    description: shares define the delegation shares received.
                description: |-
                  Delegation represents the bond with tokens held by an account. It is
                  owned by one delegator, and is associated with the voting power of one
                  validator.
              balance:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
            description: |-
              DelegationResponse is equivalent to Delegation except that it contains a
              balance in addition to shares which is more suitable for client responses.
        pagination:
          type: object
          properties:
            next_key:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
      description: |-
        QueryDelegatorDelegationsResponse is response type for the
        Query/DelegatorDelegations RPC method.
    cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse:
      type: object
      properties:
        unbonding_responses:
          type: array
          items:
            type: object
            properties:
              delegator_address:
                type: string
                description: delegator_address is the bech32-encoded address of the
                  delegator.
              validator_address:
                type: string
                description: validator_address is the bech32-encoded address of the
                  validator.
              entries:
                type: array
                description: entries are the unbonding delegation entries.
                items:
                  type: object
                  properties:
                    creation_height:
                      type: string
                      description: creation_height is the height which the unbonding
                        took place.
                      format: int64
                    completion_time:
                      type: string
                      description: completion_time is the unix time for unbonding
                        completion.
                      format: date-time
                    initial_balance:
                      type: string
                      description: initial_balance defines the tokens initially scheduled
                        to receive at completion.
                    balance:
                      type: string
                      description: balance defines the tokens to receive at completion.
                    unbonding_id:
                      title: Incrementing id that uniquely identifies this entry
                      type: string
                      format: uint64
                    unbonding_on_hold_ref_count:
                      title: Strictly positive if this entry's unbonding has been
                        stopped by external modules
                      type: string
                      format: int64
                  description: UnbondingDelegationEntry defines an unbonding object
                    with relevant metadata.
            description: |-
              UnbondingDelegation stores all of a single delegator's unbonding bonds
              for a single validator in an time-ordered list.
        pagination:
          type: object
          properties:
            next_key:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
      description: |-
        QueryUnbondingDelegatorDelegationsResponse is response type for the
        Query/UnbondingDelegatorDelegations RPC method.
    cosmos.staking.v1beta1.QueryDelegatorValidatorResponse:
      type: object
      properties:
        validator:
          type: object
          properties:
            operator_address:
              type: string
              description: operator_address defines the address of the validator's
                operator; bech encoded in JSON.
            consensus_pubkey:
              type: object
              properties:
                type_url:
                  type: string
                  description: |-
                    A URL/resource name that uniquely identifies the type of the serialized
                    protocol buffer message. This string must contain at least
                    one "/" character. The last segment of the URL's path must represent
                    the fully qualified name of the type (as in
                    `path/google.protobuf.Duration`). The name should be in a canonical form
                    (e.g., leading "." is not accepted).

                    In practice, teams usually precompile into the binary all types that they
                    expect it to use in the context of Any. However, for URLs which use the
                    scheme `http`, `https`, or no scheme, one can optionally set up a type
                    server that maps type URLs to message definitions as follows:

                    * If no scheme is provided, `https` is assumed.
                    * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the official
                    protobuf release, and it is not used for type URLs beginning with
                    type.googleapis.com.

                    Schemes other than `http`, `https` (or the empty scheme) might be
                    used with implementation specific semantics.
                value:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
              description: |-
                `Any` contains an arbitrary serialized protocol buffer message along with a
                URL that describes the type of the serialized message.

                Protobuf library provides support to pack/unpack Any values in the form
                of utility functions or additional generated methods of the Any type.

                Example 1: Pack and unpack a message in C++.

                    Foo foo = ...;
                    Any any;
                    any.PackFrom(foo);
                    ...
                    if (any.UnpackTo(&foo)) {
                      ...
                    }

                Example 2: Pack and unpack a message in Java.

                    Foo foo = ...;
                    Any any = Any.pack(foo);
                    ...
                    if (any.is(Foo.class)) {
                      foo = any.unpack(Foo.class);
                    }

                 Example 3: Pack and unpack a message in Python.

                    foo = Foo(...)
                    any = Any()
                    any.Pack(foo)
                    ...
                    if any.Is(Foo.DESCRIPTOR):
                      any.Unpack(foo)
                      ...

                 Example 4: Pack and unpack a message in Go

                     foo := &pb.Foo{...}
                     any, err := ptypes.MarshalAny(foo)
                     ...
                     foo := &pb.Foo{}
                     if err := ptypes.UnmarshalAny(any, foo); err != nil {
                       ...
                     }

                The pack methods provided by protobuf library will by default use
                'type.googleapis.com/full.type.name' as the type URL and the unpack
                methods only use the fully qualified type name after the last '/'
                in the type URL, for example "foo.bar.com/x/y.z" will yield type
                name "y.z".


                JSON
                ====
                The JSON representation of an `Any` value uses the regular
                representation of the deserialized, embedded message, with an
                additional field `@type` which contains the type URL. Example:

                    package google.profile;
                    message Person {
                      string first_name = 1;
                      string last_name = 2;
                    }

                    {
                      "@type": "type.googleapis.com/google.profile.Person",
                      "firstName": <string>,
                      "lastName": <string>
                    }

                If the embedded message type is well-known and has a custom JSON
                representation, that representation will be embedded adding a field
                `value` which holds the custom JSON in addition to the `@type`
                field. Example (for message [google.protobuf.Duration][]):

                    {
                      "@type": "type.googleapis.com/google.protobuf.Duration",
                      "value": "1.212s"
                    }
            jailed:
              type: boolean
              description: jailed defined whether the validator has been jailed from
                bonded status or not.
            status:
              type: string
              description: status is the validator status (bonded/unbonding/unbonded).
              default: BOND_STATUS_UNSPECIFIED
              enum:
              - BOND_STATUS_UNSPECIFIED
              - BOND_STATUS_UNBONDED
              - BOND_STATUS_UNBONDING
              - BOND_STATUS_BONDED
            tokens:
              type: string
              description: tokens define the delegated tokens (incl. self-delegation).
            delegator_shares:
              type: string
              description: delegator_shares defines total shares issued to a validator's
                delegators.
            description:
              type: object
              properties:
                moniker:
                  type: string
                  description: moniker defines a human-readable name for the validator.
                identity:
                  type: string
                  description: identity defines an optional identity signature (ex.
                    UPort or Keybase).
                website:
                  type: string
                  description: website defines an optional website link.
                security_contact:
                  type: string
                  description: security_contact defines an optional email for security
                    contact.
                details:
                  type: string
                  description: details define other optional details.
              description: description defines the description terms for the validator.
            unbonding_height:
              type: string
              description: "unbonding_height defines, if unbonding, the height at\
                \ which this validator has begun unbonding."
              format: int64
            unbonding_time:
              type: string
              description: "unbonding_time defines, if unbonding, the min time for\
                \ the validator to complete unbonding."
              format: date-time
            commission:
              type: object
              properties:
                commission_rates:
                  type: object
                  properties:
                    rate:
                      type: string
                      description: "rate is the commission rate charged to delegators,\
                        \ as a fraction."
                    max_rate:
                      type: string
                      description: "max_rate defines the maximum commission rate which\
                        \ validator can ever charge, as a fraction."
                    max_change_rate:
                      type: string
                      description: "max_change_rate defines the maximum daily increase\
                        \ of the validator commission, as a fraction."
                  description: commission_rates defines the initial commission rates
                    to be used for creating a validator.
                update_time:
                  type: string
                  description: update_time is the last time the commission rate was
                    changed.
                  format: date-time
              description: commission defines the commission parameters.
            min_self_delegation:
              type: string
              description: |-
                min_self_delegation is the validator's self declared minimum self delegation.

                Since: cosmos-sdk 0.46
            unbonding_on_hold_ref_count:
              title: strictly positive if this validator's unbonding has been stopped
                by external modules
              type: string
              format: int64
            unbonding_ids:
              title: "list of unbonding ids, each uniquely identifing an unbonding\
                \ of this validator"
              type: array
              items:
                type: string
                format: uint64
          description: |-
            Validator defines a validator, together with the total amount of the
            Validator's bond shares and their exchange rate to coins. Slashing results in
            a decrease in the exchange rate, allowing correct calculation of future
            undelegations without iterating over delegators. When coins are delegated to
            this validator, the validator is credited with a delegation whose number of
            bond shares is based on the amount of coins delegated divided by the current
            exchange rate. Voting power can be calculated as total bonded shares
            multiplied by exchange rate.
      description: |-
        QueryDelegatorValidatorResponse response type for the
        Query/DelegatorValidator RPC method.
    cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse:
      type: object
      properties:
        validators:
          type: array
          description: validators defines the validators' info of a delegator.
          items:
            type: object
            properties:
              operator_address:
                type: string
                description: operator_address defines the address of the validator's
                  operator; bech encoded in JSON.
              consensus_pubkey:
                type: object
                properties:
                  type_url:
                    type: string
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                  value:
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                   Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                   Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := ptypes.MarshalAny(foo)
                       ...
                       foo := &pb.Foo{}
                       if err := ptypes.UnmarshalAny(any, foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".


                  JSON
                  ====
                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
              jailed:
                type: boolean
                description: jailed defined whether the validator has been jailed
                  from bonded status or not.
              status:
                type: string
                description: status is the validator status (bonded/unbonding/unbonded).
                default: BOND_STATUS_UNSPECIFIED
                enum:
                - BOND_STATUS_UNSPECIFIED
                - BOND_STATUS_UNBONDED
                - BOND_STATUS_UNBONDING
                - BOND_STATUS_BONDED
              tokens:
                type: string
                description: tokens define the delegated tokens (incl. self-delegation).
              delegator_shares:
                type: string
                description: delegator_shares defines total shares issued to a validator's
                  delegators.
              description:
                type: object
                properties:
                  moniker:
                    type: string
                    description: moniker defines a human-readable name for the validator.
                  identity:
                    type: string
                    description: identity defines an optional identity signature (ex.
                      UPort or Keybase).
                  website:
                    type: string
                    description: website defines an optional website link.
                  security_contact:
                    type: string
                    description: security_contact defines an optional email for security
                      contact.
                  details:
                    type: string
                    description: details define other optional details.
                description: description defines the description terms for the validator.
              unbonding_height:
                type: string
                description: "unbonding_height defines, if unbonding, the height at\
                  \ which this validator has begun unbonding."
                format: int64
              unbonding_time:
                type: string
                description: "unbonding_time defines, if unbonding, the min time for\
                  \ the validator to complete unbonding."
                format: date-time
              commission:
                type: object
                properties:
                  commission_rates:
                    type: object
                    properties:
                      rate:
                        type: string
                        description: "rate is the commission rate charged to delegators,\
                          \ as a fraction."
                      max_rate:
                        type: string
                        description: "max_rate defines the maximum commission rate\
                          \ which validator can ever charge, as a fraction."
                      max_change_rate:
                        type: string
                        description: "max_change_rate defines the maximum daily increase\
                          \ of the validator commission, as a fraction."
                    description: commission_rates defines the initial commission rates
                      to be used for creating a validator.
                  update_time:
                    type: string
                    description: update_time is the last time the commission rate
                      was changed.
                    format: date-time
                description: commission defines the commission parameters.
              min_self_delegation:
                type: string
                description: |-
                  min_self_delegation is the validator's self declared minimum self delegation.

                  Since: cosmos-sdk 0.46
              unbonding_on_hold_ref_count:
                title: strictly positive if this validator's unbonding has been stopped
                  by external modules
                type: string
                format: int64
              unbonding_ids:
                title: "list of unbonding ids, each uniquely identifing an unbonding\
                  \ of this validator"
                type: array
                items:
                  type: string
                  format: uint64
            description: |-
              Validator defines a validator, together with the total amount of the
              Validator's bond shares and their exchange rate to coins. Slashing results in
              a decrease in the exchange rate, allowing correct calculation of future
              undelegations without iterating over delegators. When coins are delegated to
              this validator, the validator is credited with a delegation whose number of
              bond shares is based on the amount of coins delegated divided by the current
              exchange rate. Voting power can be calculated as total bonded shares
              multiplied by exchange rate.
        pagination:
          type: object
          properties:
            next_key:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
      description: |-
        QueryDelegatorValidatorsResponse is response type for the
        Query/DelegatorValidators RPC method.
    cosmos.staking.v1beta1.QueryHistoricalInfoResponse:
      type: object
      properties:
        hist:
          type: object
          properties:
            header:
              type: object
              properties:
                version:
                  title: basic block info
                  type: object
                  properties:
                    block:
                      type: string
                      format: uint64
                    app:
                      type: string
                      format: uint64
                  description: |-
                    Consensus captures the consensus rules for processing a block in the blockchain,
                    including all blockchain data structures and the rules of the application's
                    state transition machine.
                chain_id:
                  type: string
                height:
                  type: string
                  format: int64
                time:
                  type: string
                  format: date-time
                last_block_id:
                  title: prev block info
                  type: object
                  properties:
                    hash:
                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                      type: string
                      format: byte
                    part_set_header:
                      title: PartsetHeader
                      type: object
                      properties:
                        total:
                          type: integer
                          format: int64
                        hash:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
                last_commit_hash:
                  title: hashes of block data
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                data_hash:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                validators_hash:
                  title: hashes from the app output from the prev block
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                next_validators_hash:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                consensus_hash:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                app_hash:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                last_results_hash:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                evidence_hash:
                  title: consensus info
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                proposer_address:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
              description: Header defines the structure of a block header.
            valset:
              type: array
              items:
                type: object
                properties:
                  operator_address:
                    type: string
                    description: operator_address defines the address of the validator's
                      operator; bech encoded in JSON.
                  consensus_pubkey:
                    type: object
                    properties:
                      type_url:
                        type: string
                        description: |-
                          A URL/resource name that uniquely identifies the type of the serialized
                          protocol buffer message. This string must contain at least
                          one "/" character. The last segment of the URL's path must represent
                          the fully qualified name of the type (as in
                          `path/google.protobuf.Duration`). The name should be in a canonical form
                          (e.g., leading "." is not accepted).

                          In practice, teams usually precompile into the binary all types that they
                          expect it to use in the context of Any. However, for URLs which use the
                          scheme `http`, `https`, or no scheme, one can optionally set up a type
                          server that maps type URLs to message definitions as follows:

                          * If no scheme is provided, `https` is assumed.
                          * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                            value in binary format, or produce an error.
                          * Applications are allowed to cache lookup results based on the
                            URL, or have them precompiled into a binary to avoid any
                            lookup. Therefore, binary compatibility needs to be preserved
                            on changes to types. (Use versioned type names to manage
                            breaking changes.)

                          Note: this functionality is not currently available in the official
                          protobuf release, and it is not used for type URLs beginning with
                          type.googleapis.com.

                          Schemes other than `http`, `https` (or the empty scheme) might be
                          used with implementation specific semantics.
                      value:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        description: Must be a valid serialized protocol buffer of
                          the above specified type.
                        format: byte
                    description: |-
                      `Any` contains an arbitrary serialized protocol buffer message along with a
                      URL that describes the type of the serialized message.

                      Protobuf library provides support to pack/unpack Any values in the form
                      of utility functions or additional generated methods of the Any type.

                      Example 1: Pack and unpack a message in C++.

                          Foo foo = ...;
                          Any any;
                          any.PackFrom(foo);
                          ...
                          if (any.UnpackTo(&foo)) {
                            ...
                          }

                      Example 2: Pack and unpack a message in Java.

                          Foo foo = ...;
                          Any any = Any.pack(foo);
                          ...
                          if (any.is(Foo.class)) {
                            foo = any.unpack(Foo.class);
                          }

                       Example 3: Pack and unpack a message in Python.

                          foo = Foo(...)
                          any = Any()
                          any.Pack(foo)
                          ...
                          if any.Is(Foo.DESCRIPTOR):
                            any.Unpack(foo)
                            ...

                       Example 4: Pack and unpack a message in Go

                           foo := &pb.Foo{...}
                           any, err := ptypes.MarshalAny(foo)
                           ...
                           foo := &pb.Foo{}
                           if err := ptypes.UnmarshalAny(any, foo); err != nil {
                             ...
                           }

                      The pack methods provided by protobuf library will by default use
                      'type.googleapis.com/full.type.name' as the type URL and the unpack
                      methods only use the fully qualified type name after the last '/'
                      in the type URL, for example "foo.bar.com/x/y.z" will yield type
                      name "y.z".


                      JSON
                      ====
                      The JSON representation of an `Any` value uses the regular
                      representation of the deserialized, embedded message, with an
                      additional field `@type` which contains the type URL. Example:

                          package google.profile;
                          message Person {
                            string first_name = 1;
                            string last_name = 2;
                          }

                          {
                            "@type": "type.googleapis.com/google.profile.Person",
                            "firstName": <string>,
                            "lastName": <string>
                          }

                      If the embedded message type is well-known and has a custom JSON
                      representation, that representation will be embedded adding a field
                      `value` which holds the custom JSON in addition to the `@type`
                      field. Example (for message [google.protobuf.Duration][]):

                          {
                            "@type": "type.googleapis.com/google.protobuf.Duration",
                            "value": "1.212s"
                          }
                  jailed:
                    type: boolean
                    description: jailed defined whether the validator has been jailed
                      from bonded status or not.
                  status:
                    type: string
                    description: status is the validator status (bonded/unbonding/unbonded).
                    default: BOND_STATUS_UNSPECIFIED
                    enum:
                    - BOND_STATUS_UNSPECIFIED
                    - BOND_STATUS_UNBONDED
                    - BOND_STATUS_UNBONDING
                    - BOND_STATUS_BONDED
                  tokens:
                    type: string
                    description: tokens define the delegated tokens (incl. self-delegation).
                  delegator_shares:
                    type: string
                    description: delegator_shares defines total shares issued to a
                      validator's delegators.
                  description:
                    type: object
                    properties:
                      moniker:
                        type: string
                        description: moniker defines a human-readable name for the
                          validator.
                      identity:
                        type: string
                        description: identity defines an optional identity signature
                          (ex. UPort or Keybase).
                      website:
                        type: string
                        description: website defines an optional website link.
                      security_contact:
                        type: string
                        description: security_contact defines an optional email for
                          security contact.
                      details:
                        type: string
                        description: details define other optional details.
                    description: description defines the description terms for the
                      validator.
                  unbonding_height:
                    type: string
                    description: "unbonding_height defines, if unbonding, the height\
                      \ at which this validator has begun unbonding."
                    format: int64
                  unbonding_time:
                    type: string
                    description: "unbonding_time defines, if unbonding, the min time\
                      \ for the validator to complete unbonding."
                    format: date-time
                  commission:
                    type: object
                    properties:
                      commission_rates:
                        type: object
                        properties:
                          rate:
                            type: string
                            description: "rate is the commission rate charged to delegators,\
                              \ as a fraction."
                          max_rate:
                            type: string
                            description: "max_rate defines the maximum commission\
                              \ rate which validator can ever charge, as a fraction."
                          max_change_rate:
                            type: string
                            description: "max_change_rate defines the maximum daily\
                              \ increase of the validator commission, as a fraction."
                        description: commission_rates defines the initial commission
                          rates to be used for creating a validator.
                      update_time:
                        type: string
                        description: update_time is the last time the commission rate
                          was changed.
                        format: date-time
                    description: commission defines the commission parameters.
                  min_self_delegation:
                    type: string
                    description: |-
                      min_self_delegation is the validator's self declared minimum self delegation.

                      Since: cosmos-sdk 0.46
                  unbonding_on_hold_ref_count:
                    title: strictly positive if this validator's unbonding has been
                      stopped by external modules
                    type: string
                    format: int64
                  unbonding_ids:
                    title: "list of unbonding ids, each uniquely identifing an unbonding\
                      \ of this validator"
                    type: array
                    items:
                      type: string
                      format: uint64
                description: |-
                  Validator defines a validator, together with the total amount of the
                  Validator's bond shares and their exchange rate to coins. Slashing results in
                  a decrease in the exchange rate, allowing correct calculation of future
                  undelegations without iterating over delegators. When coins are delegated to
                  this validator, the validator is credited with a delegation whose number of
                  bond shares is based on the amount of coins delegated divided by the current
                  exchange rate. Voting power can be calculated as total bonded shares
                  multiplied by exchange rate.
          description: hist defines the historical info at the given height.
      description: |-
        QueryHistoricalInfoResponse is response type for the Query/HistoricalInfo RPC
        method.
    cosmos.staking.v1beta1.QueryParamsResponse:
      type: object
      properties:
        params:
          type: object
          properties:
            unbonding_time:
              type: string
              description: unbonding_time is the time duration of unbonding.
            max_validators:
              type: integer
              description: max_validators is the maximum number of validators.
              format: int64
            max_entries:
              type: integer
              description: max_entries is the max entries for either unbonding delegation
                or redelegation (per pair/trio).
              format: int64
            historical_entries:
              type: integer
              description: historical_entries is the number of historical entries
                to persist.
              format: int64
            bond_denom:
              type: string
              description: bond_denom defines the bondable coin denomination.
            min_commission_rate:
              title: min_commission_rate is the chain-wide minimum commission rate
                that a validator can charge their delegators
              type: string
          description: params holds all the parameters of this module.
      description: QueryParamsResponse is response type for the Query/Params RPC method.
    cosmos.staking.v1beta1.QueryPoolResponse:
      type: object
      properties:
        pool:
          type: object
          properties:
            not_bonded_tokens:
              type: string
            bonded_tokens:
              type: string
          description: pool defines the pool info.
      description: QueryPoolResponse is response type for the Query/Pool RPC method.
    cosmos.staking.v1beta1.QueryRedelegationsResponse:
      type: object
      properties:
        redelegation_responses:
          type: array
          items:
            type: object
            properties:
              redelegation:
                type: object
                properties:
                  delegator_address:
                    type: string
                    description: delegator_address is the bech32-encoded address of
                      the delegator.
                  validator_src_address:
                    type: string
                    description: validator_src_address is the validator redelegation
                      source operator address.
                  validator_dst_address:
                    type: string
                    description: validator_dst_address is the validator redelegation
                      destination operator address.
                  entries:
                    type: array
                    description: entries are the redelegation entries.
                    items:
                      type: object
                      properties:
                        creation_height:
                          type: string
                          description: creation_height  defines the height which the
                            redelegation took place.
                          format: int64
                        completion_time:
                          type: string
                          description: completion_time defines the unix time for redelegation
                            completion.
                          format: date-time
                        initial_balance:
                          type: string
                          description: initial_balance defines the initial balance
                            when redelegation started.
                        shares_dst:
                          type: string
                          description: shares_dst is the amount of destination-validator
                            shares created by redelegation.
                        unbonding_id:
                          title: Incrementing id that uniquely identifies this entry
                          type: string
                          format: uint64
                        unbonding_on_hold_ref_count:
                          title: Strictly positive if this entry's unbonding has been
                            stopped by external modules
                          type: string
                          format: int64
                      description: RedelegationEntry defines a redelegation object
                        with relevant metadata.
                description: |-
                  Redelegation contains the list of a particular delegator's redelegating bonds
                  from a particular source validator to a particular destination validator.
              entries:
                type: array
                items:
                  type: object
                  properties:
                    redelegation_entry:
                      type: object
                      properties:
                        creation_height:
                          type: string
                          description: creation_height  defines the height which the
                            redelegation took place.
                          format: int64
                        completion_time:
                          type: string
                          description: completion_time defines the unix time for redelegation
                            completion.
                          format: date-time
                        initial_balance:
                          type: string
                          description: initial_balance defines the initial balance
                            when redelegation started.
                        shares_dst:
                          type: string
                          description: shares_dst is the amount of destination-validator
                            shares created by redelegation.
                        unbonding_id:
                          title: Incrementing id that uniquely identifies this entry
                          type: string
                          format: uint64
                        unbonding_on_hold_ref_count:
                          title: Strictly positive if this entry's unbonding has been
                            stopped by external modules
                          type: string
                          format: int64
                      description: RedelegationEntry defines a redelegation object
                        with relevant metadata.
                    balance:
                      type: string
                  description: |-
                    RedelegationEntryResponse is equivalent to a RedelegationEntry except that it
                    contains a balance in addition to shares which is more suitable for client
                    responses.
            description: |-
              RedelegationResponse is equivalent to a Redelegation except that its entries
              contain a balance in addition to shares which is more suitable for client
              responses.
        pagination:
          type: object
          properties:
            next_key:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
      description: |-
        QueryRedelegationsResponse is response type for the Query/Redelegations RPC
        method.
    cosmos.staking.v1beta1.QueryUnbondingDelegationResponse:
      type: object
      properties:
        unbond:
          type: object
          properties:
            delegator_address:
              type: string
              description: delegator_address is the bech32-encoded address of the
                delegator.
            validator_address:
              type: string
              description: validator_address is the bech32-encoded address of the
                validator.
            entries:
              type: array
              description: entries are the unbonding delegation entries.
              items:
                type: object
                properties:
                  creation_height:
                    type: string
                    description: creation_height is the height which the unbonding
                      took place.
                    format: int64
                  completion_time:
                    type: string
                    description: completion_time is the unix time for unbonding completion.
                    format: date-time
                  initial_balance:
                    type: string
                    description: initial_balance defines the tokens initially scheduled
                      to receive at completion.
                  balance:
                    type: string
                    description: balance defines the tokens to receive at completion.
                  unbonding_id:
                    title: Incrementing id that uniquely identifies this entry
                    type: string
                    format: uint64
                  unbonding_on_hold_ref_count:
                    title: Strictly positive if this entry's unbonding has been stopped
                      by external modules
                    type: string
                    format: int64
                description: UnbondingDelegationEntry defines an unbonding object
                  with relevant metadata.
          description: |-
            UnbondingDelegation stores all of a single delegator's unbonding bonds
            for a single validator in an time-ordered list.
      description: |-
        QueryDelegationResponse is response type for the Query/UnbondingDelegation
        RPC method.
    cosmos.staking.v1beta1.QueryValidatorDelegationsResponse:
      title: |-
        QueryValidatorDelegationsResponse is response type for the
        Query/ValidatorDelegations RPC method
      type: object
      properties:
        delegation_responses:
          type: array
          items:
            type: object
            properties:
              delegation:
                type: object
                properties:
                  delegator_address:
                    type: string
                    description: delegator_address is the bech32-encoded address of
                      the delegator.
                  validator_address:
                    type: string
                    description: validator_address is the bech32-encoded address of
                      the validator.
                  shares:
                    type: string
                    description: shares define the delegation shares received.
                description: |-
                  Delegation represents the bond with tokens held by an account. It is
                  owned by one delegator, and is associated with the voting power of one
                  validator.
              balance:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
            description: |-
              DelegationResponse is equivalent to Delegation except that it contains a
              balance in addition to shares which is more suitable for client responses.
        pagination:
          type: object
          properties:
            next_key:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
    cosmos.staking.v1beta1.QueryValidatorResponse:
      title: QueryValidatorResponse is response type for the Query/Validator RPC method
      type: object
      properties:
        validator:
          type: object
          properties:
            operator_address:
              type: string
              description: operator_address defines the address of the validator's
                operator; bech encoded in JSON.
            consensus_pubkey:
              type: object
              properties:
                type_url:
                  type: string
                  description: |-
                    A URL/resource name that uniquely identifies the type of the serialized
                    protocol buffer message. This string must contain at least
                    one "/" character. The last segment of the URL's path must represent
                    the fully qualified name of the type (as in
                    `path/google.protobuf.Duration`). The name should be in a canonical form
                    (e.g., leading "." is not accepted).

                    In practice, teams usually precompile into the binary all types that they
                    expect it to use in the context of Any. However, for URLs which use the
                    scheme `http`, `https`, or no scheme, one can optionally set up a type
                    server that maps type URLs to message definitions as follows:

                    * If no scheme is provided, `https` is assumed.
                    * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the official
                    protobuf release, and it is not used for type URLs beginning with
                    type.googleapis.com.

                    Schemes other than `http`, `https` (or the empty scheme) might be
                    used with implementation specific semantics.
                value:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
              description: |-
                `Any` contains an arbitrary serialized protocol buffer message along with a
                URL that describes the type of the serialized message.

                Protobuf library provides support to pack/unpack Any values in the form
                of utility functions or additional generated methods of the Any type.

                Example 1: Pack and unpack a message in C++.

                    Foo foo = ...;
                    Any any;
                    any.PackFrom(foo);
                    ...
                    if (any.UnpackTo(&foo)) {
                      ...
                    }

                Example 2: Pack and unpack a message in Java.

                    Foo foo = ...;
                    Any any = Any.pack(foo);
                    ...
                    if (any.is(Foo.class)) {
                      foo = any.unpack(Foo.class);
                    }

                 Example 3: Pack and unpack a message in Python.

                    foo = Foo(...)
                    any = Any()
                    any.Pack(foo)
                    ...
                    if any.Is(Foo.DESCRIPTOR):
                      any.Unpack(foo)
                      ...

                 Example 4: Pack and unpack a message in Go

                     foo := &pb.Foo{...}
                     any, err := ptypes.MarshalAny(foo)
                     ...
                     foo := &pb.Foo{}
                     if err := ptypes.UnmarshalAny(any, foo); err != nil {
                       ...
                     }

                The pack methods provided by protobuf library will by default use
                'type.googleapis.com/full.type.name' as the type URL and the unpack
                methods only use the fully qualified type name after the last '/'
                in the type URL, for example "foo.bar.com/x/y.z" will yield type
                name "y.z".


                JSON
                ====
                The JSON representation of an `Any` value uses the regular
                representation of the deserialized, embedded message, with an
                additional field `@type` which contains the type URL. Example:

                    package google.profile;
                    message Person {
                      string first_name = 1;
                      string last_name = 2;
                    }

                    {
                      "@type": "type.googleapis.com/google.profile.Person",
                      "firstName": <string>,
                      "lastName": <string>
                    }

                If the embedded message type is well-known and has a custom JSON
                representation, that representation will be embedded adding a field
                `value` which holds the custom JSON in addition to the `@type`
                field. Example (for message [google.protobuf.Duration][]):

                    {
                      "@type": "type.googleapis.com/google.protobuf.Duration",
                      "value": "1.212s"
                    }
            jailed:
              type: boolean
              description: jailed defined whether the validator has been jailed from
                bonded status or not.
            status:
              type: string
              description: status is the validator status (bonded/unbonding/unbonded).
              default: BOND_STATUS_UNSPECIFIED
              enum:
              - BOND_STATUS_UNSPECIFIED
              - BOND_STATUS_UNBONDED
              - BOND_STATUS_UNBONDING
              - BOND_STATUS_BONDED
            tokens:
              type: string
              description: tokens define the delegated tokens (incl. self-delegation).
            delegator_shares:
              type: string
              description: delegator_shares defines total shares issued to a validator's
                delegators.
            description:
              type: object
              properties:
                moniker:
                  type: string
                  description: moniker defines a human-readable name for the validator.
                identity:
                  type: string
                  description: identity defines an optional identity signature (ex.
                    UPort or Keybase).
                website:
                  type: string
                  description: website defines an optional website link.
                security_contact:
                  type: string
                  description: security_contact defines an optional email for security
                    contact.
                details:
                  type: string
                  description: details define other optional details.
              description: description defines the description terms for the validator.
            unbonding_height:
              type: string
              description: "unbonding_height defines, if unbonding, the height at\
                \ which this validator has begun unbonding."
              format: int64
            unbonding_time:
              type: string
              description: "unbonding_time defines, if unbonding, the min time for\
                \ the validator to complete unbonding."
              format: date-time
            commission:
              type: object
              properties:
                commission_rates:
                  type: object
                  properties:
                    rate:
                      type: string
                      description: "rate is the commission rate charged to delegators,\
                        \ as a fraction."
                    max_rate:
                      type: string
                      description: "max_rate defines the maximum commission rate which\
                        \ validator can ever charge, as a fraction."
                    max_change_rate:
                      type: string
                      description: "max_change_rate defines the maximum daily increase\
                        \ of the validator commission, as a fraction."
                  description: commission_rates defines the initial commission rates
                    to be used for creating a validator.
                update_time:
                  type: string
                  description: update_time is the last time the commission rate was
                    changed.
                  format: date-time
              description: commission defines the commission parameters.
            min_self_delegation:
              type: string
              description: |-
                min_self_delegation is the validator's self declared minimum self delegation.

                Since: cosmos-sdk 0.46
            unbonding_on_hold_ref_count:
              title: strictly positive if this validator's unbonding has been stopped
                by external modules
              type: string
              format: int64
            unbonding_ids:
              title: "list of unbonding ids, each uniquely identifing an unbonding\
                \ of this validator"
              type: array
              items:
                type: string
                format: uint64
          description: |-
            Validator defines a validator, together with the total amount of the
            Validator's bond shares and their exchange rate to coins. Slashing results in
            a decrease in the exchange rate, allowing correct calculation of future
            undelegations without iterating over delegators. When coins are delegated to
            this validator, the validator is credited with a delegation whose number of
            bond shares is based on the amount of coins delegated divided by the current
            exchange rate. Voting power can be calculated as total bonded shares
            multiplied by exchange rate.
    cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse:
      type: object
      properties:
        unbonding_responses:
          type: array
          items:
            type: object
            properties:
              delegator_address:
                type: string
                description: delegator_address is the bech32-encoded address of the
                  delegator.
              validator_address:
                type: string
                description: validator_address is the bech32-encoded address of the
                  validator.
              entries:
                type: array
                description: entries are the unbonding delegation entries.
                items:
                  type: object
                  properties:
                    creation_height:
                      type: string
                      description: creation_height is the height which the unbonding
                        took place.
                      format: int64
                    completion_time:
                      type: string
                      description: completion_time is the unix time for unbonding
                        completion.
                      format: date-time
                    initial_balance:
                      type: string
                      description: initial_balance defines the tokens initially scheduled
                        to receive at completion.
                    balance:
                      type: string
                      description: balance defines the tokens to receive at completion.
                    unbonding_id:
                      title: Incrementing id that uniquely identifies this entry
                      type: string
                      format: uint64
                    unbonding_on_hold_ref_count:
                      title: Strictly positive if this entry's unbonding has been
                        stopped by external modules
                      type: string
                      format: int64
                  description: UnbondingDelegationEntry defines an unbonding object
                    with relevant metadata.
            description: |-
              UnbondingDelegation stores all of a single delegator's unbonding bonds
              for a single validator in an time-ordered list.
        pagination:
          type: object
          properties:
            next_key:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
      description: |-
        QueryValidatorUnbondingDelegationsResponse is response type for the
        Query/ValidatorUnbondingDelegations RPC method.
    cosmos.staking.v1beta1.QueryValidatorsResponse:
      title: QueryValidatorsResponse is response type for the Query/Validators RPC
        method
      type: object
      properties:
        validators:
          type: array
          description: validators contains all the queried validators.
          items:
            type: object
            properties:
              operator_address:
                type: string
                description: operator_address defines the address of the validator's
                  operator; bech encoded in JSON.
              consensus_pubkey:
                type: object
                properties:
                  type_url:
                    type: string
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                  value:
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                   Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                   Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := ptypes.MarshalAny(foo)
                       ...
                       foo := &pb.Foo{}
                       if err := ptypes.UnmarshalAny(any, foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".


                  JSON
                  ====
                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
              jailed:
                type: boolean
                description: jailed defined whether the validator has been jailed
                  from bonded status or not.
              status:
                type: string
                description: status is the validator status (bonded/unbonding/unbonded).
                default: BOND_STATUS_UNSPECIFIED
                enum:
                - BOND_STATUS_UNSPECIFIED
                - BOND_STATUS_UNBONDED
                - BOND_STATUS_UNBONDING
                - BOND_STATUS_BONDED
              tokens:
                type: string
                description: tokens define the delegated tokens (incl. self-delegation).
              delegator_shares:
                type: string
                description: delegator_shares defines total shares issued to a validator's
                  delegators.
              description:
                type: object
                properties:
                  moniker:
                    type: string
                    description: moniker defines a human-readable name for the validator.
                  identity:
                    type: string
                    description: identity defines an optional identity signature (ex.
                      UPort or Keybase).
                  website:
                    type: string
                    description: website defines an optional website link.
                  security_contact:
                    type: string
                    description: security_contact defines an optional email for security
                      contact.
                  details:
                    type: string
                    description: details define other optional details.
                description: description defines the description terms for the validator.
              unbonding_height:
                type: string
                description: "unbonding_height defines, if unbonding, the height at\
                  \ which this validator has begun unbonding."
                format: int64
              unbonding_time:
                type: string
                description: "unbonding_time defines, if unbonding, the min time for\
                  \ the validator to complete unbonding."
                format: date-time
              commission:
                type: object
                properties:
                  commission_rates:
                    type: object
                    properties:
                      rate:
                        type: string
                        description: "rate is the commission rate charged to delegators,\
                          \ as a fraction."
                      max_rate:
                        type: string
                        description: "max_rate defines the maximum commission rate\
                          \ which validator can ever charge, as a fraction."
                      max_change_rate:
                        type: string
                        description: "max_change_rate defines the maximum daily increase\
                          \ of the validator commission, as a fraction."
                    description: commission_rates defines the initial commission rates
                      to be used for creating a validator.
                  update_time:
                    type: string
                    description: update_time is the last time the commission rate
                      was changed.
                    format: date-time
                description: commission defines the commission parameters.
              min_self_delegation:
                type: string
                description: |-
                  min_self_delegation is the validator's self declared minimum self delegation.

                  Since: cosmos-sdk 0.46
              unbonding_on_hold_ref_count:
                title: strictly positive if this validator's unbonding has been stopped
                  by external modules
                type: string
                format: int64
              unbonding_ids:
                title: "list of unbonding ids, each uniquely identifing an unbonding\
                  \ of this validator"
                type: array
                items:
                  type: string
                  format: uint64
            description: |-
              Validator defines a validator, together with the total amount of the
              Validator's bond shares and their exchange rate to coins. Slashing results in
              a decrease in the exchange rate, allowing correct calculation of future
              undelegations without iterating over delegators. When coins are delegated to
              this validator, the validator is credited with a delegation whose number of
              bond shares is based on the amount of coins delegated divided by the current
              exchange rate. Voting power can be calculated as total bonded shares
              multiplied by exchange rate.
        pagination:
          type: object
          properties:
            next_key:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
    cosmos.staking.v1beta1.Redelegation:
      type: object
      properties:
        delegator_address:
          type: string
          description: delegator_address is the bech32-encoded address of the delegator.
        validator_src_address:
          type: string
          description: validator_src_address is the validator redelegation source
            operator address.
        validator_dst_address:
          type: string
          description: validator_dst_address is the validator redelegation destination
            operator address.
        entries:
          type: array
          description: entries are the redelegation entries.
          items:
            type: object
            properties:
              creation_height:
                type: string
                description: creation_height  defines the height which the redelegation
                  took place.
                format: int64
              completion_time:
                type: string
                description: completion_time defines the unix time for redelegation
                  completion.
                format: date-time
              initial_balance:
                type: string
                description: initial_balance defines the initial balance when redelegation
                  started.
              shares_dst:
                type: string
                description: shares_dst is the amount of destination-validator shares
                  created by redelegation.
              unbonding_id:
                title: Incrementing id that uniquely identifies this entry
                type: string
                format: uint64
              unbonding_on_hold_ref_count:
                title: Strictly positive if this entry's unbonding has been stopped
                  by external modules
                type: string
                format: int64
            description: RedelegationEntry defines a redelegation object with relevant
              metadata.
      description: |-
        Redelegation contains the list of a particular delegator's redelegating bonds
        from a particular source validator to a particular destination validator.
    cosmos.staking.v1beta1.RedelegationEntry:
      type: object
      properties:
        creation_height:
          type: string
          description: creation_height  defines the height which the redelegation
            took place.
          format: int64
        completion_time:
          type: string
          description: completion_time defines the unix time for redelegation completion.
          format: date-time
        initial_balance:
          type: string
          description: initial_balance defines the initial balance when redelegation
            started.
        shares_dst:
          type: string
          description: shares_dst is the amount of destination-validator shares created
            by redelegation.
        unbonding_id:
          title: Incrementing id that uniquely identifies this entry
          type: string
          format: uint64
        unbonding_on_hold_ref_count:
          title: Strictly positive if this entry's unbonding has been stopped by external
            modules
          type: string
          format: int64
      description: RedelegationEntry defines a redelegation object with relevant metadata.
    cosmos.staking.v1beta1.RedelegationEntryResponse:
      type: object
      properties:
        redelegation_entry:
          type: object
          properties:
            creation_height:
              type: string
              description: creation_height  defines the height which the redelegation
                took place.
              format: int64
            completion_time:
              type: string
              description: completion_time defines the unix time for redelegation
                completion.
              format: date-time
            initial_balance:
              type: string
              description: initial_balance defines the initial balance when redelegation
                started.
            shares_dst:
              type: string
              description: shares_dst is the amount of destination-validator shares
                created by redelegation.
            unbonding_id:
              title: Incrementing id that uniquely identifies this entry
              type: string
              format: uint64
            unbonding_on_hold_ref_count:
              title: Strictly positive if this entry's unbonding has been stopped
                by external modules
              type: string
              format: int64
          description: RedelegationEntry defines a redelegation object with relevant
            metadata.
        balance:
          type: string
      description: |-
        RedelegationEntryResponse is equivalent to a RedelegationEntry except that it
        contains a balance in addition to shares which is more suitable for client
        responses.
    cosmos.staking.v1beta1.RedelegationResponse:
      type: object
      properties:
        redelegation:
          type: object
          properties:
            delegator_address:
              type: string
              description: delegator_address is the bech32-encoded address of the
                delegator.
            validator_src_address:
              type: string
              description: validator_src_address is the validator redelegation source
                operator address.
            validator_dst_address:
              type: string
              description: validator_dst_address is the validator redelegation destination
                operator address.
            entries:
              type: array
              description: entries are the redelegation entries.
              items:
                type: object
                properties:
                  creation_height:
                    type: string
                    description: creation_height  defines the height which the redelegation
                      took place.
                    format: int64
                  completion_time:
                    type: string
                    description: completion_time defines the unix time for redelegation
                      completion.
                    format: date-time
                  initial_balance:
                    type: string
                    description: initial_balance defines the initial balance when
                      redelegation started.
                  shares_dst:
                    type: string
                    description: shares_dst is the amount of destination-validator
                      shares created by redelegation.
                  unbonding_id:
                    title: Incrementing id that uniquely identifies this entry
                    type: string
                    format: uint64
                  unbonding_on_hold_ref_count:
                    title: Strictly positive if this entry's unbonding has been stopped
                      by external modules
                    type: string
                    format: int64
                description: RedelegationEntry defines a redelegation object with
                  relevant metadata.
          description: |-
            Redelegation contains the list of a particular delegator's redelegating bonds
            from a particular source validator to a particular destination validator.
        entries:
          type: array
          items:
            type: object
            properties:
              redelegation_entry:
                type: object
                properties:
                  creation_height:
                    type: string
                    description: creation_height  defines the height which the redelegation
                      took place.
                    format: int64
                  completion_time:
                    type: string
                    description: completion_time defines the unix time for redelegation
                      completion.
                    format: date-time
                  initial_balance:
                    type: string
                    description: initial_balance defines the initial balance when
                      redelegation started.
                  shares_dst:
                    type: string
                    description: shares_dst is the amount of destination-validator
                      shares created by redelegation.
                  unbonding_id:
                    title: Incrementing id that uniquely identifies this entry
                    type: string
                    format: uint64
                  unbonding_on_hold_ref_count:
                    title: Strictly positive if this entry's unbonding has been stopped
                      by external modules
                    type: string
                    format: int64
                description: RedelegationEntry defines a redelegation object with
                  relevant metadata.
              balance:
                type: string
            description: |-
              RedelegationEntryResponse is equivalent to a RedelegationEntry except that it
              contains a balance in addition to shares which is more suitable for client
              responses.
      description: |-
        RedelegationResponse is equivalent to a Redelegation except that its entries
        contain a balance in addition to shares which is more suitable for client
        responses.
    cosmos.staking.v1beta1.UnbondingDelegation:
      type: object
      properties:
        delegator_address:
          type: string
          description: delegator_address is the bech32-encoded address of the delegator.
        validator_address:
          type: string
          description: validator_address is the bech32-encoded address of the validator.
        entries:
          type: array
          description: entries are the unbonding delegation entries.
          items:
            type: object
            properties:
              creation_height:
                type: string
                description: creation_height is the height which the unbonding took
                  place.
                format: int64
              completion_time:
                type: string
                description: completion_time is the unix time for unbonding completion.
                format: date-time
              initial_balance:
                type: string
                description: initial_balance defines the tokens initially scheduled
                  to receive at completion.
              balance:
                type: string
                description: balance defines the tokens to receive at completion.
              unbonding_id:
                title: Incrementing id that uniquely identifies this entry
                type: string
                format: uint64
              unbonding_on_hold_ref_count:
                title: Strictly positive if this entry's unbonding has been stopped
                  by external modules
                type: string
                format: int64
            description: UnbondingDelegationEntry defines an unbonding object with
              relevant metadata.
      description: |-
        UnbondingDelegation stores all of a single delegator's unbonding bonds
        for a single validator in an time-ordered list.
    cosmos.staking.v1beta1.UnbondingDelegationEntry:
      type: object
      properties:
        creation_height:
          type: string
          description: creation_height is the height which the unbonding took place.
          format: int64
        completion_time:
          type: string
          description: completion_time is the unix time for unbonding completion.
          format: date-time
        initial_balance:
          type: string
          description: initial_balance defines the tokens initially scheduled to receive
            at completion.
        balance:
          type: string
          description: balance defines the tokens to receive at completion.
        unbonding_id:
          title: Incrementing id that uniquely identifies this entry
          type: string
          format: uint64
        unbonding_on_hold_ref_count:
          title: Strictly positive if this entry's unbonding has been stopped by external
            modules
          type: string
          format: int64
      description: UnbondingDelegationEntry defines an unbonding object with relevant
        metadata.
    cosmos.staking.v1beta1.Validator:
      type: object
      properties:
        operator_address:
          type: string
          description: operator_address defines the address of the validator's operator;
            bech encoded in JSON.
        consensus_pubkey:
          type: object
          properties:
            type_url:
              type: string
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
            value:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

             Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

             Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := ptypes.MarshalAny(foo)
                 ...
                 foo := &pb.Foo{}
                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".


            JSON
            ====
            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
        jailed:
          type: boolean
          description: jailed defined whether the validator has been jailed from bonded
            status or not.
        status:
          type: string
          description: status is the validator status (bonded/unbonding/unbonded).
          default: BOND_STATUS_UNSPECIFIED
          enum:
          - BOND_STATUS_UNSPECIFIED
          - BOND_STATUS_UNBONDED
          - BOND_STATUS_UNBONDING
          - BOND_STATUS_BONDED
        tokens:
          type: string
          description: tokens define the delegated tokens (incl. self-delegation).
        delegator_shares:
          type: string
          description: delegator_shares defines total shares issued to a validator's
            delegators.
        description:
          type: object
          properties:
            moniker:
              type: string
              description: moniker defines a human-readable name for the validator.
            identity:
              type: string
              description: identity defines an optional identity signature (ex. UPort
                or Keybase).
            website:
              type: string
              description: website defines an optional website link.
            security_contact:
              type: string
              description: security_contact defines an optional email for security
                contact.
            details:
              type: string
              description: details define other optional details.
          description: description defines the description terms for the validator.
        unbonding_height:
          type: string
          description: "unbonding_height defines, if unbonding, the height at which\
            \ this validator has begun unbonding."
          format: int64
        unbonding_time:
          type: string
          description: "unbonding_time defines, if unbonding, the min time for the\
            \ validator to complete unbonding."
          format: date-time
        commission:
          type: object
          properties:
            commission_rates:
              type: object
              properties:
                rate:
                  type: string
                  description: "rate is the commission rate charged to delegators,\
                    \ as a fraction."
                max_rate:
                  type: string
                  description: "max_rate defines the maximum commission rate which\
                    \ validator can ever charge, as a fraction."
                max_change_rate:
                  type: string
                  description: "max_change_rate defines the maximum daily increase\
                    \ of the validator commission, as a fraction."
              description: commission_rates defines the initial commission rates to
                be used for creating a validator.
            update_time:
              type: string
              description: update_time is the last time the commission rate was changed.
              format: date-time
          description: commission defines the commission parameters.
        min_self_delegation:
          type: string
          description: |-
            min_self_delegation is the validator's self declared minimum self delegation.

            Since: cosmos-sdk 0.46
        unbonding_on_hold_ref_count:
          title: strictly positive if this validator's unbonding has been stopped
            by external modules
          type: string
          format: int64
        unbonding_ids:
          title: "list of unbonding ids, each uniquely identifing an unbonding of\
            \ this validator"
          type: array
          items:
            type: string
            format: uint64
      description: |-
        Validator defines a validator, together with the total amount of the
        Validator's bond shares and their exchange rate to coins. Slashing results in
        a decrease in the exchange rate, allowing correct calculation of future
        undelegations without iterating over delegators. When coins are delegated to
        this validator, the validator is credited with a delegation whose number of
        bond shares is based on the amount of coins delegated divided by the current
        exchange rate. Voting power can be calculated as total bonded shares
        multiplied by exchange rate.
    cosmos.base.abci.v1beta1.ABCIMessageLog:
      type: object
      properties:
        msg_index:
          type: integer
          format: int64
        log:
          type: string
        events:
          type: array
          description: |-
            Events contains a slice of Event objects that were emitted during some
            execution.
          items:
            type: object
            properties:
              type:
                type: string
              attributes:
                type: array
                items:
                  type: object
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  description: |-
                    Attribute defines an attribute wrapper where the key and value are
                    strings instead of raw bytes.
            description: |-
              StringEvent defines en Event object wrapper where all the attributes
              contain key/value pairs that are strings instead of raw bytes.
      description: ABCIMessageLog defines a structure containing an indexed tx ABCI
        message log.
    cosmos.base.abci.v1beta1.Attribute:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
      description: |-
        Attribute defines an attribute wrapper where the key and value are
        strings instead of raw bytes.
    cosmos.base.abci.v1beta1.GasInfo:
      type: object
      properties:
        gas_wanted:
          type: string
          description: GasWanted is the maximum units of work we allow this tx to
            perform.
          format: uint64
        gas_used:
          type: string
          description: GasUsed is the amount of gas actually consumed.
          format: uint64
      description: GasInfo defines tx execution gas context.
    cosmos.base.abci.v1beta1.Result:
      type: object
      properties:
        data:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          description: |-
            Data is any data returned from message or handler execution. It MUST be
            length prefixed in order to separate data from multiple message executions.
            Deprecated. This field is still populated, but prefer msg_response instead
            because it also contains the Msg response typeURL.
          format: byte
        log:
          type: string
          description: Log contains the log information from message or handler execution.
        events:
          type: array
          description: |-
            Events contains a slice of Event objects that were emitted during message
            or handler execution.
          items:
            type: object
            properties:
              type:
                type: string
              attributes:
                type: array
                items:
                  type: object
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                    index:
                      type: boolean
                  description: "EventAttribute is a single key-value pair, associated\
                    \ with an event."
            description: |-
              Event allows application developers to attach additional information to
              ResponseBeginBlock, ResponseEndBlock, ResponseCheckTx and ResponseDeliverTx.
              Later, transactions may be queried using these events.
        msg_responses:
          type: array
          description: |-
            msg_responses contains the Msg handler responses type packed in Anys.

            Since: cosmos-sdk 0.46
          items:
            type: object
            properties:
              type_url:
                type: string
                description: |-
                  A URL/resource name that uniquely identifies the type of the serialized
                  protocol buffer message. This string must contain at least
                  one "/" character. The last segment of the URL's path must represent
                  the fully qualified name of the type (as in
                  `path/google.protobuf.Duration`). The name should be in a canonical form
                  (e.g., leading "." is not accepted).

                  In practice, teams usually precompile into the binary all types that they
                  expect it to use in the context of Any. However, for URLs which use the
                  scheme `http`, `https`, or no scheme, one can optionally set up a type
                  server that maps type URLs to message definitions as follows:

                  * If no scheme is provided, `https` is assumed.
                  * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                    value in binary format, or produce an error.
                  * Applications are allowed to cache lookup results based on the
                    URL, or have them precompiled into a binary to avoid any
                    lookup. Therefore, binary compatibility needs to be preserved
                    on changes to types. (Use versioned type names to manage
                    breaking changes.)

                  Note: this functionality is not currently available in the official
                  protobuf release, and it is not used for type URLs beginning with
                  type.googleapis.com.

                  Schemes other than `http`, `https` (or the empty scheme) might be
                  used with implementation specific semantics.
              value:
                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                type: string
                description: Must be a valid serialized protocol buffer of the above
                  specified type.
                format: byte
            description: |-
              `Any` contains an arbitrary serialized protocol buffer message along with a
              URL that describes the type of the serialized message.

              Protobuf library provides support to pack/unpack Any values in the form
              of utility functions or additional generated methods of the Any type.

              Example 1: Pack and unpack a message in C++.

                  Foo foo = ...;
                  Any any;
                  any.PackFrom(foo);
                  ...
                  if (any.UnpackTo(&foo)) {
                    ...
                  }

              Example 2: Pack and unpack a message in Java.

                  Foo foo = ...;
                  Any any = Any.pack(foo);
                  ...
                  if (any.is(Foo.class)) {
                    foo = any.unpack(Foo.class);
                  }

               Example 3: Pack and unpack a message in Python.

                  foo = Foo(...)
                  any = Any()
                  any.Pack(foo)
                  ...
                  if any.Is(Foo.DESCRIPTOR):
                    any.Unpack(foo)
                    ...

               Example 4: Pack and unpack a message in Go

                   foo := &pb.Foo{...}
                   any, err := ptypes.MarshalAny(foo)
                   ...
                   foo := &pb.Foo{}
                   if err := ptypes.UnmarshalAny(any, foo); err != nil {
                     ...
                   }

              The pack methods provided by protobuf library will by default use
              'type.googleapis.com/full.type.name' as the type URL and the unpack
              methods only use the fully qualified type name after the last '/'
              in the type URL, for example "foo.bar.com/x/y.z" will yield type
              name "y.z".


              JSON
              ====
              The JSON representation of an `Any` value uses the regular
              representation of the deserialized, embedded message, with an
              additional field `@type` which contains the type URL. Example:

                  package google.profile;
                  message Person {
                    string first_name = 1;
                    string last_name = 2;
                  }

                  {
                    "@type": "type.googleapis.com/google.profile.Person",
                    "firstName": <string>,
                    "lastName": <string>
                  }

              If the embedded message type is well-known and has a custom JSON
              representation, that representation will be embedded adding a field
              `value` which holds the custom JSON in addition to the `@type`
              field. Example (for message [google.protobuf.Duration][]):

                  {
                    "@type": "type.googleapis.com/google.protobuf.Duration",
                    "value": "1.212s"
                  }
      description: Result is the union of ResponseFormat and ResponseCheckTx.
    cosmos.base.abci.v1beta1.StringEvent:
      type: object
      properties:
        type:
          type: string
        attributes:
          type: array
          items:
            type: object
            properties:
              key:
                type: string
              value:
                type: string
            description: |-
              Attribute defines an attribute wrapper where the key and value are
              strings instead of raw bytes.
      description: |-
        StringEvent defines en Event object wrapper where all the attributes
        contain key/value pairs that are strings instead of raw bytes.
    cosmos.base.abci.v1beta1.TxResponse:
      type: object
      properties:
        height:
          title: The block height
          type: string
          format: int64
        txhash:
          type: string
          description: The transaction hash.
        codespace:
          title: Namespace for the Code
          type: string
        code:
          type: integer
          description: Response code.
          format: int64
        data:
          type: string
          description: "Result bytes, if any."
        raw_log:
          type: string
          description: |-
            The output of the application's logger (raw string). May be
            non-deterministic.
        logs:
          type: array
          description: The output of the application's logger (typed). May be non-deterministic.
          items:
            type: object
            properties:
              msg_index:
                type: integer
                format: int64
              log:
                type: string
              events:
                type: array
                description: |-
                  Events contains a slice of Event objects that were emitted during some
                  execution.
                items:
                  type: object
                  properties:
                    type:
                      type: string
                    attributes:
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            type: string
                          value:
                            type: string
                        description: |-
                          Attribute defines an attribute wrapper where the key and value are
                          strings instead of raw bytes.
                  description: |-
                    StringEvent defines en Event object wrapper where all the attributes
                    contain key/value pairs that are strings instead of raw bytes.
            description: ABCIMessageLog defines a structure containing an indexed
              tx ABCI message log.
        info:
          type: string
          description: Additional information. May be non-deterministic.
        gas_wanted:
          type: string
          description: Amount of gas requested for transaction.
          format: int64
        gas_used:
          type: string
          description: Amount of gas consumed by transaction.
          format: int64
        tx:
          type: object
          properties:
            type_url:
              type: string
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
            value:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

             Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

             Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := ptypes.MarshalAny(foo)
                 ...
                 foo := &pb.Foo{}
                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".


            JSON
            ====
            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
        timestamp:
          type: string
          description: |-
            Time of the previous block. For heights > 1, it's the weighted median of
            the timestamps of the valid votes in the block.LastCommit. For height == 1,
            it's genesis time.
        events:
          type: array
          description: |-
            Events defines all the events emitted by processing a transaction. Note,
            these events include those emitted by processing all the messages and those
            emitted from the ante. Whereas Logs contains the events, with
            additional metadata, emitted only by processing the messages.

            Since: cosmos-sdk 0.42.11, 0.44.5, 0.45
          items:
            type: object
            properties:
              type:
                type: string
              attributes:
                type: array
                items:
                  type: object
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                    index:
                      type: boolean
                  description: "EventAttribute is a single key-value pair, associated\
                    \ with an event."
            description: |-
              Event allows application developers to attach additional information to
              ResponseBeginBlock, ResponseEndBlock, ResponseCheckTx and ResponseDeliverTx.
              Later, transactions may be queried using these events.
      description: |-
        TxResponse defines a structure containing relevant tx data and metadata. The
        tags are stringified and the log is JSON decoded.
    cosmos.crypto.multisig.v1beta1.CompactBitArray:
      type: object
      properties:
        extra_bits_stored:
          type: integer
          format: int64
        elems:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
      description: |-
        CompactBitArray is an implementation of a space efficient bit array.
        This is used to ensure that the encoded data takes up a minimal amount of
        space after proto encoding.
        This is not thread safe, and is not intended for concurrent usage.
    cosmos.tx.signing.v1beta1.SignMode:
      type: string
      description: |-
        SignMode represents a signing mode with its own security guarantees.

        This enum should be considered a registry of all known sign modes
        in the Cosmos ecosystem. Apps are not expected to support all known
        sign modes. Apps that would like to support custom  sign modes are
        encouraged to open a small PR against this file to add a new case
        to this SignMode enum describing their sign mode so that different
        apps have a consistent version of this enum.

         - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be
        rejected.
         - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is
        verified with raw bytes from Tx.
         - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode that will verify some
        human-readable textual representation on top of the binary representation
        from SIGN_MODE_DIRECT. It is currently not supported.
         - SIGN_MODE_DIRECT_AUX: SIGN_MODE_DIRECT_AUX specifies a signing mode which uses
        SignDocDirectAux. As opposed to SIGN_MODE_DIRECT, this sign mode does not
        require signers signing over other signers' `signer_info`. It also allows
        for adding Tips in transactions.

        Since: cosmos-sdk 0.46
         - SIGN_MODE_LEGACY_AMINO_JSON: SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses
        Amino JSON and will be removed in the future.
         - SIGN_MODE_EIP_191: SIGN_MODE_EIP_191 specifies the sign mode for EIP 191 signing on the Cosmos
        SDK. Ref: https://eips.ethereum.org/EIPS/eip-191

        Currently, SIGN_MODE_EIP_191 is registered as a SignMode enum variant,
        but is not implemented on the SDK by default. To enable EIP-191, you need
        to pass a custom `TxConfig` that has an implementation of
        `SignModeHandler` for EIP-191. The SDK may decide to fully support
        EIP-191 in the future.

        Since: cosmos-sdk 0.45.2
      default: SIGN_MODE_UNSPECIFIED
      enum:
      - SIGN_MODE_UNSPECIFIED
      - SIGN_MODE_DIRECT
      - SIGN_MODE_TEXTUAL
      - SIGN_MODE_DIRECT_AUX
      - SIGN_MODE_LEGACY_AMINO_JSON
      - SIGN_MODE_EIP_191
    cosmos.tx.v1beta1.AuthInfo:
      type: object
      properties:
        signer_infos:
          type: array
          description: |-
            signer_infos defines the signing modes for the required signers. The number
            and order of elements must match the required signers from TxBody's
            messages. The first element is the primary signer and the one which pays
            the fee.
          items:
            $ref: '#/components/schemas/cosmos.tx.v1beta1.SignerInfo'
        fee:
          type: object
          properties:
            amount:
              title: amount is the amount of coins to be paid as a fee
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
            gas_limit:
              title: |-
                gas_limit is the maximum gas that can be used in transaction processing
                before an out of gas error occurs
              type: string
              format: uint64
            payer:
              type: string
              description: |-
                if unset, the first signer is responsible for paying the fees. If set, the specified account must pay the fees.
                the payer must be a tx signer (and thus have signed this field in AuthInfo).
                setting this field does *not* change the ordering of required signers for the transaction.
            granter:
              title: |-
                if set, the fee payer (either the first signer or the value of the payer field) requests that a fee grant be used
                to pay fees instead of the fee payer's own balance. If an appropriate fee grant does not exist or the chain does
                not support fee grants, this will fail
              type: string
          description: |-
            Fee is the fee and gas limit for the transaction. The first signer is the
            primary signer and the one which pays the fee. The fee can be calculated
            based on the cost of evaluating the body and doing signature verification
            of the signers. This can be estimated via simulation.
        tip:
          type: object
          properties:
            amount:
              title: amount is the amount of the tip
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
            tipper:
              title: tipper is the address of the account paying for the tip
              type: string
          description: |-
            Tip is the optional tip used for transactions fees paid in another denom.

            This field is ignored if the chain didn't enable tips, i.e. didn't add the
            `TipDecorator` in its posthandler.

            Since: cosmos-sdk 0.46
      description: |-
        AuthInfo describes the fee and signer modes that are used to sign a
        transaction.
    cosmos.tx.v1beta1.BroadcastMode:
      type: string
      description: |-
        BroadcastMode specifies the broadcast mode for the TxService.Broadcast RPC method.

         - BROADCAST_MODE_UNSPECIFIED: zero-value for mode ordering
         - BROADCAST_MODE_BLOCK: DEPRECATED: use BROADCAST_MODE_SYNC instead,
        BROADCAST_MODE_BLOCK is not supported by the SDK from v0.47.x onwards.
         - BROADCAST_MODE_SYNC: BROADCAST_MODE_SYNC defines a tx broadcasting mode where the client waits for
        a CheckTx execution response only.
         - BROADCAST_MODE_ASYNC: BROADCAST_MODE_ASYNC defines a tx broadcasting mode where the client returns
        immediately.
      default: BROADCAST_MODE_UNSPECIFIED
      enum:
      - BROADCAST_MODE_UNSPECIFIED
      - BROADCAST_MODE_BLOCK
      - BROADCAST_MODE_SYNC
      - BROADCAST_MODE_ASYNC
    cosmos.tx.v1beta1.BroadcastTxRequest:
      type: object
      properties:
        tx_bytes:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          description: tx_bytes is the raw transaction.
          format: byte
        mode:
          type: string
          description: |-
            BroadcastMode specifies the broadcast mode for the TxService.Broadcast RPC method.

             - BROADCAST_MODE_UNSPECIFIED: zero-value for mode ordering
             - BROADCAST_MODE_BLOCK: DEPRECATED: use BROADCAST_MODE_SYNC instead,
            BROADCAST_MODE_BLOCK is not supported by the SDK from v0.47.x onwards.
             - BROADCAST_MODE_SYNC: BROADCAST_MODE_SYNC defines a tx broadcasting mode where the client waits for
            a CheckTx execution response only.
             - BROADCAST_MODE_ASYNC: BROADCAST_MODE_ASYNC defines a tx broadcasting mode where the client returns
            immediately.
          default: BROADCAST_MODE_UNSPECIFIED
          enum:
          - BROADCAST_MODE_UNSPECIFIED
          - BROADCAST_MODE_BLOCK
          - BROADCAST_MODE_SYNC
          - BROADCAST_MODE_ASYNC
      description: |-
        BroadcastTxRequest is the request type for the Service.BroadcastTxRequest
        RPC method.
    cosmos.tx.v1beta1.BroadcastTxResponse:
      type: object
      properties:
        tx_response:
          type: object
          properties:
            height:
              title: The block height
              type: string
              format: int64
            txhash:
              type: string
              description: The transaction hash.
            codespace:
              title: Namespace for the Code
              type: string
            code:
              type: integer
              description: Response code.
              format: int64
            data:
              type: string
              description: "Result bytes, if any."
            raw_log:
              type: string
              description: |-
                The output of the application's logger (raw string). May be
                non-deterministic.
            logs:
              type: array
              description: The output of the application's logger (typed). May be
                non-deterministic.
              items:
                type: object
                properties:
                  msg_index:
                    type: integer
                    format: int64
                  log:
                    type: string
                  events:
                    type: array
                    description: |-
                      Events contains a slice of Event objects that were emitted during some
                      execution.
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                        attributes:
                          type: array
                          items:
                            type: object
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            description: |-
                              Attribute defines an attribute wrapper where the key and value are
                              strings instead of raw bytes.
                      description: |-
                        StringEvent defines en Event object wrapper where all the attributes
                        contain key/value pairs that are strings instead of raw bytes.
                description: ABCIMessageLog defines a structure containing an indexed
                  tx ABCI message log.
            info:
              type: string
              description: Additional information. May be non-deterministic.
            gas_wanted:
              type: string
              description: Amount of gas requested for transaction.
              format: int64
            gas_used:
              type: string
              description: Amount of gas consumed by transaction.
              format: int64
            tx:
              type: object
              properties:
                type_url:
                  type: string
                  description: |-
                    A URL/resource name that uniquely identifies the type of the serialized
                    protocol buffer message. This string must contain at least
                    one "/" character. The last segment of the URL's path must represent
                    the fully qualified name of the type (as in
                    `path/google.protobuf.Duration`). The name should be in a canonical form
                    (e.g., leading "." is not accepted).

                    In practice, teams usually precompile into the binary all types that they
                    expect it to use in the context of Any. However, for URLs which use the
                    scheme `http`, `https`, or no scheme, one can optionally set up a type
                    server that maps type URLs to message definitions as follows:

                    * If no scheme is provided, `https` is assumed.
                    * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the official
                    protobuf release, and it is not used for type URLs beginning with
                    type.googleapis.com.

                    Schemes other than `http`, `https` (or the empty scheme) might be
                    used with implementation specific semantics.
                value:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
              description: |-
                `Any` contains an arbitrary serialized protocol buffer message along with a
                URL that describes the type of the serialized message.

                Protobuf library provides support to pack/unpack Any values in the form
                of utility functions or additional generated methods of the Any type.

                Example 1: Pack and unpack a message in C++.

                    Foo foo = ...;
                    Any any;
                    any.PackFrom(foo);
                    ...
                    if (any.UnpackTo(&foo)) {
                      ...
                    }

                Example 2: Pack and unpack a message in Java.

                    Foo foo = ...;
                    Any any = Any.pack(foo);
                    ...
                    if (any.is(Foo.class)) {
                      foo = any.unpack(Foo.class);
                    }

                 Example 3: Pack and unpack a message in Python.

                    foo = Foo(...)
                    any = Any()
                    any.Pack(foo)
                    ...
                    if any.Is(Foo.DESCRIPTOR):
                      any.Unpack(foo)
                      ...

                 Example 4: Pack and unpack a message in Go

                     foo := &pb.Foo{...}
                     any, err := ptypes.MarshalAny(foo)
                     ...
                     foo := &pb.Foo{}
                     if err := ptypes.UnmarshalAny(any, foo); err != nil {
                       ...
                     }

                The pack methods provided by protobuf library will by default use
                'type.googleapis.com/full.type.name' as the type URL and the unpack
                methods only use the fully qualified type name after the last '/'
                in the type URL, for example "foo.bar.com/x/y.z" will yield type
                name "y.z".


                JSON
                ====
                The JSON representation of an `Any` value uses the regular
                representation of the deserialized, embedded message, with an
                additional field `@type` which contains the type URL. Example:

                    package google.profile;
                    message Person {
                      string first_name = 1;
                      string last_name = 2;
                    }

                    {
                      "@type": "type.googleapis.com/google.profile.Person",
                      "firstName": <string>,
                      "lastName": <string>
                    }

                If the embedded message type is well-known and has a custom JSON
                representation, that representation will be embedded adding a field
                `value` which holds the custom JSON in addition to the `@type`
                field. Example (for message [google.protobuf.Duration][]):

                    {
                      "@type": "type.googleapis.com/google.protobuf.Duration",
                      "value": "1.212s"
                    }
            timestamp:
              type: string
              description: |-
                Time of the previous block. For heights > 1, it's the weighted median of
                the timestamps of the valid votes in the block.LastCommit. For height == 1,
                it's genesis time.
            events:
              type: array
              description: |-
                Events defines all the events emitted by processing a transaction. Note,
                these events include those emitted by processing all the messages and those
                emitted from the ante. Whereas Logs contains the events, with
                additional metadata, emitted only by processing the messages.

                Since: cosmos-sdk 0.42.11, 0.44.5, 0.45
              items:
                type: object
                properties:
                  type:
                    type: string
                  attributes:
                    type: array
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                        value:
                          type: string
                        index:
                          type: boolean
                      description: "EventAttribute is a single key-value pair, associated\
                        \ with an event."
                description: |-
                  Event allows application developers to attach additional information to
                  ResponseBeginBlock, ResponseEndBlock, ResponseCheckTx and ResponseDeliverTx.
                  Later, transactions may be queried using these events.
          description: |-
            TxResponse defines a structure containing relevant tx data and metadata. The
            tags are stringified and the log is JSON decoded.
      description: |-
        BroadcastTxResponse is the response type for the
        Service.BroadcastTx method.
    cosmos.tx.v1beta1.Fee:
      type: object
      properties:
        amount:
          title: amount is the amount of coins to be paid as a fee
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
        gas_limit:
          title: |-
            gas_limit is the maximum gas that can be used in transaction processing
            before an out of gas error occurs
          type: string
          format: uint64
        payer:
          type: string
          description: |-
            if unset, the first signer is responsible for paying the fees. If set, the specified account must pay the fees.
            the payer must be a tx signer (and thus have signed this field in AuthInfo).
            setting this field does *not* change the ordering of required signers for the transaction.
        granter:
          title: |-
            if set, the fee payer (either the first signer or the value of the payer field) requests that a fee grant be used
            to pay fees instead of the fee payer's own balance. If an appropriate fee grant does not exist or the chain does
            not support fee grants, this will fail
          type: string
      description: |-
        Fee includes the amount of coins paid in fees and the maximum
        gas to be used by the transaction. The ratio yields an effective "gasprice",
        which must be above some miminum to be accepted into the mempool.
    cosmos.tx.v1beta1.GetBlockWithTxsResponse:
      type: object
      properties:
        txs:
          type: array
          description: txs are the transactions in the block.
          items:
            $ref: '#/components/schemas/cosmos.tx.v1beta1.Tx'
        block_id:
          title: BlockID
          type: object
          properties:
            hash:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
            part_set_header:
              title: PartsetHeader
              type: object
              properties:
                total:
                  type: integer
                  format: int64
                hash:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
        block:
          type: object
          properties:
            header:
              type: object
              properties:
                version:
                  title: basic block info
                  type: object
                  properties:
                    block:
                      type: string
                      format: uint64
                    app:
                      type: string
                      format: uint64
                  description: |-
                    Consensus captures the consensus rules for processing a block in the blockchain,
                    including all blockchain data structures and the rules of the application's
                    state transition machine.
                chain_id:
                  type: string
                height:
                  type: string
                  format: int64
                time:
                  type: string
                  format: date-time
                last_block_id:
                  title: BlockID
                  type: object
                  properties:
                    hash:
                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                      type: string
                      format: byte
                    part_set_header:
                      title: PartsetHeader
                      type: object
                      properties:
                        total:
                          type: integer
                          format: int64
                        hash:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
                last_commit_hash:
                  title: hashes of block data
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                data_hash:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                validators_hash:
                  title: hashes from the app output from the prev block
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                next_validators_hash:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                consensus_hash:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                app_hash:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                last_results_hash:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                evidence_hash:
                  title: consensus info
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                proposer_address:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
              description: Header defines the structure of a block header.
            data:
              title: Data contains the set of transactions included in the block
              type: object
              properties:
                txs:
                  type: array
                  description: |-
                    Txs that will be applied by state @ block.Height+1.
                    NOTE: not all txs here are valid.  We're just agreeing on the order first.
                    This means that block.AppHash does not include these txs.
                  items:
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    format: byte
            evidence:
              type: object
              properties:
                evidence:
                  type: array
                  items:
                    type: object
                    properties:
                      duplicate_vote_evidence:
                        type: object
                        properties:
                          vote_a:
                            type: object
                            properties:
                              type:
                                type: string
                                description: |-
                                  SignedMsgType is a type of signed message in the consensus.

                                   - SIGNED_MSG_TYPE_PREVOTE: Votes
                                   - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                default: SIGNED_MSG_TYPE_UNKNOWN
                                enum:
                                - SIGNED_MSG_TYPE_UNKNOWN
                                - SIGNED_MSG_TYPE_PREVOTE
                                - SIGNED_MSG_TYPE_PRECOMMIT
                                - SIGNED_MSG_TYPE_PROPOSAL
                              height:
                                type: string
                                format: int64
                              round:
                                type: integer
                                format: int32
                              block_id:
                                title: BlockID
                                type: object
                                properties:
                                  hash:
                                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                    type: string
                                    format: byte
                                  part_set_header:
                                    title: PartsetHeader
                                    type: object
                                    properties:
                                      total:
                                        type: integer
                                        format: int64
                                      hash:
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                              timestamp:
                                type: string
                                format: date-time
                              validator_address:
                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                type: string
                                format: byte
                              validator_index:
                                type: integer
                                format: int32
                              signature:
                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                type: string
                                format: byte
                            description: |-
                              Vote represents a prevote, precommit, or commit vote from validators for
                              consensus.
                          vote_b:
                            type: object
                            properties:
                              type:
                                type: string
                                description: |-
                                  SignedMsgType is a type of signed message in the consensus.

                                   - SIGNED_MSG_TYPE_PREVOTE: Votes
                                   - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                default: SIGNED_MSG_TYPE_UNKNOWN
                                enum:
                                - SIGNED_MSG_TYPE_UNKNOWN
                                - SIGNED_MSG_TYPE_PREVOTE
                                - SIGNED_MSG_TYPE_PRECOMMIT
                                - SIGNED_MSG_TYPE_PROPOSAL
                              height:
                                type: string
                                format: int64
                              round:
                                type: integer
                                format: int32
                              block_id:
                                title: BlockID
                                type: object
                                properties:
                                  hash:
                                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                    type: string
                                    format: byte
                                  part_set_header:
                                    title: PartsetHeader
                                    type: object
                                    properties:
                                      total:
                                        type: integer
                                        format: int64
                                      hash:
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                              timestamp:
                                type: string
                                format: date-time
                              validator_address:
                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                type: string
                                format: byte
                              validator_index:
                                type: integer
                                format: int32
                              signature:
                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                type: string
                                format: byte
                            description: |-
                              Vote represents a prevote, precommit, or commit vote from validators for
                              consensus.
                          total_voting_power:
                            type: string
                            format: int64
                          validator_power:
                            type: string
                            format: int64
                          timestamp:
                            type: string
                            format: date-time
                        description: DuplicateVoteEvidence contains evidence of a
                          validator signed two conflicting votes.
                      light_client_attack_evidence:
                        type: object
                        properties:
                          conflicting_block:
                            type: object
                            properties:
                              signed_header:
                                type: object
                                properties:
                                  header:
                                    type: object
                                    properties:
                                      version:
                                        title: basic block info
                                        type: object
                                        properties:
                                          block:
                                            type: string
                                            format: uint64
                                          app:
                                            type: string
                                            format: uint64
                                        description: |-
                                          Consensus captures the consensus rules for processing a block in the blockchain,
                                          including all blockchain data structures and the rules of the application's
                                          state transition machine.
                                      chain_id:
                                        type: string
                                      height:
                                        type: string
                                        format: int64
                                      time:
                                        type: string
                                        format: date-time
                                      last_block_id:
                                        title: BlockID
                                        type: object
                                        properties:
                                          hash:
                                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                            type: string
                                            format: byte
                                          part_set_header:
                                            title: PartsetHeader
                                            type: object
                                            properties:
                                              total:
                                                type: integer
                                                format: int64
                                              hash:
                                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                type: string
                                                format: byte
                                      last_commit_hash:
                                        title: hashes of block data
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                                      data_hash:
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                                      validators_hash:
                                        title: hashes from the app output from the
                                          prev block
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                                      next_validators_hash:
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                                      consensus_hash:
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                                      app_hash:
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                                      last_results_hash:
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                                      evidence_hash:
                                        title: consensus info
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                                      proposer_address:
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                                    description: Header defines the structure of a
                                      block header.
                                  commit:
                                    type: object
                                    properties:
                                      height:
                                        type: string
                                        format: int64
                                      round:
                                        type: integer
                                        format: int32
                                      block_id:
                                        title: BlockID
                                        type: object
                                        properties:
                                          hash:
                                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                            type: string
                                            format: byte
                                          part_set_header:
                                            title: PartsetHeader
                                            type: object
                                            properties:
                                              total:
                                                type: integer
                                                format: int64
                                              hash:
                                                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                                type: string
                                                format: byte
                                      signatures:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            block_id_flag:
                                              title: BlockIdFlag indicates which BlcokID
                                                the signature is for
                                              type: string
                                              default: BLOCK_ID_FLAG_UNKNOWN
                                              enum:
                                              - BLOCK_ID_FLAG_UNKNOWN
                                              - BLOCK_ID_FLAG_ABSENT
                                              - BLOCK_ID_FLAG_COMMIT
                                              - BLOCK_ID_FLAG_NIL
                                            validator_address:
                                              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                              type: string
                                              format: byte
                                            timestamp:
                                              type: string
                                              format: date-time
                                            signature:
                                              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                              type: string
                                              format: byte
                                          description: CommitSig is a part of the
                                            Vote included in a Commit.
                                    description: Commit contains the evidence that
                                      a block was committed by a set of validators.
                              validator_set:
                                type: object
                                properties:
                                  validators:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        address:
                                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                          type: string
                                          format: byte
                                        pub_key:
                                          title: PublicKey defines the keys available
                                            for use with Validators
                                          type: object
                                          properties:
                                            ed25519:
                                              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                              type: string
                                              format: byte
                                            secp256k1:
                                              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                              type: string
                                              format: byte
                                        voting_power:
                                          type: string
                                          format: int64
                                        proposer_priority:
                                          type: string
                                          format: int64
                                  proposer:
                                    type: object
                                    properties:
                                      address:
                                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                        type: string
                                        format: byte
                                      pub_key:
                                        title: PublicKey defines the keys available
                                          for use with Validators
                                        type: object
                                        properties:
                                          ed25519:
                                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                            type: string
                                            format: byte
                                          secp256k1:
                                            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                            type: string
                                            format: byte
                                      voting_power:
                                        type: string
                                        format: int64
                                      proposer_priority:
                                        type: string
                                        format: int64
                                  total_voting_power:
                                    type: string
                                    format: int64
                          common_height:
                            type: string
                            format: int64
                          byzantine_validators:
                            type: array
                            items:
                              type: object
                              properties:
                                address:
                                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                  type: string
                                  format: byte
                                pub_key:
                                  title: PublicKey defines the keys available for
                                    use with Validators
                                  type: object
                                  properties:
                                    ed25519:
                                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                      type: string
                                      format: byte
                                    secp256k1:
                                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                      type: string
                                      format: byte
                                voting_power:
                                  type: string
                                  format: int64
                                proposer_priority:
                                  type: string
                                  format: int64
                          total_voting_power:
                            type: string
                            format: int64
                          timestamp:
                            type: string
                            format: date-time
                        description: LightClientAttackEvidence contains evidence of
                          a set of validators attempting to mislead a light client.
            last_commit:
              type: object
              properties:
                height:
                  type: string
                  format: int64
                round:
                  type: integer
                  format: int32
                block_id:
                  title: BlockID
                  type: object
                  properties:
                    hash:
                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                      type: string
                      format: byte
                    part_set_header:
                      title: PartsetHeader
                      type: object
                      properties:
                        total:
                          type: integer
                          format: int64
                        hash:
                          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                          type: string
                          format: byte
                signatures:
                  type: array
                  items:
                    type: object
                    properties:
                      block_id_flag:
                        title: BlockIdFlag indicates which BlcokID the signature is
                          for
                        type: string
                        default: BLOCK_ID_FLAG_UNKNOWN
                        enum:
                        - BLOCK_ID_FLAG_UNKNOWN
                        - BLOCK_ID_FLAG_ABSENT
                        - BLOCK_ID_FLAG_COMMIT
                        - BLOCK_ID_FLAG_NIL
                      validator_address:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        format: byte
                      timestamp:
                        type: string
                        format: date-time
                      signature:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        format: byte
                    description: CommitSig is a part of the Vote included in a Commit.
              description: Commit contains the evidence that a block was committed
                by a set of validators.
        pagination:
          type: object
          properties:
            next_key:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines a pagination for the response.
      description: |-
        GetBlockWithTxsResponse is the response type for the Service.GetBlockWithTxs method.

        Since: cosmos-sdk 0.45.2
    cosmos.tx.v1beta1.GetTxResponse:
      type: object
      properties:
        tx:
          $ref: '#/components/schemas/cosmos.tx.v1beta1.Tx'
        tx_response:
          type: object
          properties:
            height:
              title: The block height
              type: string
              format: int64
            txhash:
              type: string
              description: The transaction hash.
            codespace:
              title: Namespace for the Code
              type: string
            code:
              type: integer
              description: Response code.
              format: int64
            data:
              type: string
              description: "Result bytes, if any."
            raw_log:
              type: string
              description: |-
                The output of the application's logger (raw string). May be
                non-deterministic.
            logs:
              type: array
              description: The output of the application's logger (typed). May be
                non-deterministic.
              items:
                type: object
                properties:
                  msg_index:
                    type: integer
                    format: int64
                  log:
                    type: string
                  events:
                    type: array
                    description: |-
                      Events contains a slice of Event objects that were emitted during some
                      execution.
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                        attributes:
                          type: array
                          items:
                            type: object
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            description: |-
                              Attribute defines an attribute wrapper where the key and value are
                              strings instead of raw bytes.
                      description: |-
                        StringEvent defines en Event object wrapper where all the attributes
                        contain key/value pairs that are strings instead of raw bytes.
                description: ABCIMessageLog defines a structure containing an indexed
                  tx ABCI message log.
            info:
              type: string
              description: Additional information. May be non-deterministic.
            gas_wanted:
              type: string
              description: Amount of gas requested for transaction.
              format: int64
            gas_used:
              type: string
              description: Amount of gas consumed by transaction.
              format: int64
            tx:
              type: object
              properties:
                type_url:
                  type: string
                  description: |-
                    A URL/resource name that uniquely identifies the type of the serialized
                    protocol buffer message. This string must contain at least
                    one "/" character. The last segment of the URL's path must represent
                    the fully qualified name of the type (as in
                    `path/google.protobuf.Duration`). The name should be in a canonical form
                    (e.g., leading "." is not accepted).

                    In practice, teams usually precompile into the binary all types that they
                    expect it to use in the context of Any. However, for URLs which use the
                    scheme `http`, `https`, or no scheme, one can optionally set up a type
                    server that maps type URLs to message definitions as follows:

                    * If no scheme is provided, `https` is assumed.
                    * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the official
                    protobuf release, and it is not used for type URLs beginning with
                    type.googleapis.com.

                    Schemes other than `http`, `https` (or the empty scheme) might be
                    used with implementation specific semantics.
                value:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
              description: |-
                `Any` contains an arbitrary serialized protocol buffer message along with a
                URL that describes the type of the serialized message.

                Protobuf library provides support to pack/unpack Any values in the form
                of utility functions or additional generated methods of the Any type.

                Example 1: Pack and unpack a message in C++.

                    Foo foo = ...;
                    Any any;
                    any.PackFrom(foo);
                    ...
                    if (any.UnpackTo(&foo)) {
                      ...
                    }

                Example 2: Pack and unpack a message in Java.

                    Foo foo = ...;
                    Any any = Any.pack(foo);
                    ...
                    if (any.is(Foo.class)) {
                      foo = any.unpack(Foo.class);
                    }

                 Example 3: Pack and unpack a message in Python.

                    foo = Foo(...)
                    any = Any()
                    any.Pack(foo)
                    ...
                    if any.Is(Foo.DESCRIPTOR):
                      any.Unpack(foo)
                      ...

                 Example 4: Pack and unpack a message in Go

                     foo := &pb.Foo{...}
                     any, err := ptypes.MarshalAny(foo)
                     ...
                     foo := &pb.Foo{}
                     if err := ptypes.UnmarshalAny(any, foo); err != nil {
                       ...
                     }

                The pack methods provided by protobuf library will by default use
                'type.googleapis.com/full.type.name' as the type URL and the unpack
                methods only use the fully qualified type name after the last '/'
                in the type URL, for example "foo.bar.com/x/y.z" will yield type
                name "y.z".


                JSON
                ====
                The JSON representation of an `Any` value uses the regular
                representation of the deserialized, embedded message, with an
                additional field `@type` which contains the type URL. Example:

                    package google.profile;
                    message Person {
                      string first_name = 1;
                      string last_name = 2;
                    }

                    {
                      "@type": "type.googleapis.com/google.profile.Person",
                      "firstName": <string>,
                      "lastName": <string>
                    }

                If the embedded message type is well-known and has a custom JSON
                representation, that representation will be embedded adding a field
                `value` which holds the custom JSON in addition to the `@type`
                field. Example (for message [google.protobuf.Duration][]):

                    {
                      "@type": "type.googleapis.com/google.protobuf.Duration",
                      "value": "1.212s"
                    }
            timestamp:
              type: string
              description: |-
                Time of the previous block. For heights > 1, it's the weighted median of
                the timestamps of the valid votes in the block.LastCommit. For height == 1,
                it's genesis time.
            events:
              type: array
              description: |-
                Events defines all the events emitted by processing a transaction. Note,
                these events include those emitted by processing all the messages and those
                emitted from the ante. Whereas Logs contains the events, with
                additional metadata, emitted only by processing the messages.

                Since: cosmos-sdk 0.42.11, 0.44.5, 0.45
              items:
                type: object
                properties:
                  type:
                    type: string
                  attributes:
                    type: array
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                        value:
                          type: string
                        index:
                          type: boolean
                      description: "EventAttribute is a single key-value pair, associated\
                        \ with an event."
                description: |-
                  Event allows application developers to attach additional information to
                  ResponseBeginBlock, ResponseEndBlock, ResponseCheckTx and ResponseDeliverTx.
                  Later, transactions may be queried using these events.
          description: |-
            TxResponse defines a structure containing relevant tx data and metadata. The
            tags are stringified and the log is JSON decoded.
      description: GetTxResponse is the response type for the Service.GetTx method.
    cosmos.tx.v1beta1.GetTxsEventResponse:
      type: object
      properties:
        txs:
          type: array
          description: txs is the list of queried transactions.
          items:
            $ref: '#/components/schemas/cosmos.tx.v1beta1.Tx'
        tx_responses:
          type: array
          description: tx_responses is the list of queried TxResponses.
          items:
            type: object
            properties:
              height:
                title: The block height
                type: string
                format: int64
              txhash:
                type: string
                description: The transaction hash.
              codespace:
                title: Namespace for the Code
                type: string
              code:
                type: integer
                description: Response code.
                format: int64
              data:
                type: string
                description: "Result bytes, if any."
              raw_log:
                type: string
                description: |-
                  The output of the application's logger (raw string). May be
                  non-deterministic.
              logs:
                type: array
                description: The output of the application's logger (typed). May be
                  non-deterministic.
                items:
                  type: object
                  properties:
                    msg_index:
                      type: integer
                      format: int64
                    log:
                      type: string
                    events:
                      type: array
                      description: |-
                        Events contains a slice of Event objects that were emitted during some
                        execution.
                      items:
                        type: object
                        properties:
                          type:
                            type: string
                          attributes:
                            type: array
                            items:
                              type: object
                              properties:
                                key:
                                  type: string
                                value:
                                  type: string
                              description: |-
                                Attribute defines an attribute wrapper where the key and value are
                                strings instead of raw bytes.
                        description: |-
                          StringEvent defines en Event object wrapper where all the attributes
                          contain key/value pairs that are strings instead of raw bytes.
                  description: ABCIMessageLog defines a structure containing an indexed
                    tx ABCI message log.
              info:
                type: string
                description: Additional information. May be non-deterministic.
              gas_wanted:
                type: string
                description: Amount of gas requested for transaction.
                format: int64
              gas_used:
                type: string
                description: Amount of gas consumed by transaction.
                format: int64
              tx:
                type: object
                properties:
                  type_url:
                    type: string
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                  value:
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                   Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                   Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := ptypes.MarshalAny(foo)
                       ...
                       foo := &pb.Foo{}
                       if err := ptypes.UnmarshalAny(any, foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".


                  JSON
                  ====
                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
              timestamp:
                type: string
                description: |-
                  Time of the previous block. For heights > 1, it's the weighted median of
                  the timestamps of the valid votes in the block.LastCommit. For height == 1,
                  it's genesis time.
              events:
                type: array
                description: |-
                  Events defines all the events emitted by processing a transaction. Note,
                  these events include those emitted by processing all the messages and those
                  emitted from the ante. Whereas Logs contains the events, with
                  additional metadata, emitted only by processing the messages.

                  Since: cosmos-sdk 0.42.11, 0.44.5, 0.45
                items:
                  type: object
                  properties:
                    type:
                      type: string
                    attributes:
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            type: string
                          value:
                            type: string
                          index:
                            type: boolean
                        description: "EventAttribute is a single key-value pair, associated\
                          \ with an event."
                  description: |-
                    Event allows application developers to attach additional information to
                    ResponseBeginBlock, ResponseEndBlock, ResponseCheckTx and ResponseDeliverTx.
                    Later, transactions may be queried using these events.
            description: |-
              TxResponse defines a structure containing relevant tx data and metadata. The
              tags are stringified and the log is JSON decoded.
        pagination:
          type: object
          properties:
            next_key:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: |-
            pagination defines a pagination for the response.
            Deprecated post v0.46.x: use total instead.
        total:
          title: total is total number of results available
          type: string
          format: uint64
      description: |-
        GetTxsEventResponse is the response type for the Service.TxsByEvents
        RPC method.
    cosmos.tx.v1beta1.ModeInfo:
      type: object
      properties:
        single:
          title: single represents a single signer
          type: object
          properties:
            mode:
              title: mode is the signing mode of the single signer
              type: string
              description: |-
                SignMode represents a signing mode with its own security guarantees.

                This enum should be considered a registry of all known sign modes
                in the Cosmos ecosystem. Apps are not expected to support all known
                sign modes. Apps that would like to support custom  sign modes are
                encouraged to open a small PR against this file to add a new case
                to this SignMode enum describing their sign mode so that different
                apps have a consistent version of this enum.

                 - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be
                rejected.
                 - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is
                verified with raw bytes from Tx.
                 - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode that will verify some
                human-readable textual representation on top of the binary representation
                from SIGN_MODE_DIRECT. It is currently not supported.
                 - SIGN_MODE_DIRECT_AUX: SIGN_MODE_DIRECT_AUX specifies a signing mode which uses
                SignDocDirectAux. As opposed to SIGN_MODE_DIRECT, this sign mode does not
                require signers signing over other signers' `signer_info`. It also allows
                for adding Tips in transactions.

                Since: cosmos-sdk 0.46
                 - SIGN_MODE_LEGACY_AMINO_JSON: SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses
                Amino JSON and will be removed in the future.
                 - SIGN_MODE_EIP_191: SIGN_MODE_EIP_191 specifies the sign mode for EIP 191 signing on the Cosmos
                SDK. Ref: https://eips.ethereum.org/EIPS/eip-191

                Currently, SIGN_MODE_EIP_191 is registered as a SignMode enum variant,
                but is not implemented on the SDK by default. To enable EIP-191, you need
                to pass a custom `TxConfig` that has an implementation of
                `SignModeHandler` for EIP-191. The SDK may decide to fully support
                EIP-191 in the future.

                Since: cosmos-sdk 0.45.2
              default: SIGN_MODE_UNSPECIFIED
              enum:
              - SIGN_MODE_UNSPECIFIED
              - SIGN_MODE_DIRECT
              - SIGN_MODE_TEXTUAL
              - SIGN_MODE_DIRECT_AUX
              - SIGN_MODE_LEGACY_AMINO_JSON
              - SIGN_MODE_EIP_191
        multi:
          $ref: '#/components/schemas/cosmos.tx.v1beta1.ModeInfo.Multi'
      description: ModeInfo describes the signing mode of a single or nested multisig
        signer.
    cosmos.tx.v1beta1.ModeInfo.Multi:
      title: Multi is the mode info for a multisig public key
      type: object
      properties:
        bitarray:
          title: bitarray specifies which keys within the multisig are signing
          type: object
          properties:
            extra_bits_stored:
              type: integer
              format: int64
            elems:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
          description: |-
            CompactBitArray is an implementation of a space efficient bit array.
            This is used to ensure that the encoded data takes up a minimal amount of
            space after proto encoding.
            This is not thread safe, and is not intended for concurrent usage.
        mode_infos:
          title: |-
            mode_infos is the corresponding modes of the signers of the multisig
            which could include nested multisig public keys
          type: array
          items:
            $ref: '#/components/schemas/cosmos.tx.v1beta1.ModeInfo'
    cosmos.tx.v1beta1.ModeInfo.Single:
      title: |-
        Single is the mode info for a single signer. It is structured as a message
        to allow for additional fields such as locale for SIGN_MODE_TEXTUAL in the
        future
      type: object
      properties:
        mode:
          title: mode is the signing mode of the single signer
          type: string
          description: |-
            SignMode represents a signing mode with its own security guarantees.

            This enum should be considered a registry of all known sign modes
            in the Cosmos ecosystem. Apps are not expected to support all known
            sign modes. Apps that would like to support custom  sign modes are
            encouraged to open a small PR against this file to add a new case
            to this SignMode enum describing their sign mode so that different
            apps have a consistent version of this enum.

             - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be
            rejected.
             - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is
            verified with raw bytes from Tx.
             - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode that will verify some
            human-readable textual representation on top of the binary representation
            from SIGN_MODE_DIRECT. It is currently not supported.
             - SIGN_MODE_DIRECT_AUX: SIGN_MODE_DIRECT_AUX specifies a signing mode which uses
            SignDocDirectAux. As opposed to SIGN_MODE_DIRECT, this sign mode does not
            require signers signing over other signers' `signer_info`. It also allows
            for adding Tips in transactions.

            Since: cosmos-sdk 0.46
             - SIGN_MODE_LEGACY_AMINO_JSON: SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses
            Amino JSON and will be removed in the future.
             - SIGN_MODE_EIP_191: SIGN_MODE_EIP_191 specifies the sign mode for EIP 191 signing on the Cosmos
            SDK. Ref: https://eips.ethereum.org/EIPS/eip-191

            Currently, SIGN_MODE_EIP_191 is registered as a SignMode enum variant,
            but is not implemented on the SDK by default. To enable EIP-191, you need
            to pass a custom `TxConfig` that has an implementation of
            `SignModeHandler` for EIP-191. The SDK may decide to fully support
            EIP-191 in the future.

            Since: cosmos-sdk 0.45.2
          default: SIGN_MODE_UNSPECIFIED
          enum:
          - SIGN_MODE_UNSPECIFIED
          - SIGN_MODE_DIRECT
          - SIGN_MODE_TEXTUAL
          - SIGN_MODE_DIRECT_AUX
          - SIGN_MODE_LEGACY_AMINO_JSON
          - SIGN_MODE_EIP_191
    cosmos.tx.v1beta1.OrderBy:
      title: OrderBy defines the sorting order
      type: string
      description: |-
        - ORDER_BY_UNSPECIFIED: ORDER_BY_UNSPECIFIED specifies an unknown sorting order. OrderBy defaults to ASC in this case.
         - ORDER_BY_ASC: ORDER_BY_ASC defines ascending order
         - ORDER_BY_DESC: ORDER_BY_DESC defines descending order
      default: ORDER_BY_UNSPECIFIED
      enum:
      - ORDER_BY_UNSPECIFIED
      - ORDER_BY_ASC
      - ORDER_BY_DESC
    cosmos.tx.v1beta1.SignerInfo:
      type: object
      properties:
        public_key:
          type: object
          properties:
            type_url:
              type: string
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
            value:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

             Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

             Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := ptypes.MarshalAny(foo)
                 ...
                 foo := &pb.Foo{}
                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".


            JSON
            ====
            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
        mode_info:
          $ref: '#/components/schemas/cosmos.tx.v1beta1.ModeInfo'
        sequence:
          type: string
          description: |-
            sequence is the sequence of the account, which describes the
            number of committed transactions signed by a given address. It is used to
            prevent replay attacks.
          format: uint64
      description: |-
        SignerInfo describes the public key and signing mode of a single top-level
        signer.
    cosmos.tx.v1beta1.SimulateRequest:
      type: object
      properties:
        tx:
          $ref: '#/components/schemas/cosmos.tx.v1beta1.Tx'
        tx_bytes:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          description: |-
            tx_bytes is the raw transaction.

            Since: cosmos-sdk 0.43
          format: byte
      description: |-
        SimulateRequest is the request type for the Service.Simulate
        RPC method.
    cosmos.tx.v1beta1.SimulateResponse:
      type: object
      properties:
        gas_info:
          type: object
          properties:
            gas_wanted:
              type: string
              description: GasWanted is the maximum units of work we allow this tx
                to perform.
              format: uint64
            gas_used:
              type: string
              description: GasUsed is the amount of gas actually consumed.
              format: uint64
          description: gas_info is the information about gas used in the simulation.
        result:
          type: object
          properties:
            data:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                Data is any data returned from message or handler execution. It MUST be
                length prefixed in order to separate data from multiple message executions.
                Deprecated. This field is still populated, but prefer msg_response instead
                because it also contains the Msg response typeURL.
              format: byte
            log:
              type: string
              description: Log contains the log information from message or handler
                execution.
            events:
              type: array
              description: |-
                Events contains a slice of Event objects that were emitted during message
                or handler execution.
              items:
                type: object
                properties:
                  type:
                    type: string
                  attributes:
                    type: array
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                        value:
                          type: string
                        index:
                          type: boolean
                      description: "EventAttribute is a single key-value pair, associated\
                        \ with an event."
                description: |-
                  Event allows application developers to attach additional information to
                  ResponseBeginBlock, ResponseEndBlock, ResponseCheckTx and ResponseDeliverTx.
                  Later, transactions may be queried using these events.
            msg_responses:
              type: array
              description: |-
                msg_responses contains the Msg handler responses type packed in Anys.

                Since: cosmos-sdk 0.46
              items:
                type: object
                properties:
                  type_url:
                    type: string
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                  value:
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                   Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                   Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := ptypes.MarshalAny(foo)
                       ...
                       foo := &pb.Foo{}
                       if err := ptypes.UnmarshalAny(any, foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".


                  JSON
                  ====
                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
          description: result is the result of the simulation.
      description: |-
        SimulateResponse is the response type for the
        Service.SimulateRPC method.
    cosmos.tx.v1beta1.Tip:
      type: object
      properties:
        amount:
          title: amount is the amount of the tip
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
        tipper:
          title: tipper is the address of the account paying for the tip
          type: string
      description: |-
        Tip is the tip used for meta-transactions.

        Since: cosmos-sdk 0.46
    cosmos.tx.v1beta1.Tx:
      type: object
      properties:
        body:
          title: body is the processable content of the transaction
          type: object
          properties:
            messages:
              type: array
              description: |-
                messages is a list of messages to be executed. The required signers of
                those messages define the number and order of elements in AuthInfo's
                signer_infos and Tx's signatures. Each required signer address is added to
                the list only the first time it occurs.
                By convention, the first required signer (usually from the first message)
                is referred to as the primary signer and pays the fee for the whole
                transaction.
              items:
                type: object
                properties:
                  type_url:
                    type: string
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                  value:
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                   Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                   Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := ptypes.MarshalAny(foo)
                       ...
                       foo := &pb.Foo{}
                       if err := ptypes.UnmarshalAny(any, foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".


                  JSON
                  ====
                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
            memo:
              type: string
              description: |-
                memo is any arbitrary note/comment to be added to the transaction.
                WARNING: in clients, any publicly exposed text should not be called memo,
                but should be called `note` instead (see https://github.com/cosmos/cosmos-sdk/issues/9122).
            timeout_height:
              title: |-
                timeout is the block height after which this transaction will not
                be processed by the chain
              type: string
              format: uint64
            extension_options:
              title: |-
                extension_options are arbitrary options that can be added by chains
                when the default options are not sufficient. If any of these are present
                and can't be handled, the transaction will be rejected
              type: array
              items:
                type: object
                properties:
                  type_url:
                    type: string
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                  value:
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                   Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                   Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := ptypes.MarshalAny(foo)
                       ...
                       foo := &pb.Foo{}
                       if err := ptypes.UnmarshalAny(any, foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".


                  JSON
                  ====
                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
            non_critical_extension_options:
              title: |-
                extension_options are arbitrary options that can be added by chains
                when the default options are not sufficient. If any of these are present
                and can't be handled, they will be ignored
              type: array
              items:
                type: object
                properties:
                  type_url:
                    type: string
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                  value:
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                   Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                   Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := ptypes.MarshalAny(foo)
                       ...
                       foo := &pb.Foo{}
                       if err := ptypes.UnmarshalAny(any, foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".


                  JSON
                  ====
                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
          description: TxBody is the body of a transaction that all signers sign over.
        auth_info:
          $ref: '#/components/schemas/cosmos.tx.v1beta1.AuthInfo'
        signatures:
          type: array
          description: |-
            signatures is a list of signatures that matches the length and order of
            AuthInfo's signer_infos to allow connecting signature meta information like
            public key and signing mode by position.
          items:
            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
            type: string
            format: byte
      description: Tx is the standard type used for broadcasting transactions.
    cosmos.tx.v1beta1.TxBody:
      type: object
      properties:
        messages:
          type: array
          description: |-
            messages is a list of messages to be executed. The required signers of
            those messages define the number and order of elements in AuthInfo's
            signer_infos and Tx's signatures. Each required signer address is added to
            the list only the first time it occurs.
            By convention, the first required signer (usually from the first message)
            is referred to as the primary signer and pays the fee for the whole
            transaction.
          items:
            type: object
            properties:
              type_url:
                type: string
                description: |-
                  A URL/resource name that uniquely identifies the type of the serialized
                  protocol buffer message. This string must contain at least
                  one "/" character. The last segment of the URL's path must represent
                  the fully qualified name of the type (as in
                  `path/google.protobuf.Duration`). The name should be in a canonical form
                  (e.g., leading "." is not accepted).

                  In practice, teams usually precompile into the binary all types that they
                  expect it to use in the context of Any. However, for URLs which use the
                  scheme `http`, `https`, or no scheme, one can optionally set up a type
                  server that maps type URLs to message definitions as follows:

                  * If no scheme is provided, `https` is assumed.
                  * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                    value in binary format, or produce an error.
                  * Applications are allowed to cache lookup results based on the
                    URL, or have them precompiled into a binary to avoid any
                    lookup. Therefore, binary compatibility needs to be preserved
                    on changes to types. (Use versioned type names to manage
                    breaking changes.)

                  Note: this functionality is not currently available in the official
                  protobuf release, and it is not used for type URLs beginning with
                  type.googleapis.com.

                  Schemes other than `http`, `https` (or the empty scheme) might be
                  used with implementation specific semantics.
              value:
                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                type: string
                description: Must be a valid serialized protocol buffer of the above
                  specified type.
                format: byte
            description: |-
              `Any` contains an arbitrary serialized protocol buffer message along with a
              URL that describes the type of the serialized message.

              Protobuf library provides support to pack/unpack Any values in the form
              of utility functions or additional generated methods of the Any type.

              Example 1: Pack and unpack a message in C++.

                  Foo foo = ...;
                  Any any;
                  any.PackFrom(foo);
                  ...
                  if (any.UnpackTo(&foo)) {
                    ...
                  }

              Example 2: Pack and unpack a message in Java.

                  Foo foo = ...;
                  Any any = Any.pack(foo);
                  ...
                  if (any.is(Foo.class)) {
                    foo = any.unpack(Foo.class);
                  }

               Example 3: Pack and unpack a message in Python.

                  foo = Foo(...)
                  any = Any()
                  any.Pack(foo)
                  ...
                  if any.Is(Foo.DESCRIPTOR):
                    any.Unpack(foo)
                    ...

               Example 4: Pack and unpack a message in Go

                   foo := &pb.Foo{...}
                   any, err := ptypes.MarshalAny(foo)
                   ...
                   foo := &pb.Foo{}
                   if err := ptypes.UnmarshalAny(any, foo); err != nil {
                     ...
                   }

              The pack methods provided by protobuf library will by default use
              'type.googleapis.com/full.type.name' as the type URL and the unpack
              methods only use the fully qualified type name after the last '/'
              in the type URL, for example "foo.bar.com/x/y.z" will yield type
              name "y.z".


              JSON
              ====
              The JSON representation of an `Any` value uses the regular
              representation of the deserialized, embedded message, with an
              additional field `@type` which contains the type URL. Example:

                  package google.profile;
                  message Person {
                    string first_name = 1;
                    string last_name = 2;
                  }

                  {
                    "@type": "type.googleapis.com/google.profile.Person",
                    "firstName": <string>,
                    "lastName": <string>
                  }

              If the embedded message type is well-known and has a custom JSON
              representation, that representation will be embedded adding a field
              `value` which holds the custom JSON in addition to the `@type`
              field. Example (for message [google.protobuf.Duration][]):

                  {
                    "@type": "type.googleapis.com/google.protobuf.Duration",
                    "value": "1.212s"
                  }
        memo:
          type: string
          description: |-
            memo is any arbitrary note/comment to be added to the transaction.
            WARNING: in clients, any publicly exposed text should not be called memo,
            but should be called `note` instead (see https://github.com/cosmos/cosmos-sdk/issues/9122).
        timeout_height:
          title: |-
            timeout is the block height after which this transaction will not
            be processed by the chain
          type: string
          format: uint64
        extension_options:
          title: |-
            extension_options are arbitrary options that can be added by chains
            when the default options are not sufficient. If any of these are present
            and can't be handled, the transaction will be rejected
          type: array
          items:
            type: object
            properties:
              type_url:
                type: string
                description: |-
                  A URL/resource name that uniquely identifies the type of the serialized
                  protocol buffer message. This string must contain at least
                  one "/" character. The last segment of the URL's path must represent
                  the fully qualified name of the type (as in
                  `path/google.protobuf.Duration`). The name should be in a canonical form
                  (e.g., leading "." is not accepted).

                  In practice, teams usually precompile into the binary all types that they
                  expect it to use in the context of Any. However, for URLs which use the
                  scheme `http`, `https`, or no scheme, one can optionally set up a type
                  server that maps type URLs to message definitions as follows:

                  * If no scheme is provided, `https` is assumed.
                  * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                    value in binary format, or produce an error.
                  * Applications are allowed to cache lookup results based on the
                    URL, or have them precompiled into a binary to avoid any
                    lookup. Therefore, binary compatibility needs to be preserved
                    on changes to types. (Use versioned type names to manage
                    breaking changes.)

                  Note: this functionality is not currently available in the official
                  protobuf release, and it is not used for type URLs beginning with
                  type.googleapis.com.

                  Schemes other than `http`, `https` (or the empty scheme) might be
                  used with implementation specific semantics.
              value:
                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                type: string
                description: Must be a valid serialized protocol buffer of the above
                  specified type.
                format: byte
            description: |-
              `Any` contains an arbitrary serialized protocol buffer message along with a
              URL that describes the type of the serialized message.

              Protobuf library provides support to pack/unpack Any values in the form
              of utility functions or additional generated methods of the Any type.

              Example 1: Pack and unpack a message in C++.

                  Foo foo = ...;
                  Any any;
                  any.PackFrom(foo);
                  ...
                  if (any.UnpackTo(&foo)) {
                    ...
                  }

              Example 2: Pack and unpack a message in Java.

                  Foo foo = ...;
                  Any any = Any.pack(foo);
                  ...
                  if (any.is(Foo.class)) {
                    foo = any.unpack(Foo.class);
                  }

               Example 3: Pack and unpack a message in Python.

                  foo = Foo(...)
                  any = Any()
                  any.Pack(foo)
                  ...
                  if any.Is(Foo.DESCRIPTOR):
                    any.Unpack(foo)
                    ...

               Example 4: Pack and unpack a message in Go

                   foo := &pb.Foo{...}
                   any, err := ptypes.MarshalAny(foo)
                   ...
                   foo := &pb.Foo{}
                   if err := ptypes.UnmarshalAny(any, foo); err != nil {
                     ...
                   }

              The pack methods provided by protobuf library will by default use
              'type.googleapis.com/full.type.name' as the type URL and the unpack
              methods only use the fully qualified type name after the last '/'
              in the type URL, for example "foo.bar.com/x/y.z" will yield type
              name "y.z".


              JSON
              ====
              The JSON representation of an `Any` value uses the regular
              representation of the deserialized, embedded message, with an
              additional field `@type` which contains the type URL. Example:

                  package google.profile;
                  message Person {
                    string first_name = 1;
                    string last_name = 2;
                  }

                  {
                    "@type": "type.googleapis.com/google.profile.Person",
                    "firstName": <string>,
                    "lastName": <string>
                  }

              If the embedded message type is well-known and has a custom JSON
              representation, that representation will be embedded adding a field
              `value` which holds the custom JSON in addition to the `@type`
              field. Example (for message [google.protobuf.Duration][]):

                  {
                    "@type": "type.googleapis.com/google.protobuf.Duration",
                    "value": "1.212s"
                  }
        non_critical_extension_options:
          title: |-
            extension_options are arbitrary options that can be added by chains
            when the default options are not sufficient. If any of these are present
            and can't be handled, they will be ignored
          type: array
          items:
            type: object
            properties:
              type_url:
                type: string
                description: |-
                  A URL/resource name that uniquely identifies the type of the serialized
                  protocol buffer message. This string must contain at least
                  one "/" character. The last segment of the URL's path must represent
                  the fully qualified name of the type (as in
                  `path/google.protobuf.Duration`). The name should be in a canonical form
                  (e.g., leading "." is not accepted).

                  In practice, teams usually precompile into the binary all types that they
                  expect it to use in the context of Any. However, for URLs which use the
                  scheme `http`, `https`, or no scheme, one can optionally set up a type
                  server that maps type URLs to message definitions as follows:

                  * If no scheme is provided, `https` is assumed.
                  * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                    value in binary format, or produce an error.
                  * Applications are allowed to cache lookup results based on the
                    URL, or have them precompiled into a binary to avoid any
                    lookup. Therefore, binary compatibility needs to be preserved
                    on changes to types. (Use versioned type names to manage
                    breaking changes.)

                  Note: this functionality is not currently available in the official
                  protobuf release, and it is not used for type URLs beginning with
                  type.googleapis.com.

                  Schemes other than `http`, `https` (or the empty scheme) might be
                  used with implementation specific semantics.
              value:
                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                type: string
                description: Must be a valid serialized protocol buffer of the above
                  specified type.
                format: byte
            description: |-
              `Any` contains an arbitrary serialized protocol buffer message along with a
              URL that describes the type of the serialized message.

              Protobuf library provides support to pack/unpack Any values in the form
              of utility functions or additional generated methods of the Any type.

              Example 1: Pack and unpack a message in C++.

                  Foo foo = ...;
                  Any any;
                  any.PackFrom(foo);
                  ...
                  if (any.UnpackTo(&foo)) {
                    ...
                  }

              Example 2: Pack and unpack a message in Java.

                  Foo foo = ...;
                  Any any = Any.pack(foo);
                  ...
                  if (any.is(Foo.class)) {
                    foo = any.unpack(Foo.class);
                  }

               Example 3: Pack and unpack a message in Python.

                  foo = Foo(...)
                  any = Any()
                  any.Pack(foo)
                  ...
                  if any.Is(Foo.DESCRIPTOR):
                    any.Unpack(foo)
                    ...

               Example 4: Pack and unpack a message in Go

                   foo := &pb.Foo{...}
                   any, err := ptypes.MarshalAny(foo)
                   ...
                   foo := &pb.Foo{}
                   if err := ptypes.UnmarshalAny(any, foo); err != nil {
                     ...
                   }

              The pack methods provided by protobuf library will by default use
              'type.googleapis.com/full.type.name' as the type URL and the unpack
              methods only use the fully qualified type name after the last '/'
              in the type URL, for example "foo.bar.com/x/y.z" will yield type
              name "y.z".


              JSON
              ====
              The JSON representation of an `Any` value uses the regular
              representation of the deserialized, embedded message, with an
              additional field `@type` which contains the type URL. Example:

                  package google.profile;
                  message Person {
                    string first_name = 1;
                    string last_name = 2;
                  }

                  {
                    "@type": "type.googleapis.com/google.profile.Person",
                    "firstName": <string>,
                    "lastName": <string>
                  }

              If the embedded message type is well-known and has a custom JSON
              representation, that representation will be embedded adding a field
              `value` which holds the custom JSON in addition to the `@type`
              field. Example (for message [google.protobuf.Duration][]):

                  {
                    "@type": "type.googleapis.com/google.protobuf.Duration",
                    "value": "1.212s"
                  }
      description: TxBody is the body of a transaction that all signers sign over.
    cosmos.tx.v1beta1.TxDecodeAminoRequest:
      type: object
      properties:
        amino_binary:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
      description: |-
        TxDecodeAminoRequest is the request type for the Service.TxDecodeAmino
        RPC method.

        Since: cosmos-sdk 0.47
    cosmos.tx.v1beta1.TxDecodeAminoResponse:
      type: object
      properties:
        amino_json:
          type: string
      description: |-
        TxDecodeAminoResponse is the response type for the Service.TxDecodeAmino
        RPC method.

        Since: cosmos-sdk 0.47
    cosmos.tx.v1beta1.TxDecodeRequest:
      type: object
      properties:
        tx_bytes:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          description: tx_bytes is the raw transaction.
          format: byte
      description: |-
        TxDecodeRequest is the request type for the Service.TxDecode
        RPC method.

        Since: cosmos-sdk 0.47
    cosmos.tx.v1beta1.TxDecodeResponse:
      type: object
      properties:
        tx:
          $ref: '#/components/schemas/cosmos.tx.v1beta1.Tx'
      description: |-
        TxDecodeResponse is the response type for the
        Service.TxDecode method.

        Since: cosmos-sdk 0.47
    cosmos.tx.v1beta1.TxEncodeAminoRequest:
      type: object
      properties:
        amino_json:
          type: string
      description: |-
        TxEncodeAminoRequest is the request type for the Service.TxEncodeAmino
        RPC method.

        Since: cosmos-sdk 0.47
    cosmos.tx.v1beta1.TxEncodeAminoResponse:
      type: object
      properties:
        amino_binary:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
      description: |-
        TxEncodeAminoResponse is the response type for the Service.TxEncodeAmino
        RPC method.

        Since: cosmos-sdk 0.47
    cosmos.tx.v1beta1.TxEncodeRequest:
      type: object
      properties:
        tx:
          $ref: '#/components/schemas/cosmos.tx.v1beta1.Tx'
      description: |-
        TxEncodeRequest is the request type for the Service.TxEncode
        RPC method.

        Since: cosmos-sdk 0.47
    cosmos.tx.v1beta1.TxEncodeResponse:
      type: object
      properties:
        tx_bytes:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          description: tx_bytes is the encoded transaction bytes.
          format: byte
      description: |-
        TxEncodeResponse is the response type for the
        Service.TxEncode method.

        Since: cosmos-sdk 0.47
    tendermint.abci.Event:
      type: object
      properties:
        type:
          type: string
        attributes:
          type: array
          items:
            type: object
            properties:
              key:
                type: string
              value:
                type: string
              index:
                type: boolean
            description: "EventAttribute is a single key-value pair, associated with\
              \ an event."
      description: |-
        Event allows application developers to attach additional information to
        ResponseBeginBlock, ResponseEndBlock, ResponseCheckTx and ResponseDeliverTx.
        Later, transactions may be queried using these events.
    tendermint.abci.EventAttribute:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
        index:
          type: boolean
      description: "EventAttribute is a single key-value pair, associated with an\
        \ event."
    cosmos.upgrade.v1beta1.ModuleVersion:
      type: object
      properties:
        name:
          title: name of the app module
          type: string
        version:
          title: consensus version of the app module
          type: string
          format: uint64
      description: |-
        ModuleVersion specifies a module and its consensus version.

        Since: cosmos-sdk 0.43
    cosmos.upgrade.v1beta1.Plan:
      type: object
      properties:
        name:
          type: string
          description: |-
            Sets the name for the upgrade. This name will be used by the upgraded
            version of the software to apply any special "on-upgrade" commands during
            the first BeginBlock method after the upgrade is applied. It is also used
            to detect whether a software version can handle a given upgrade. If no
            upgrade handler with this name has been set in the software, it will be
            assumed that the software is out-of-date when the upgrade Time or Height is
            reached and the software will exit.
        time:
          type: string
          description: |-
            Deprecated: Time based upgrades have been deprecated. Time based upgrade logic
            has been removed from the SDK.
            If this field is not empty, an error will be thrown.
          format: date-time
        height:
          type: string
          description: The height at which the upgrade must be performed.
          format: int64
        info:
          title: |-
            Any application specific upgrade info to be included on-chain
            such as a git commit that validators could automatically upgrade to
          type: string
        upgraded_client_state:
          type: object
          properties:
            type_url:
              type: string
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
            value:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

             Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

             Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := ptypes.MarshalAny(foo)
                 ...
                 foo := &pb.Foo{}
                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".


            JSON
            ====
            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
      description: Plan specifies information about a planned upgrade and when it
        should occur.
    cosmos.upgrade.v1beta1.QueryAppliedPlanResponse:
      type: object
      properties:
        height:
          type: string
          description: height is the block height at which the plan was applied.
          format: int64
      description: |-
        QueryAppliedPlanResponse is the response type for the Query/AppliedPlan RPC
        method.
    cosmos.upgrade.v1beta1.QueryAuthorityResponse:
      title: QueryAuthorityResponse is the response type for Query/Authority
      type: object
      properties:
        address:
          type: string
      description: "Since: cosmos-sdk 0.46"
    cosmos.upgrade.v1beta1.QueryCurrentPlanResponse:
      type: object
      properties:
        plan:
          type: object
          properties:
            name:
              type: string
              description: |-
                Sets the name for the upgrade. This name will be used by the upgraded
                version of the software to apply any special "on-upgrade" commands during
                the first BeginBlock method after the upgrade is applied. It is also used
                to detect whether a software version can handle a given upgrade. If no
                upgrade handler with this name has been set in the software, it will be
                assumed that the software is out-of-date when the upgrade Time or Height is
                reached and the software will exit.
            time:
              type: string
              description: |-
                Deprecated: Time based upgrades have been deprecated. Time based upgrade logic
                has been removed from the SDK.
                If this field is not empty, an error will be thrown.
              format: date-time
            height:
              type: string
              description: The height at which the upgrade must be performed.
              format: int64
            info:
              title: |-
                Any application specific upgrade info to be included on-chain
                such as a git commit that validators could automatically upgrade to
              type: string
            upgraded_client_state:
              type: object
              properties:
                type_url:
                  type: string
                  description: |-
                    A URL/resource name that uniquely identifies the type of the serialized
                    protocol buffer message. This string must contain at least
                    one "/" character. The last segment of the URL's path must represent
                    the fully qualified name of the type (as in
                    `path/google.protobuf.Duration`). The name should be in a canonical form
                    (e.g., leading "." is not accepted).

                    In practice, teams usually precompile into the binary all types that they
                    expect it to use in the context of Any. However, for URLs which use the
                    scheme `http`, `https`, or no scheme, one can optionally set up a type
                    server that maps type URLs to message definitions as follows:

                    * If no scheme is provided, `https` is assumed.
                    * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the official
                    protobuf release, and it is not used for type URLs beginning with
                    type.googleapis.com.

                    Schemes other than `http`, `https` (or the empty scheme) might be
                    used with implementation specific semantics.
                value:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
              description: |-
                `Any` contains an arbitrary serialized protocol buffer message along with a
                URL that describes the type of the serialized message.

                Protobuf library provides support to pack/unpack Any values in the form
                of utility functions or additional generated methods of the Any type.

                Example 1: Pack and unpack a message in C++.

                    Foo foo = ...;
                    Any any;
                    any.PackFrom(foo);
                    ...
                    if (any.UnpackTo(&foo)) {
                      ...
                    }

                Example 2: Pack and unpack a message in Java.

                    Foo foo = ...;
                    Any any = Any.pack(foo);
                    ...
                    if (any.is(Foo.class)) {
                      foo = any.unpack(Foo.class);
                    }

                 Example 3: Pack and unpack a message in Python.

                    foo = Foo(...)
                    any = Any()
                    any.Pack(foo)
                    ...
                    if any.Is(Foo.DESCRIPTOR):
                      any.Unpack(foo)
                      ...

                 Example 4: Pack and unpack a message in Go

                     foo := &pb.Foo{...}
                     any, err := ptypes.MarshalAny(foo)
                     ...
                     foo := &pb.Foo{}
                     if err := ptypes.UnmarshalAny(any, foo); err != nil {
                       ...
                     }

                The pack methods provided by protobuf library will by default use
                'type.googleapis.com/full.type.name' as the type URL and the unpack
                methods only use the fully qualified type name after the last '/'
                in the type URL, for example "foo.bar.com/x/y.z" will yield type
                name "y.z".


                JSON
                ====
                The JSON representation of an `Any` value uses the regular
                representation of the deserialized, embedded message, with an
                additional field `@type` which contains the type URL. Example:

                    package google.profile;
                    message Person {
                      string first_name = 1;
                      string last_name = 2;
                    }

                    {
                      "@type": "type.googleapis.com/google.profile.Person",
                      "firstName": <string>,
                      "lastName": <string>
                    }

                If the embedded message type is well-known and has a custom JSON
                representation, that representation will be embedded adding a field
                `value` which holds the custom JSON in addition to the `@type`
                field. Example (for message [google.protobuf.Duration][]):

                    {
                      "@type": "type.googleapis.com/google.protobuf.Duration",
                      "value": "1.212s"
                    }
          description: plan is the current upgrade plan.
      description: |-
        QueryCurrentPlanResponse is the response type for the Query/CurrentPlan RPC
        method.
    cosmos.upgrade.v1beta1.QueryModuleVersionsResponse:
      type: object
      properties:
        module_versions:
          type: array
          description: module_versions is a list of module names with their consensus
            versions.
          items:
            type: object
            properties:
              name:
                title: name of the app module
                type: string
              version:
                title: consensus version of the app module
                type: string
                format: uint64
            description: |-
              ModuleVersion specifies a module and its consensus version.

              Since: cosmos-sdk 0.43
      description: |-
        QueryModuleVersionsResponse is the response type for the Query/ModuleVersions
        RPC method.

        Since: cosmos-sdk 0.43
    cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse:
      type: object
      properties:
        upgraded_consensus_state:
          title: "Since: cosmos-sdk 0.43"
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
      description: |-
        QueryUpgradedConsensusStateResponse is the response type for the Query/UpgradedConsensusState
        RPC method.
    cosmwasm.wasm.v1.AbsoluteTxPosition:
      type: object
      properties:
        block_height:
          title: BlockHeight is the block the contract was created at
          type: string
          format: uint64
        tx_index:
          title: |-
            TxIndex is a monotonic counter within the block (actual transaction index,
            or gas consumed)
          type: string
          format: uint64
      description: |-
        AbsoluteTxPosition is a unique transaction position that allows for global
        ordering of transactions.
    cosmwasm.wasm.v1.AccessConfig:
      type: object
      properties:
        permission:
          title: AccessType permission types
          type: string
          description: |-
            - ACCESS_TYPE_UNSPECIFIED: AccessTypeUnspecified placeholder for empty value
             - ACCESS_TYPE_NOBODY: AccessTypeNobody forbidden
             - ACCESS_TYPE_EVERYBODY: AccessTypeEverybody unrestricted
             - ACCESS_TYPE_ANY_OF_ADDRESSES: AccessTypeAnyOfAddresses allow any of the addresses
          default: ACCESS_TYPE_UNSPECIFIED
          enum:
          - ACCESS_TYPE_UNSPECIFIED
          - ACCESS_TYPE_NOBODY
          - ACCESS_TYPE_EVERYBODY
          - ACCESS_TYPE_ANY_OF_ADDRESSES
        addresses:
          type: array
          items:
            type: string
      description: AccessConfig access control type.
    cosmwasm.wasm.v1.AccessType:
      title: AccessType permission types
      type: string
      description: |-
        - ACCESS_TYPE_UNSPECIFIED: AccessTypeUnspecified placeholder for empty value
         - ACCESS_TYPE_NOBODY: AccessTypeNobody forbidden
         - ACCESS_TYPE_EVERYBODY: AccessTypeEverybody unrestricted
         - ACCESS_TYPE_ANY_OF_ADDRESSES: AccessTypeAnyOfAddresses allow any of the addresses
      default: ACCESS_TYPE_UNSPECIFIED
      enum:
      - ACCESS_TYPE_UNSPECIFIED
      - ACCESS_TYPE_NOBODY
      - ACCESS_TYPE_EVERYBODY
      - ACCESS_TYPE_ANY_OF_ADDRESSES
    cosmwasm.wasm.v1.CodeInfoResponse:
      title: CodeInfoResponse contains code meta data from CodeInfo
      type: object
      properties:
        code_id:
          type: string
          format: uint64
        creator:
          type: string
        data_hash:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        instantiate_permission:
          type: object
          properties:
            permission:
              title: AccessType permission types
              type: string
              description: |-
                - ACCESS_TYPE_UNSPECIFIED: AccessTypeUnspecified placeholder for empty value
                 - ACCESS_TYPE_NOBODY: AccessTypeNobody forbidden
                 - ACCESS_TYPE_EVERYBODY: AccessTypeEverybody unrestricted
                 - ACCESS_TYPE_ANY_OF_ADDRESSES: AccessTypeAnyOfAddresses allow any of the addresses
              default: ACCESS_TYPE_UNSPECIFIED
              enum:
              - ACCESS_TYPE_UNSPECIFIED
              - ACCESS_TYPE_NOBODY
              - ACCESS_TYPE_EVERYBODY
              - ACCESS_TYPE_ANY_OF_ADDRESSES
            addresses:
              type: array
              items:
                type: string
          description: AccessConfig access control type.
    cosmwasm.wasm.v1.ContractCodeHistoryEntry:
      type: object
      properties:
        operation:
          title: ContractCodeHistoryOperationType actions that caused a code change
          type: string
          description: |-
            - CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED: ContractCodeHistoryOperationTypeUnspecified placeholder for empty value
             - CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT: ContractCodeHistoryOperationTypeInit on chain contract instantiation
             - CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE: ContractCodeHistoryOperationTypeMigrate code migration
             - CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS: ContractCodeHistoryOperationTypeGenesis based on genesis data
          default: CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED
          enum:
          - CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED
          - CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT
          - CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE
          - CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS
        code_id:
          title: CodeID is the reference to the stored WASM code
          type: string
          format: uint64
        updated:
          type: object
          properties:
            block_height:
              title: BlockHeight is the block the contract was created at
              type: string
              format: uint64
            tx_index:
              title: |-
                TxIndex is a monotonic counter within the block (actual transaction index,
                or gas consumed)
              type: string
              format: uint64
          description: Updated Tx position when the operation was executed.
        msg:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
      description: ContractCodeHistoryEntry metadata to a contract.
    cosmwasm.wasm.v1.ContractCodeHistoryOperationType:
      title: ContractCodeHistoryOperationType actions that caused a code change
      type: string
      description: |-
        - CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED: ContractCodeHistoryOperationTypeUnspecified placeholder for empty value
         - CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT: ContractCodeHistoryOperationTypeInit on chain contract instantiation
         - CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE: ContractCodeHistoryOperationTypeMigrate code migration
         - CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS: ContractCodeHistoryOperationTypeGenesis based on genesis data
      default: CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED
      enum:
      - CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED
      - CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT
      - CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE
      - CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS
    cosmwasm.wasm.v1.ContractInfo:
      title: ContractInfo stores a WASM contract instance
      type: object
      properties:
        code_id:
          title: CodeID is the reference to the stored Wasm code
          type: string
          format: uint64
        creator:
          title: Creator address who initially instantiated the contract
          type: string
        admin:
          title: Admin is an optional address that can execute migrations
          type: string
        label:
          type: string
          description: Label is optional metadata to be stored with a contract instance.
        created:
          type: object
          properties:
            block_height:
              title: BlockHeight is the block the contract was created at
              type: string
              format: uint64
            tx_index:
              title: |-
                TxIndex is a monotonic counter within the block (actual transaction index,
                or gas consumed)
              type: string
              format: uint64
          description: Created Tx position when the contract was instantiated.
        ibc_port_id:
          type: string
        extension:
          type: object
          properties:
            type_url:
              type: string
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
            value:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

             Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

             Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := ptypes.MarshalAny(foo)
                 ...
                 foo := &pb.Foo{}
                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".


            JSON
            ====
            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
    cosmwasm.wasm.v1.Model:
      title: Model is a struct that holds a KV pair
      type: object
      properties:
        key:
          title: hex-encode key to read it better (this is often ascii)
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        value:
          title: base64-encode raw value
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
    cosmwasm.wasm.v1.Params:
      type: object
      properties:
        code_upload_access:
          type: object
          properties:
            permission:
              title: AccessType permission types
              type: string
              description: |-
                - ACCESS_TYPE_UNSPECIFIED: AccessTypeUnspecified placeholder for empty value
                 - ACCESS_TYPE_NOBODY: AccessTypeNobody forbidden
                 - ACCESS_TYPE_EVERYBODY: AccessTypeEverybody unrestricted
                 - ACCESS_TYPE_ANY_OF_ADDRESSES: AccessTypeAnyOfAddresses allow any of the addresses
              default: ACCESS_TYPE_UNSPECIFIED
              enum:
              - ACCESS_TYPE_UNSPECIFIED
              - ACCESS_TYPE_NOBODY
              - ACCESS_TYPE_EVERYBODY
              - ACCESS_TYPE_ANY_OF_ADDRESSES
            addresses:
              type: array
              items:
                type: string
          description: AccessConfig access control type.
        instantiate_default_permission:
          title: AccessType permission types
          type: string
          description: |-
            - ACCESS_TYPE_UNSPECIFIED: AccessTypeUnspecified placeholder for empty value
             - ACCESS_TYPE_NOBODY: AccessTypeNobody forbidden
             - ACCESS_TYPE_EVERYBODY: AccessTypeEverybody unrestricted
             - ACCESS_TYPE_ANY_OF_ADDRESSES: AccessTypeAnyOfAddresses allow any of the addresses
          default: ACCESS_TYPE_UNSPECIFIED
          enum:
          - ACCESS_TYPE_UNSPECIFIED
          - ACCESS_TYPE_NOBODY
          - ACCESS_TYPE_EVERYBODY
          - ACCESS_TYPE_ANY_OF_ADDRESSES
      description: Params defines the set of wasm parameters.
    cosmwasm.wasm.v1.QueryAllContractStateResponse:
      title: |-
        QueryAllContractStateResponse is the response type for the
        Query/AllContractState RPC method
      type: object
      properties:
        models:
          type: array
          items:
            title: Model is a struct that holds a KV pair
            type: object
            properties:
              key:
                title: hex-encode key to read it better (this is often ascii)
                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                type: string
                format: byte
              value:
                title: base64-encode raw value
                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                type: string
                format: byte
        pagination:
          type: object
          properties:
            next_key:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
    cosmwasm.wasm.v1.QueryCodeResponse:
      title: QueryCodeResponse is the response type for the Query/Code RPC method
      type: object
      properties:
        code_info:
          title: CodeInfoResponse contains code meta data from CodeInfo
          type: object
          properties:
            code_id:
              type: string
              format: uint64
            creator:
              type: string
            data_hash:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
            instantiate_permission:
              type: object
              properties:
                permission:
                  title: AccessType permission types
                  type: string
                  description: |-
                    - ACCESS_TYPE_UNSPECIFIED: AccessTypeUnspecified placeholder for empty value
                     - ACCESS_TYPE_NOBODY: AccessTypeNobody forbidden
                     - ACCESS_TYPE_EVERYBODY: AccessTypeEverybody unrestricted
                     - ACCESS_TYPE_ANY_OF_ADDRESSES: AccessTypeAnyOfAddresses allow any of the addresses
                  default: ACCESS_TYPE_UNSPECIFIED
                  enum:
                  - ACCESS_TYPE_UNSPECIFIED
                  - ACCESS_TYPE_NOBODY
                  - ACCESS_TYPE_EVERYBODY
                  - ACCESS_TYPE_ANY_OF_ADDRESSES
                addresses:
                  type: array
                  items:
                    type: string
              description: AccessConfig access control type.
        data:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
    cosmwasm.wasm.v1.QueryCodesResponse:
      title: QueryCodesResponse is the response type for the Query/Codes RPC method
      type: object
      properties:
        code_infos:
          type: array
          items:
            title: CodeInfoResponse contains code meta data from CodeInfo
            type: object
            properties:
              code_id:
                type: string
                format: uint64
              creator:
                type: string
              data_hash:
                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                type: string
                format: byte
              instantiate_permission:
                type: object
                properties:
                  permission:
                    title: AccessType permission types
                    type: string
                    description: |-
                      - ACCESS_TYPE_UNSPECIFIED: AccessTypeUnspecified placeholder for empty value
                       - ACCESS_TYPE_NOBODY: AccessTypeNobody forbidden
                       - ACCESS_TYPE_EVERYBODY: AccessTypeEverybody unrestricted
                       - ACCESS_TYPE_ANY_OF_ADDRESSES: AccessTypeAnyOfAddresses allow any of the addresses
                    default: ACCESS_TYPE_UNSPECIFIED
                    enum:
                    - ACCESS_TYPE_UNSPECIFIED
                    - ACCESS_TYPE_NOBODY
                    - ACCESS_TYPE_EVERYBODY
                    - ACCESS_TYPE_ANY_OF_ADDRESSES
                  addresses:
                    type: array
                    items:
                      type: string
                description: AccessConfig access control type.
        pagination:
          type: object
          properties:
            next_key:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
    cosmwasm.wasm.v1.QueryContractHistoryResponse:
      title: |-
        QueryContractHistoryResponse is the response type for the
        Query/ContractHistory RPC method
      type: object
      properties:
        entries:
          type: array
          items:
            type: object
            properties:
              operation:
                title: ContractCodeHistoryOperationType actions that caused a code
                  change
                type: string
                description: |-
                  - CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED: ContractCodeHistoryOperationTypeUnspecified placeholder for empty value
                   - CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT: ContractCodeHistoryOperationTypeInit on chain contract instantiation
                   - CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE: ContractCodeHistoryOperationTypeMigrate code migration
                   - CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS: ContractCodeHistoryOperationTypeGenesis based on genesis data
                default: CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED
                enum:
                - CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED
                - CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT
                - CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE
                - CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS
              code_id:
                title: CodeID is the reference to the stored WASM code
                type: string
                format: uint64
              updated:
                type: object
                properties:
                  block_height:
                    title: BlockHeight is the block the contract was created at
                    type: string
                    format: uint64
                  tx_index:
                    title: |-
                      TxIndex is a monotonic counter within the block (actual transaction index,
                      or gas consumed)
                    type: string
                    format: uint64
                description: Updated Tx position when the operation was executed.
              msg:
                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                type: string
                format: byte
            description: ContractCodeHistoryEntry metadata to a contract.
        pagination:
          type: object
          properties:
            next_key:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
    cosmwasm.wasm.v1.QueryContractInfoResponse:
      title: |-
        QueryContractInfoResponse is the response type for the Query/ContractInfo RPC
        method
      type: object
      properties:
        address:
          title: address is the address of the contract
          type: string
        contract_info:
          title: ContractInfo stores a WASM contract instance
          type: object
          properties:
            code_id:
              title: CodeID is the reference to the stored Wasm code
              type: string
              format: uint64
            creator:
              title: Creator address who initially instantiated the contract
              type: string
            admin:
              title: Admin is an optional address that can execute migrations
              type: string
            label:
              type: string
              description: Label is optional metadata to be stored with a contract
                instance.
            created:
              type: object
              properties:
                block_height:
                  title: BlockHeight is the block the contract was created at
                  type: string
                  format: uint64
                tx_index:
                  title: |-
                    TxIndex is a monotonic counter within the block (actual transaction index,
                    or gas consumed)
                  type: string
                  format: uint64
              description: Created Tx position when the contract was instantiated.
            ibc_port_id:
              type: string
            extension:
              type: object
              properties:
                type_url:
                  type: string
                  description: |-
                    A URL/resource name that uniquely identifies the type of the serialized
                    protocol buffer message. This string must contain at least
                    one "/" character. The last segment of the URL's path must represent
                    the fully qualified name of the type (as in
                    `path/google.protobuf.Duration`). The name should be in a canonical form
                    (e.g., leading "." is not accepted).

                    In practice, teams usually precompile into the binary all types that they
                    expect it to use in the context of Any. However, for URLs which use the
                    scheme `http`, `https`, or no scheme, one can optionally set up a type
                    server that maps type URLs to message definitions as follows:

                    * If no scheme is provided, `https` is assumed.
                    * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the official
                    protobuf release, and it is not used for type URLs beginning with
                    type.googleapis.com.

                    Schemes other than `http`, `https` (or the empty scheme) might be
                    used with implementation specific semantics.
                value:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
              description: |-
                `Any` contains an arbitrary serialized protocol buffer message along with a
                URL that describes the type of the serialized message.

                Protobuf library provides support to pack/unpack Any values in the form
                of utility functions or additional generated methods of the Any type.

                Example 1: Pack and unpack a message in C++.

                    Foo foo = ...;
                    Any any;
                    any.PackFrom(foo);
                    ...
                    if (any.UnpackTo(&foo)) {
                      ...
                    }

                Example 2: Pack and unpack a message in Java.

                    Foo foo = ...;
                    Any any = Any.pack(foo);
                    ...
                    if (any.is(Foo.class)) {
                      foo = any.unpack(Foo.class);
                    }

                 Example 3: Pack and unpack a message in Python.

                    foo = Foo(...)
                    any = Any()
                    any.Pack(foo)
                    ...
                    if any.Is(Foo.DESCRIPTOR):
                      any.Unpack(foo)
                      ...

                 Example 4: Pack and unpack a message in Go

                     foo := &pb.Foo{...}
                     any, err := ptypes.MarshalAny(foo)
                     ...
                     foo := &pb.Foo{}
                     if err := ptypes.UnmarshalAny(any, foo); err != nil {
                       ...
                     }

                The pack methods provided by protobuf library will by default use
                'type.googleapis.com/full.type.name' as the type URL and the unpack
                methods only use the fully qualified type name after the last '/'
                in the type URL, for example "foo.bar.com/x/y.z" will yield type
                name "y.z".


                JSON
                ====
                The JSON representation of an `Any` value uses the regular
                representation of the deserialized, embedded message, with an
                additional field `@type` which contains the type URL. Example:

                    package google.profile;
                    message Person {
                      string first_name = 1;
                      string last_name = 2;
                    }

                    {
                      "@type": "type.googleapis.com/google.profile.Person",
                      "firstName": <string>,
                      "lastName": <string>
                    }

                If the embedded message type is well-known and has a custom JSON
                representation, that representation will be embedded adding a field
                `value` which holds the custom JSON in addition to the `@type`
                field. Example (for message [google.protobuf.Duration][]):

                    {
                      "@type": "type.googleapis.com/google.protobuf.Duration",
                      "value": "1.212s"
                    }
    cosmwasm.wasm.v1.QueryContractsByCodeResponse:
      title: |-
        QueryContractsByCodeResponse is the response type for the
        Query/ContractsByCode RPC method
      type: object
      properties:
        contracts:
          title: contracts are a set of contract addresses
          type: array
          items:
            type: string
        pagination:
          type: object
          properties:
            next_key:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
    cosmwasm.wasm.v1.QueryContractsByCreatorResponse:
      type: object
      properties:
        contract_addresses:
          title: ContractAddresses result set
          type: array
          items:
            type: string
        pagination:
          type: object
          properties:
            next_key:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: Pagination defines the pagination in the response.
      description: |-
        QueryContractsByCreatorResponse is the response type for the
        Query/ContractsByCreator RPC method.
    cosmwasm.wasm.v1.QueryParamsResponse:
      type: object
      properties:
        params:
          type: object
          properties:
            code_upload_access:
              type: object
              properties:
                permission:
                  title: AccessType permission types
                  type: string
                  description: |-
                    - ACCESS_TYPE_UNSPECIFIED: AccessTypeUnspecified placeholder for empty value
                     - ACCESS_TYPE_NOBODY: AccessTypeNobody forbidden
                     - ACCESS_TYPE_EVERYBODY: AccessTypeEverybody unrestricted
                     - ACCESS_TYPE_ANY_OF_ADDRESSES: AccessTypeAnyOfAddresses allow any of the addresses
                  default: ACCESS_TYPE_UNSPECIFIED
                  enum:
                  - ACCESS_TYPE_UNSPECIFIED
                  - ACCESS_TYPE_NOBODY
                  - ACCESS_TYPE_EVERYBODY
                  - ACCESS_TYPE_ANY_OF_ADDRESSES
                addresses:
                  type: array
                  items:
                    type: string
              description: AccessConfig access control type.
            instantiate_default_permission:
              title: AccessType permission types
              type: string
              description: |-
                - ACCESS_TYPE_UNSPECIFIED: AccessTypeUnspecified placeholder for empty value
                 - ACCESS_TYPE_NOBODY: AccessTypeNobody forbidden
                 - ACCESS_TYPE_EVERYBODY: AccessTypeEverybody unrestricted
                 - ACCESS_TYPE_ANY_OF_ADDRESSES: AccessTypeAnyOfAddresses allow any of the addresses
              default: ACCESS_TYPE_UNSPECIFIED
              enum:
              - ACCESS_TYPE_UNSPECIFIED
              - ACCESS_TYPE_NOBODY
              - ACCESS_TYPE_EVERYBODY
              - ACCESS_TYPE_ANY_OF_ADDRESSES
          description: params defines the parameters of the module.
      description: QueryParamsResponse is the response type for the Query/Params RPC
        method.
    cosmwasm.wasm.v1.QueryPinnedCodesResponse:
      title: |-
        QueryPinnedCodesResponse is the response type for the
        Query/PinnedCodes RPC method
      type: object
      properties:
        code_ids:
          type: array
          items:
            type: string
            format: uint64
        pagination:
          type: object
          properties:
            next_key:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
    cosmwasm.wasm.v1.QueryRawContractStateResponse:
      title: |-
        QueryRawContractStateResponse is the response type for the
        Query/RawContractState RPC method
      type: object
      properties:
        data:
          title: Data contains the raw store data
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
    cosmwasm.wasm.v1.QuerySmartContractStateResponse:
      title: |-
        QuerySmartContractStateResponse is the response type for the
        Query/SmartContractState RPC method
      type: object
      properties:
        data:
          title: Data contains the json data returned from the smart contract
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
    ibc.core.channel.v1.Channel:
      type: object
      properties:
        state:
          title: current state of the channel end
          type: string
          description: |-
            State defines if a channel is in one of the following states:
            CLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.

             - STATE_UNINITIALIZED_UNSPECIFIED: Default State
             - STATE_INIT: A channel has just started the opening handshake.
             - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.
             - STATE_OPEN: A channel has completed the handshake. Open channels are
            ready to send and receive packets.
             - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive
            packets.
          default: STATE_UNINITIALIZED_UNSPECIFIED
          enum:
          - STATE_UNINITIALIZED_UNSPECIFIED
          - STATE_INIT
          - STATE_TRYOPEN
          - STATE_OPEN
          - STATE_CLOSED
        ordering:
          title: whether the channel is ordered or unordered
          type: string
          description: |-
            - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering
             - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
            which they were sent.
             - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
          default: ORDER_NONE_UNSPECIFIED
          enum:
          - ORDER_NONE_UNSPECIFIED
          - ORDER_UNORDERED
          - ORDER_ORDERED
        counterparty:
          title: counterparty channel end
          type: object
          properties:
            port_id:
              type: string
              description: port on the counterparty chain which owns the other end
                of the channel.
            channel_id:
              title: channel end on the counterparty chain
              type: string
        connection_hops:
          title: |-
            list of connection identifiers, in order, along which packets sent on
            this channel will travel
          type: array
          items:
            type: string
        version:
          title: "opaque channel version, which is agreed upon during the handshake"
          type: string
      description: |-
        Channel defines pipeline for exactly-once packet delivery between specific
        modules on separate blockchains, which has at least one end capable of
        sending packets and one end capable of receiving packets.
    ibc.core.channel.v1.Counterparty:
      title: Counterparty defines a channel end counterparty
      type: object
      properties:
        port_id:
          type: string
          description: port on the counterparty chain which owns the other end of
            the channel.
        channel_id:
          title: channel end on the counterparty chain
          type: string
    ibc.core.channel.v1.IdentifiedChannel:
      type: object
      properties:
        state:
          title: current state of the channel end
          type: string
          description: |-
            State defines if a channel is in one of the following states:
            CLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.

             - STATE_UNINITIALIZED_UNSPECIFIED: Default State
             - STATE_INIT: A channel has just started the opening handshake.
             - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.
             - STATE_OPEN: A channel has completed the handshake. Open channels are
            ready to send and receive packets.
             - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive
            packets.
          default: STATE_UNINITIALIZED_UNSPECIFIED
          enum:
          - STATE_UNINITIALIZED_UNSPECIFIED
          - STATE_INIT
          - STATE_TRYOPEN
          - STATE_OPEN
          - STATE_CLOSED
        ordering:
          title: whether the channel is ordered or unordered
          type: string
          description: |-
            - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering
             - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
            which they were sent.
             - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
          default: ORDER_NONE_UNSPECIFIED
          enum:
          - ORDER_NONE_UNSPECIFIED
          - ORDER_UNORDERED
          - ORDER_ORDERED
        counterparty:
          title: counterparty channel end
          type: object
          properties:
            port_id:
              type: string
              description: port on the counterparty chain which owns the other end
                of the channel.
            channel_id:
              title: channel end on the counterparty chain
              type: string
        connection_hops:
          title: |-
            list of connection identifiers, in order, along which packets sent on
            this channel will travel
          type: array
          items:
            type: string
        version:
          title: "opaque channel version, which is agreed upon during the handshake"
          type: string
        port_id:
          title: port identifier
          type: string
        channel_id:
          title: channel identifier
          type: string
      description: |-
        IdentifiedChannel defines a channel with additional port and channel
        identifier fields.
    ibc.core.channel.v1.Order:
      title: Order defines if a channel is ORDERED or UNORDERED
      type: string
      description: |-
        - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering
         - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
        which they were sent.
         - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
      default: ORDER_NONE_UNSPECIFIED
      enum:
      - ORDER_NONE_UNSPECIFIED
      - ORDER_UNORDERED
      - ORDER_ORDERED
    ibc.core.channel.v1.PacketState:
      type: object
      properties:
        port_id:
          type: string
          description: channel port identifier.
        channel_id:
          type: string
          description: channel unique identifier.
        sequence:
          type: string
          description: packet sequence.
          format: uint64
        data:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          description: embedded data that represents packet state.
          format: byte
      description: |-
        PacketState defines the generic type necessary to retrieve and store
        packet commitments, acknowledgements, and receipts.
        Caller is responsible for knowing the context necessary to interpret this
        state as a commitment, acknowledgement, or a receipt.
    ibc.core.channel.v1.QueryChannelClientStateResponse:
      title: |-
        QueryChannelClientStateResponse is the Response type for the
        Query/QueryChannelClientState RPC method
      type: object
      properties:
        identified_client_state:
          title: client state associated with the channel
          type: object
          properties:
            client_id:
              title: client identifier
              type: string
            client_state:
              title: client state
              type: object
              properties:
                type_url:
                  type: string
                  description: |-
                    A URL/resource name that uniquely identifies the type of the serialized
                    protocol buffer message. This string must contain at least
                    one "/" character. The last segment of the URL's path must represent
                    the fully qualified name of the type (as in
                    `path/google.protobuf.Duration`). The name should be in a canonical form
                    (e.g., leading "." is not accepted).

                    In practice, teams usually precompile into the binary all types that they
                    expect it to use in the context of Any. However, for URLs which use the
                    scheme `http`, `https`, or no scheme, one can optionally set up a type
                    server that maps type URLs to message definitions as follows:

                    * If no scheme is provided, `https` is assumed.
                    * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the official
                    protobuf release, and it is not used for type URLs beginning with
                    type.googleapis.com.

                    Schemes other than `http`, `https` (or the empty scheme) might be
                    used with implementation specific semantics.
                value:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
              description: |-
                `Any` contains an arbitrary serialized protocol buffer message along with a
                URL that describes the type of the serialized message.

                Protobuf library provides support to pack/unpack Any values in the form
                of utility functions or additional generated methods of the Any type.

                Example 1: Pack and unpack a message in C++.

                    Foo foo = ...;
                    Any any;
                    any.PackFrom(foo);
                    ...
                    if (any.UnpackTo(&foo)) {
                      ...
                    }

                Example 2: Pack and unpack a message in Java.

                    Foo foo = ...;
                    Any any = Any.pack(foo);
                    ...
                    if (any.is(Foo.class)) {
                      foo = any.unpack(Foo.class);
                    }

                 Example 3: Pack and unpack a message in Python.

                    foo = Foo(...)
                    any = Any()
                    any.Pack(foo)
                    ...
                    if any.Is(Foo.DESCRIPTOR):
                      any.Unpack(foo)
                      ...

                 Example 4: Pack and unpack a message in Go

                     foo := &pb.Foo{...}
                     any, err := ptypes.MarshalAny(foo)
                     ...
                     foo := &pb.Foo{}
                     if err := ptypes.UnmarshalAny(any, foo); err != nil {
                       ...
                     }

                The pack methods provided by protobuf library will by default use
                'type.googleapis.com/full.type.name' as the type URL and the unpack
                methods only use the fully qualified type name after the last '/'
                in the type URL, for example "foo.bar.com/x/y.z" will yield type
                name "y.z".


                JSON
                ====
                The JSON representation of an `Any` value uses the regular
                representation of the deserialized, embedded message, with an
                additional field `@type` which contains the type URL. Example:

                    package google.profile;
                    message Person {
                      string first_name = 1;
                      string last_name = 2;
                    }

                    {
                      "@type": "type.googleapis.com/google.profile.Person",
                      "firstName": <string>,
                      "lastName": <string>
                    }

                If the embedded message type is well-known and has a custom JSON
                representation, that representation will be embedded adding a field
                `value` which holds the custom JSON in addition to the `@type`
                field. Example (for message [google.protobuf.Duration][]):

                    {
                      "@type": "type.googleapis.com/google.protobuf.Duration",
                      "value": "1.212s"
                    }
          description: |-
            IdentifiedClientState defines a client state with an additional client
            identifier field.
        proof:
          title: merkle proof of existence
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        proof_height:
          title: height at which the proof was retrieved
          type: object
          properties:
            revision_number:
              title: the revision that the client is currently on
              type: string
              format: uint64
            revision_height:
              title: the height within the given revision
              type: string
              format: uint64
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
    ibc.core.channel.v1.QueryChannelConsensusStateResponse:
      title: |-
        QueryChannelClientStateResponse is the Response type for the
        Query/QueryChannelClientState RPC method
      type: object
      properties:
        consensus_state:
          title: consensus state associated with the channel
          type: object
          properties:
            type_url:
              type: string
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
            value:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

             Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

             Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := ptypes.MarshalAny(foo)
                 ...
                 foo := &pb.Foo{}
                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".


            JSON
            ====
            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
        client_id:
          title: client ID associated with the consensus state
          type: string
        proof:
          title: merkle proof of existence
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        proof_height:
          title: height at which the proof was retrieved
          type: object
          properties:
            revision_number:
              title: the revision that the client is currently on
              type: string
              format: uint64
            revision_height:
              title: the height within the given revision
              type: string
              format: uint64
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
    ibc.core.channel.v1.QueryChannelResponse:
      type: object
      properties:
        channel:
          title: channel associated with the request identifiers
          type: object
          properties:
            state:
              title: current state of the channel end
              type: string
              description: |-
                State defines if a channel is in one of the following states:
                CLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.

                 - STATE_UNINITIALIZED_UNSPECIFIED: Default State
                 - STATE_INIT: A channel has just started the opening handshake.
                 - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.
                 - STATE_OPEN: A channel has completed the handshake. Open channels are
                ready to send and receive packets.
                 - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive
                packets.
              default: STATE_UNINITIALIZED_UNSPECIFIED
              enum:
              - STATE_UNINITIALIZED_UNSPECIFIED
              - STATE_INIT
              - STATE_TRYOPEN
              - STATE_OPEN
              - STATE_CLOSED
            ordering:
              title: whether the channel is ordered or unordered
              type: string
              description: |-
                - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering
                 - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
                which they were sent.
                 - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
              default: ORDER_NONE_UNSPECIFIED
              enum:
              - ORDER_NONE_UNSPECIFIED
              - ORDER_UNORDERED
              - ORDER_ORDERED
            counterparty:
              title: counterparty channel end
              type: object
              properties:
                port_id:
                  type: string
                  description: port on the counterparty chain which owns the other
                    end of the channel.
                channel_id:
                  title: channel end on the counterparty chain
                  type: string
            connection_hops:
              title: |-
                list of connection identifiers, in order, along which packets sent on
                this channel will travel
              type: array
              items:
                type: string
            version:
              title: "opaque channel version, which is agreed upon during the handshake"
              type: string
          description: |-
            Channel defines pipeline for exactly-once packet delivery between specific
            modules on separate blockchains, which has at least one end capable of
            sending packets and one end capable of receiving packets.
        proof:
          title: merkle proof of existence
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        proof_height:
          title: height at which the proof was retrieved
          type: object
          properties:
            revision_number:
              title: the revision that the client is currently on
              type: string
              format: uint64
            revision_height:
              title: the height within the given revision
              type: string
              format: uint64
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
      description: |-
        QueryChannelResponse is the response type for the Query/Channel RPC method.
        Besides the Channel end, it includes a proof and the height from which the
        proof was retrieved.
    ibc.core.channel.v1.QueryChannelsResponse:
      type: object
      properties:
        channels:
          type: array
          description: list of stored channels of the chain.
          items:
            type: object
            properties:
              state:
                title: current state of the channel end
                type: string
                description: |-
                  State defines if a channel is in one of the following states:
                  CLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.

                   - STATE_UNINITIALIZED_UNSPECIFIED: Default State
                   - STATE_INIT: A channel has just started the opening handshake.
                   - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.
                   - STATE_OPEN: A channel has completed the handshake. Open channels are
                  ready to send and receive packets.
                   - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive
                  packets.
                default: STATE_UNINITIALIZED_UNSPECIFIED
                enum:
                - STATE_UNINITIALIZED_UNSPECIFIED
                - STATE_INIT
                - STATE_TRYOPEN
                - STATE_OPEN
                - STATE_CLOSED
              ordering:
                title: whether the channel is ordered or unordered
                type: string
                description: |-
                  - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering
                   - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
                  which they were sent.
                   - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
                default: ORDER_NONE_UNSPECIFIED
                enum:
                - ORDER_NONE_UNSPECIFIED
                - ORDER_UNORDERED
                - ORDER_ORDERED
              counterparty:
                title: counterparty channel end
                type: object
                properties:
                  port_id:
                    type: string
                    description: port on the counterparty chain which owns the other
                      end of the channel.
                  channel_id:
                    title: channel end on the counterparty chain
                    type: string
              connection_hops:
                title: |-
                  list of connection identifiers, in order, along which packets sent on
                  this channel will travel
                type: array
                items:
                  type: string
              version:
                title: "opaque channel version, which is agreed upon during the handshake"
                type: string
              port_id:
                title: port identifier
                type: string
              channel_id:
                title: channel identifier
                type: string
            description: |-
              IdentifiedChannel defines a channel with additional port and channel
              identifier fields.
        pagination:
          title: pagination response
          type: object
          properties:
            next_key:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
        height:
          title: query block height
          type: object
          properties:
            revision_number:
              title: the revision that the client is currently on
              type: string
              format: uint64
            revision_height:
              title: the height within the given revision
              type: string
              format: uint64
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
      description: QueryChannelsResponse is the response type for the Query/Channels
        RPC method.
    ibc.core.channel.v1.QueryConnectionChannelsResponse:
      title: |-
        QueryConnectionChannelsResponse is the Response type for the
        Query/QueryConnectionChannels RPC method
      type: object
      properties:
        channels:
          type: array
          description: list of channels associated with a connection.
          items:
            type: object
            properties:
              state:
                title: current state of the channel end
                type: string
                description: |-
                  State defines if a channel is in one of the following states:
                  CLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.

                   - STATE_UNINITIALIZED_UNSPECIFIED: Default State
                   - STATE_INIT: A channel has just started the opening handshake.
                   - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.
                   - STATE_OPEN: A channel has completed the handshake. Open channels are
                  ready to send and receive packets.
                   - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive
                  packets.
                default: STATE_UNINITIALIZED_UNSPECIFIED
                enum:
                - STATE_UNINITIALIZED_UNSPECIFIED
                - STATE_INIT
                - STATE_TRYOPEN
                - STATE_OPEN
                - STATE_CLOSED
              ordering:
                title: whether the channel is ordered or unordered
                type: string
                description: |-
                  - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering
                   - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
                  which they were sent.
                   - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
                default: ORDER_NONE_UNSPECIFIED
                enum:
                - ORDER_NONE_UNSPECIFIED
                - ORDER_UNORDERED
                - ORDER_ORDERED
              counterparty:
                title: counterparty channel end
                type: object
                properties:
                  port_id:
                    type: string
                    description: port on the counterparty chain which owns the other
                      end of the channel.
                  channel_id:
                    title: channel end on the counterparty chain
                    type: string
              connection_hops:
                title: |-
                  list of connection identifiers, in order, along which packets sent on
                  this channel will travel
                type: array
                items:
                  type: string
              version:
                title: "opaque channel version, which is agreed upon during the handshake"
                type: string
              port_id:
                title: port identifier
                type: string
              channel_id:
                title: channel identifier
                type: string
            description: |-
              IdentifiedChannel defines a channel with additional port and channel
              identifier fields.
        pagination:
          title: pagination response
          type: object
          properties:
            next_key:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
        height:
          title: query block height
          type: object
          properties:
            revision_number:
              title: the revision that the client is currently on
              type: string
              format: uint64
            revision_height:
              title: the height within the given revision
              type: string
              format: uint64
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
    ibc.core.channel.v1.QueryNextSequenceReceiveResponse:
      title: |-
        QuerySequenceResponse is the request type for the
        Query/QueryNextSequenceReceiveResponse RPC method
      type: object
      properties:
        next_sequence_receive:
          title: next sequence receive number
          type: string
          format: uint64
        proof:
          title: merkle proof of existence
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        proof_height:
          title: height at which the proof was retrieved
          type: object
          properties:
            revision_number:
              title: the revision that the client is currently on
              type: string
              format: uint64
            revision_height:
              title: the height within the given revision
              type: string
              format: uint64
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
    ibc.core.channel.v1.QueryPacketAcknowledgementResponse:
      title: |-
        QueryPacketAcknowledgementResponse defines the client query response for a
        packet which also includes a proof and the height from which the
        proof was retrieved
      type: object
      properties:
        acknowledgement:
          title: packet associated with the request fields
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        proof:
          title: merkle proof of existence
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        proof_height:
          title: height at which the proof was retrieved
          type: object
          properties:
            revision_number:
              title: the revision that the client is currently on
              type: string
              format: uint64
            revision_height:
              title: the height within the given revision
              type: string
              format: uint64
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
    ibc.core.channel.v1.QueryPacketAcknowledgementsResponse:
      title: |-
        QueryPacketAcknowledgemetsResponse is the request type for the
        Query/QueryPacketAcknowledgements RPC method
      type: object
      properties:
        acknowledgements:
          type: array
          items:
            type: object
            properties:
              port_id:
                type: string
                description: channel port identifier.
              channel_id:
                type: string
                description: channel unique identifier.
              sequence:
                type: string
                description: packet sequence.
                format: uint64
              data:
                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                type: string
                description: embedded data that represents packet state.
                format: byte
            description: |-
              PacketState defines the generic type necessary to retrieve and store
              packet commitments, acknowledgements, and receipts.
              Caller is responsible for knowing the context necessary to interpret this
              state as a commitment, acknowledgement, or a receipt.
        pagination:
          title: pagination response
          type: object
          properties:
            next_key:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
        height:
          title: query block height
          type: object
          properties:
            revision_number:
              title: the revision that the client is currently on
              type: string
              format: uint64
            revision_height:
              title: the height within the given revision
              type: string
              format: uint64
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
    ibc.core.channel.v1.QueryPacketCommitmentResponse:
      title: |-
        QueryPacketCommitmentResponse defines the client query response for a packet
        which also includes a proof and the height from which the proof was
        retrieved
      type: object
      properties:
        commitment:
          title: packet associated with the request fields
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        proof:
          title: merkle proof of existence
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        proof_height:
          title: height at which the proof was retrieved
          type: object
          properties:
            revision_number:
              title: the revision that the client is currently on
              type: string
              format: uint64
            revision_height:
              title: the height within the given revision
              type: string
              format: uint64
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
    ibc.core.channel.v1.QueryPacketCommitmentsResponse:
      title: |-
        QueryPacketCommitmentsResponse is the request type for the
        Query/QueryPacketCommitments RPC method
      type: object
      properties:
        commitments:
          type: array
          items:
            type: object
            properties:
              port_id:
                type: string
                description: channel port identifier.
              channel_id:
                type: string
                description: channel unique identifier.
              sequence:
                type: string
                description: packet sequence.
                format: uint64
              data:
                pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                type: string
                description: embedded data that represents packet state.
                format: byte
            description: |-
              PacketState defines the generic type necessary to retrieve and store
              packet commitments, acknowledgements, and receipts.
              Caller is responsible for knowing the context necessary to interpret this
              state as a commitment, acknowledgement, or a receipt.
        pagination:
          title: pagination response
          type: object
          properties:
            next_key:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
        height:
          title: query block height
          type: object
          properties:
            revision_number:
              title: the revision that the client is currently on
              type: string
              format: uint64
            revision_height:
              title: the height within the given revision
              type: string
              format: uint64
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
    ibc.core.channel.v1.QueryPacketReceiptResponse:
      title: |-
        QueryPacketReceiptResponse defines the client query response for a packet
        receipt which also includes a proof, and the height from which the proof was
        retrieved
      type: object
      properties:
        received:
          title: success flag for if receipt exists
          type: boolean
        proof:
          title: merkle proof of existence
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        proof_height:
          title: height at which the proof was retrieved
          type: object
          properties:
            revision_number:
              title: the revision that the client is currently on
              type: string
              format: uint64
            revision_height:
              title: the height within the given revision
              type: string
              format: uint64
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
    ibc.core.channel.v1.QueryUnreceivedAcksResponse:
      title: |-
        QueryUnreceivedAcksResponse is the response type for the
        Query/UnreceivedAcks RPC method
      type: object
      properties:
        sequences:
          title: list of unreceived acknowledgement sequences
          type: array
          items:
            type: string
            format: uint64
        height:
          title: query block height
          type: object
          properties:
            revision_number:
              title: the revision that the client is currently on
              type: string
              format: uint64
            revision_height:
              title: the height within the given revision
              type: string
              format: uint64
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
    ibc.core.channel.v1.QueryUnreceivedPacketsResponse:
      title: |-
        QueryUnreceivedPacketsResponse is the response type for the
        Query/UnreceivedPacketCommitments RPC method
      type: object
      properties:
        sequences:
          title: list of unreceived packet sequences
          type: array
          items:
            type: string
            format: uint64
        height:
          title: query block height
          type: object
          properties:
            revision_number:
              title: the revision that the client is currently on
              type: string
              format: uint64
            revision_height:
              title: the height within the given revision
              type: string
              format: uint64
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
    ibc.core.channel.v1.State:
      type: string
      description: |-
        State defines if a channel is in one of the following states:
        CLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.

         - STATE_UNINITIALIZED_UNSPECIFIED: Default State
         - STATE_INIT: A channel has just started the opening handshake.
         - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.
         - STATE_OPEN: A channel has completed the handshake. Open channels are
        ready to send and receive packets.
         - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive
        packets.
      default: STATE_UNINITIALIZED_UNSPECIFIED
      enum:
      - STATE_UNINITIALIZED_UNSPECIFIED
      - STATE_INIT
      - STATE_TRYOPEN
      - STATE_OPEN
      - STATE_CLOSED
    ibc.core.client.v1.Height:
      title: |-
        Height is a monotonically increasing data type
        that can be compared against another Height for the purposes of updating and
        freezing clients
      type: object
      properties:
        revision_number:
          title: the revision that the client is currently on
          type: string
          format: uint64
        revision_height:
          title: the height within the given revision
          type: string
          format: uint64
      description: |-
        Normally the RevisionHeight is incremented at each height while keeping
        RevisionNumber the same. However some consensus algorithms may choose to
        reset the height in certain conditions e.g. hard forks, state-machine
        breaking changes In these cases, the RevisionNumber is incremented so that
        height continues to be monitonically increasing even as the RevisionHeight
        gets reset
    ibc.core.client.v1.IdentifiedClientState:
      type: object
      properties:
        client_id:
          title: client identifier
          type: string
        client_state:
          title: client state
          type: object
          properties:
            type_url:
              type: string
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
            value:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

             Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

             Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := ptypes.MarshalAny(foo)
                 ...
                 foo := &pb.Foo{}
                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".


            JSON
            ====
            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
      description: |-
        IdentifiedClientState defines a client state with an additional client
        identifier field.
    ibc.core.client.v1.ConsensusStateWithHeight:
      type: object
      properties:
        height:
          title: consensus state height
          type: object
          properties:
            revision_number:
              title: the revision that the client is currently on
              type: string
              format: uint64
            revision_height:
              title: the height within the given revision
              type: string
              format: uint64
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
        consensus_state:
          title: consensus state
          type: object
          properties:
            type_url:
              type: string
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
            value:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

             Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

             Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := ptypes.MarshalAny(foo)
                 ...
                 foo := &pb.Foo{}
                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".


            JSON
            ====
            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
      description: |-
        ConsensusStateWithHeight defines a consensus state with an additional height
        field.
    ibc.core.client.v1.Params:
      type: object
      properties:
        allowed_clients:
          type: array
          description: |-
            allowed_clients defines the list of allowed client state types which can be created
            and interacted with. If a client type is removed from the allowed clients list, usage
            of this client will be disabled until it is added again to the list.
          items:
            type: string
      description: Params defines the set of IBC light client parameters.
    ibc.core.client.v1.QueryClientParamsResponse:
      type: object
      properties:
        params:
          type: object
          properties:
            allowed_clients:
              type: array
              description: |-
                allowed_clients defines the list of allowed client state types which can be created
                and interacted with. If a client type is removed from the allowed clients list, usage
                of this client will be disabled until it is added again to the list.
              items:
                type: string
          description: params defines the parameters of the module.
      description: |-
        QueryClientParamsResponse is the response type for the Query/ClientParams RPC
        method.
    ibc.core.client.v1.QueryClientStateResponse:
      type: object
      properties:
        client_state:
          title: client state associated with the request identifier
          type: object
          properties:
            type_url:
              type: string
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
            value:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

             Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

             Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := ptypes.MarshalAny(foo)
                 ...
                 foo := &pb.Foo{}
                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".


            JSON
            ====
            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
        proof:
          title: merkle proof of existence
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        proof_height:
          title: height at which the proof was retrieved
          type: object
          properties:
            revision_number:
              title: the revision that the client is currently on
              type: string
              format: uint64
            revision_height:
              title: the height within the given revision
              type: string
              format: uint64
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
      description: |-
        QueryClientStateResponse is the response type for the Query/ClientState RPC
        method. Besides the client state, it includes a proof and the height from
        which the proof was retrieved.
    ibc.core.client.v1.QueryClientStatesResponse:
      type: object
      properties:
        client_states:
          type: array
          description: list of stored ClientStates of the chain.
          items:
            type: object
            properties:
              client_id:
                title: client identifier
                type: string
              client_state:
                title: client state
                type: object
                properties:
                  type_url:
                    type: string
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                  value:
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                   Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                   Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := ptypes.MarshalAny(foo)
                       ...
                       foo := &pb.Foo{}
                       if err := ptypes.UnmarshalAny(any, foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".


                  JSON
                  ====
                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
            description: |-
              IdentifiedClientState defines a client state with an additional client
              identifier field.
        pagination:
          title: pagination response
          type: object
          properties:
            next_key:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
      description: |-
        QueryClientStatesResponse is the response type for the Query/ClientStates RPC
        method.
    ibc.core.client.v1.QueryClientStatusResponse:
      type: object
      properties:
        status:
          type: string
      description: |-
        QueryClientStatusResponse is the response type for the Query/ClientStatus RPC
        method. It returns the current status of the IBC client.
    ibc.core.client.v1.QueryConsensusStateHeightsResponse:
      title: |-
        QueryConsensusStateHeightsResponse is the response type for the
        Query/ConsensusStateHeights RPC method
      type: object
      properties:
        consensus_state_heights:
          title: consensus state heights
          type: array
          items:
            title: |-
              Height is a monotonically increasing data type
              that can be compared against another Height for the purposes of updating and
              freezing clients
            type: object
            properties:
              revision_number:
                title: the revision that the client is currently on
                type: string
                format: uint64
              revision_height:
                title: the height within the given revision
                type: string
                format: uint64
            description: |-
              Normally the RevisionHeight is incremented at each height while keeping
              RevisionNumber the same. However some consensus algorithms may choose to
              reset the height in certain conditions e.g. hard forks, state-machine
              breaking changes In these cases, the RevisionNumber is incremented so that
              height continues to be monitonically increasing even as the RevisionHeight
              gets reset
        pagination:
          title: pagination response
          type: object
          properties:
            next_key:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
    ibc.core.client.v1.QueryConsensusStateResponse:
      title: |-
        QueryConsensusStateResponse is the response type for the Query/ConsensusState
        RPC method
      type: object
      properties:
        consensus_state:
          title: consensus state associated with the client identifier at the given
            height
          type: object
          properties:
            type_url:
              type: string
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
            value:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

             Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

             Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := ptypes.MarshalAny(foo)
                 ...
                 foo := &pb.Foo{}
                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".


            JSON
            ====
            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
        proof:
          title: merkle proof of existence
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        proof_height:
          title: |-
            Height is a monotonically increasing data type
            that can be compared against another Height for the purposes of updating and
            freezing clients
          type: object
          properties:
            revision_number:
              title: the revision that the client is currently on
              type: string
              format: uint64
            revision_height:
              title: the height within the given revision
              type: string
              format: uint64
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
    ibc.core.client.v1.QueryConsensusStatesResponse:
      title: |-
        QueryConsensusStatesResponse is the response type for the
        Query/ConsensusStates RPC method
      type: object
      properties:
        consensus_states:
          title: consensus states associated with the identifier
          type: array
          items:
            type: object
            properties:
              height:
                title: consensus state height
                type: object
                properties:
                  revision_number:
                    title: the revision that the client is currently on
                    type: string
                    format: uint64
                  revision_height:
                    title: the height within the given revision
                    type: string
                    format: uint64
                description: |-
                  Normally the RevisionHeight is incremented at each height while keeping
                  RevisionNumber the same. However some consensus algorithms may choose to
                  reset the height in certain conditions e.g. hard forks, state-machine
                  breaking changes In these cases, the RevisionNumber is incremented so that
                  height continues to be monitonically increasing even as the RevisionHeight
                  gets reset
              consensus_state:
                title: consensus state
                type: object
                properties:
                  type_url:
                    type: string
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                  value:
                    pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                    type: string
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                   Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                   Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := ptypes.MarshalAny(foo)
                       ...
                       foo := &pb.Foo{}
                       if err := ptypes.UnmarshalAny(any, foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".


                  JSON
                  ====
                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
            description: |-
              ConsensusStateWithHeight defines a consensus state with an additional height
              field.
        pagination:
          title: pagination response
          type: object
          properties:
            next_key:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
    ibc.core.client.v1.QueryUpgradedClientStateResponse:
      type: object
      properties:
        upgraded_client_state:
          title: client state associated with the request identifier
          type: object
          properties:
            type_url:
              type: string
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
            value:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

             Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

             Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := ptypes.MarshalAny(foo)
                 ...
                 foo := &pb.Foo{}
                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".


            JSON
            ====
            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
      description: |-
        QueryUpgradedClientStateResponse is the response type for the
        Query/UpgradedClientState RPC method.
    ibc.core.client.v1.QueryUpgradedConsensusStateResponse:
      type: object
      properties:
        upgraded_consensus_state:
          title: Consensus state associated with the request identifier
          type: object
          properties:
            type_url:
              type: string
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
            value:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

             Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

             Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := ptypes.MarshalAny(foo)
                 ...
                 foo := &pb.Foo{}
                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".


            JSON
            ====
            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
      description: |-
        QueryUpgradedConsensusStateResponse is the response type for the
        Query/UpgradedConsensusState RPC method.
    ibc.core.commitment.v1.MerklePrefix:
      title: |-
        MerklePrefix is merkle path prefixed to the key.
        The constructed key from the Path and the key will be append(Path.KeyPath,
        append(Path.KeyPrefix, key...))
      type: object
      properties:
        key_prefix:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
    ibc.core.connection.v1.ConnectionEnd:
      type: object
      properties:
        client_id:
          type: string
          description: client associated with this connection.
        versions:
          type: array
          description: |-
            IBC version which can be utilised to determine encodings or protocols for
            channels or packets utilising this connection.
          items:
            type: object
            properties:
              identifier:
                title: unique version identifier
                type: string
              features:
                title: list of features compatible with the specified identifier
                type: array
                items:
                  type: string
            description: |-
              Version defines the versioning scheme used to negotiate the IBC verison in
              the connection handshake.
        state:
          type: string
          description: current state of the connection end.
          default: STATE_UNINITIALIZED_UNSPECIFIED
          enum:
          - STATE_UNINITIALIZED_UNSPECIFIED
          - STATE_INIT
          - STATE_TRYOPEN
          - STATE_OPEN
        counterparty:
          type: object
          properties:
            client_id:
              type: string
              description: |-
                identifies the client on the counterparty chain associated with a given
                connection.
            connection_id:
              type: string
              description: |-
                identifies the connection end on the counterparty chain associated with a
                given connection.
            prefix:
              title: |-
                MerklePrefix is merkle path prefixed to the key.
                The constructed key from the Path and the key will be append(Path.KeyPath,
                append(Path.KeyPrefix, key...))
              type: object
              properties:
                key_prefix:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
              description: commitment merkle prefix of the counterparty chain.
          description: counterparty chain associated with this connection.
        delay_period:
          type: string
          description: |-
            delay period that must pass before a consensus state can be used for
            packet-verification NOTE: delay period logic is only implemented by some
            clients.
          format: uint64
      description: |-
        ConnectionEnd defines a stateful object on a chain connected to another
        separate one.
        NOTE: there must only be 2 defined ConnectionEnds to establish
        a connection between two chains.
    ibc.core.connection.v1.Counterparty:
      type: object
      properties:
        client_id:
          type: string
          description: |-
            identifies the client on the counterparty chain associated with a given
            connection.
        connection_id:
          type: string
          description: |-
            identifies the connection end on the counterparty chain associated with a
            given connection.
        prefix:
          title: |-
            MerklePrefix is merkle path prefixed to the key.
            The constructed key from the Path and the key will be append(Path.KeyPath,
            append(Path.KeyPrefix, key...))
          type: object
          properties:
            key_prefix:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
          description: commitment merkle prefix of the counterparty chain.
      description: Counterparty defines the counterparty chain associated with a connection
        end.
    ibc.core.connection.v1.IdentifiedConnection:
      type: object
      properties:
        id:
          type: string
          description: connection identifier.
        client_id:
          type: string
          description: client associated with this connection.
        versions:
          title: |-
            IBC version which can be utilised to determine encodings or protocols for
            channels or packets utilising this connection
          type: array
          items:
            type: object
            properties:
              identifier:
                title: unique version identifier
                type: string
              features:
                title: list of features compatible with the specified identifier
                type: array
                items:
                  type: string
            description: |-
              Version defines the versioning scheme used to negotiate the IBC verison in
              the connection handshake.
        state:
          type: string
          description: current state of the connection end.
          default: STATE_UNINITIALIZED_UNSPECIFIED
          enum:
          - STATE_UNINITIALIZED_UNSPECIFIED
          - STATE_INIT
          - STATE_TRYOPEN
          - STATE_OPEN
        counterparty:
          type: object
          properties:
            client_id:
              type: string
              description: |-
                identifies the client on the counterparty chain associated with a given
                connection.
            connection_id:
              type: string
              description: |-
                identifies the connection end on the counterparty chain associated with a
                given connection.
            prefix:
              title: |-
                MerklePrefix is merkle path prefixed to the key.
                The constructed key from the Path and the key will be append(Path.KeyPath,
                append(Path.KeyPrefix, key...))
              type: object
              properties:
                key_prefix:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
              description: commitment merkle prefix of the counterparty chain.
          description: counterparty chain associated with this connection.
        delay_period:
          type: string
          description: delay period associated with this connection.
          format: uint64
      description: |-
        IdentifiedConnection defines a connection with additional connection
        identifier field.
    ibc.core.connection.v1.Params:
      type: object
      properties:
        max_expected_time_per_block:
          type: string
          description: |-
            maximum expected time per block (in nanoseconds), used to enforce block delay. This parameter should reflect the
            largest amount of time that the chain might reasonably take to produce the next block under normal operating
            conditions. A safe choice is 3-5x the expected time per block.
          format: uint64
      description: Params defines the set of Connection parameters.
    ibc.core.connection.v1.QueryClientConnectionsResponse:
      title: |-
        QueryClientConnectionsResponse is the response type for the
        Query/ClientConnections RPC method
      type: object
      properties:
        connection_paths:
          type: array
          description: slice of all the connection paths associated with a client.
          items:
            type: string
        proof:
          title: merkle proof of existence
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        proof_height:
          title: height at which the proof was generated
          type: object
          properties:
            revision_number:
              title: the revision that the client is currently on
              type: string
              format: uint64
            revision_height:
              title: the height within the given revision
              type: string
              format: uint64
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
    ibc.core.connection.v1.QueryConnectionClientStateResponse:
      title: |-
        QueryConnectionClientStateResponse is the response type for the
        Query/ConnectionClientState RPC method
      type: object
      properties:
        identified_client_state:
          title: client state associated with the channel
          type: object
          properties:
            client_id:
              title: client identifier
              type: string
            client_state:
              title: client state
              type: object
              properties:
                type_url:
                  type: string
                  description: |-
                    A URL/resource name that uniquely identifies the type of the serialized
                    protocol buffer message. This string must contain at least
                    one "/" character. The last segment of the URL's path must represent
                    the fully qualified name of the type (as in
                    `path/google.protobuf.Duration`). The name should be in a canonical form
                    (e.g., leading "." is not accepted).

                    In practice, teams usually precompile into the binary all types that they
                    expect it to use in the context of Any. However, for URLs which use the
                    scheme `http`, `https`, or no scheme, one can optionally set up a type
                    server that maps type URLs to message definitions as follows:

                    * If no scheme is provided, `https` is assumed.
                    * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the official
                    protobuf release, and it is not used for type URLs beginning with
                    type.googleapis.com.

                    Schemes other than `http`, `https` (or the empty scheme) might be
                    used with implementation specific semantics.
                value:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
              description: |-
                `Any` contains an arbitrary serialized protocol buffer message along with a
                URL that describes the type of the serialized message.

                Protobuf library provides support to pack/unpack Any values in the form
                of utility functions or additional generated methods of the Any type.

                Example 1: Pack and unpack a message in C++.

                    Foo foo = ...;
                    Any any;
                    any.PackFrom(foo);
                    ...
                    if (any.UnpackTo(&foo)) {
                      ...
                    }

                Example 2: Pack and unpack a message in Java.

                    Foo foo = ...;
                    Any any = Any.pack(foo);
                    ...
                    if (any.is(Foo.class)) {
                      foo = any.unpack(Foo.class);
                    }

                 Example 3: Pack and unpack a message in Python.

                    foo = Foo(...)
                    any = Any()
                    any.Pack(foo)
                    ...
                    if any.Is(Foo.DESCRIPTOR):
                      any.Unpack(foo)
                      ...

                 Example 4: Pack and unpack a message in Go

                     foo := &pb.Foo{...}
                     any, err := ptypes.MarshalAny(foo)
                     ...
                     foo := &pb.Foo{}
                     if err := ptypes.UnmarshalAny(any, foo); err != nil {
                       ...
                     }

                The pack methods provided by protobuf library will by default use
                'type.googleapis.com/full.type.name' as the type URL and the unpack
                methods only use the fully qualified type name after the last '/'
                in the type URL, for example "foo.bar.com/x/y.z" will yield type
                name "y.z".


                JSON
                ====
                The JSON representation of an `Any` value uses the regular
                representation of the deserialized, embedded message, with an
                additional field `@type` which contains the type URL. Example:

                    package google.profile;
                    message Person {
                      string first_name = 1;
                      string last_name = 2;
                    }

                    {
                      "@type": "type.googleapis.com/google.profile.Person",
                      "firstName": <string>,
                      "lastName": <string>
                    }

                If the embedded message type is well-known and has a custom JSON
                representation, that representation will be embedded adding a field
                `value` which holds the custom JSON in addition to the `@type`
                field. Example (for message [google.protobuf.Duration][]):

                    {
                      "@type": "type.googleapis.com/google.protobuf.Duration",
                      "value": "1.212s"
                    }
          description: |-
            IdentifiedClientState defines a client state with an additional client
            identifier field.
        proof:
          title: merkle proof of existence
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        proof_height:
          title: height at which the proof was retrieved
          type: object
          properties:
            revision_number:
              title: the revision that the client is currently on
              type: string
              format: uint64
            revision_height:
              title: the height within the given revision
              type: string
              format: uint64
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
    ibc.core.connection.v1.QueryConnectionConsensusStateResponse:
      title: |-
        QueryConnectionConsensusStateResponse is the response type for the
        Query/ConnectionConsensusState RPC method
      type: object
      properties:
        consensus_state:
          title: consensus state associated with the channel
          type: object
          properties:
            type_url:
              type: string
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
            value:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

             Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

             Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := ptypes.MarshalAny(foo)
                 ...
                 foo := &pb.Foo{}
                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".


            JSON
            ====
            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
        client_id:
          title: client ID associated with the consensus state
          type: string
        proof:
          title: merkle proof of existence
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        proof_height:
          title: height at which the proof was retrieved
          type: object
          properties:
            revision_number:
              title: the revision that the client is currently on
              type: string
              format: uint64
            revision_height:
              title: the height within the given revision
              type: string
              format: uint64
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
    ibc.core.connection.v1.QueryConnectionParamsResponse:
      type: object
      properties:
        params:
          type: object
          properties:
            max_expected_time_per_block:
              type: string
              description: |-
                maximum expected time per block (in nanoseconds), used to enforce block delay. This parameter should reflect the
                largest amount of time that the chain might reasonably take to produce the next block under normal operating
                conditions. A safe choice is 3-5x the expected time per block.
              format: uint64
          description: params defines the parameters of the module.
      description: QueryConnectionParamsResponse is the response type for the Query/ConnectionParams
        RPC method.
    ibc.core.connection.v1.QueryConnectionResponse:
      type: object
      properties:
        connection:
          title: connection associated with the request identifier
          type: object
          properties:
            client_id:
              type: string
              description: client associated with this connection.
            versions:
              type: array
              description: |-
                IBC version which can be utilised to determine encodings or protocols for
                channels or packets utilising this connection.
              items:
                type: object
                properties:
                  identifier:
                    title: unique version identifier
                    type: string
                  features:
                    title: list of features compatible with the specified identifier
                    type: array
                    items:
                      type: string
                description: |-
                  Version defines the versioning scheme used to negotiate the IBC verison in
                  the connection handshake.
            state:
              type: string
              description: current state of the connection end.
              default: STATE_UNINITIALIZED_UNSPECIFIED
              enum:
              - STATE_UNINITIALIZED_UNSPECIFIED
              - STATE_INIT
              - STATE_TRYOPEN
              - STATE_OPEN
            counterparty:
              type: object
              properties:
                client_id:
                  type: string
                  description: |-
                    identifies the client on the counterparty chain associated with a given
                    connection.
                connection_id:
                  type: string
                  description: |-
                    identifies the connection end on the counterparty chain associated with a
                    given connection.
                prefix:
                  title: |-
                    MerklePrefix is merkle path prefixed to the key.
                    The constructed key from the Path and the key will be append(Path.KeyPath,
                    append(Path.KeyPrefix, key...))
                  type: object
                  properties:
                    key_prefix:
                      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                      type: string
                      format: byte
                  description: commitment merkle prefix of the counterparty chain.
              description: counterparty chain associated with this connection.
            delay_period:
              type: string
              description: |-
                delay period that must pass before a consensus state can be used for
                packet-verification NOTE: delay period logic is only implemented by some
                clients.
              format: uint64
          description: |-
            ConnectionEnd defines a stateful object on a chain connected to another
            separate one.
            NOTE: there must only be 2 defined ConnectionEnds to establish
            a connection between two chains.
        proof:
          title: merkle proof of existence
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        proof_height:
          title: height at which the proof was retrieved
          type: object
          properties:
            revision_number:
              title: the revision that the client is currently on
              type: string
              format: uint64
            revision_height:
              title: the height within the given revision
              type: string
              format: uint64
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
      description: |-
        QueryConnectionResponse is the response type for the Query/Connection RPC
        method. Besides the connection end, it includes a proof and the height from
        which the proof was retrieved.
    ibc.core.connection.v1.QueryConnectionsResponse:
      type: object
      properties:
        connections:
          type: array
          description: list of stored connections of the chain.
          items:
            type: object
            properties:
              id:
                type: string
                description: connection identifier.
              client_id:
                type: string
                description: client associated with this connection.
              versions:
                title: |-
                  IBC version which can be utilised to determine encodings or protocols for
                  channels or packets utilising this connection
                type: array
                items:
                  type: object
                  properties:
                    identifier:
                      title: unique version identifier
                      type: string
                    features:
                      title: list of features compatible with the specified identifier
                      type: array
                      items:
                        type: string
                  description: |-
                    Version defines the versioning scheme used to negotiate the IBC verison in
                    the connection handshake.
              state:
                type: string
                description: current state of the connection end.
                default: STATE_UNINITIALIZED_UNSPECIFIED
                enum:
                - STATE_UNINITIALIZED_UNSPECIFIED
                - STATE_INIT
                - STATE_TRYOPEN
                - STATE_OPEN
              counterparty:
                type: object
                properties:
                  client_id:
                    type: string
                    description: |-
                      identifies the client on the counterparty chain associated with a given
                      connection.
                  connection_id:
                    type: string
                    description: |-
                      identifies the connection end on the counterparty chain associated with a
                      given connection.
                  prefix:
                    title: |-
                      MerklePrefix is merkle path prefixed to the key.
                      The constructed key from the Path and the key will be append(Path.KeyPath,
                      append(Path.KeyPrefix, key...))
                    type: object
                    properties:
                      key_prefix:
                        pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                        type: string
                        format: byte
                    description: commitment merkle prefix of the counterparty chain.
                description: counterparty chain associated with this connection.
              delay_period:
                type: string
                description: delay period associated with this connection.
                format: uint64
            description: |-
              IdentifiedConnection defines a connection with additional connection
              identifier field.
        pagination:
          title: pagination response
          type: object
          properties:
            next_key:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
        height:
          title: query block height
          type: object
          properties:
            revision_number:
              title: the revision that the client is currently on
              type: string
              format: uint64
            revision_height:
              title: the height within the given revision
              type: string
              format: uint64
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
      description: |-
        QueryConnectionsResponse is the response type for the Query/Connections RPC
        method.
    ibc.core.connection.v1.State:
      type: string
      description: |-
        State defines if a connection is in one of the following states:
        INIT, TRYOPEN, OPEN or UNINITIALIZED.

         - STATE_UNINITIALIZED_UNSPECIFIED: Default State
         - STATE_INIT: A connection end has just started the opening handshake.
         - STATE_TRYOPEN: A connection end has acknowledged the handshake step on the counterparty
        chain.
         - STATE_OPEN: A connection end has completed the handshake.
      default: STATE_UNINITIALIZED_UNSPECIFIED
      enum:
      - STATE_UNINITIALIZED_UNSPECIFIED
      - STATE_INIT
      - STATE_TRYOPEN
      - STATE_OPEN
    ibc.core.connection.v1.Version:
      type: object
      properties:
        identifier:
          title: unique version identifier
          type: string
        features:
          title: list of features compatible with the specified identifier
          type: array
          items:
            type: string
      description: |-
        Version defines the versioning scheme used to negotiate the IBC verison in
        the connection handshake.
    ibc.applications.transfer.v1.DenomTrace:
      type: object
      properties:
        path:
          type: string
          description: |-
            path defines the chain of port/channel identifiers used for tracing the
            source of the fungible token.
        base_denom:
          type: string
          description: base denomination of the relayed fungible token.
      description: |-
        DenomTrace contains the base denomination for ICS20 fungible tokens and the
        source tracing information path.
    ibc.applications.transfer.v1.Params:
      type: object
      properties:
        send_enabled:
          type: boolean
          description: |-
            send_enabled enables or disables all cross-chain token transfers from this
            chain.
        receive_enabled:
          type: boolean
          description: |-
            receive_enabled enables or disables all cross-chain token transfers to this
            chain.
      description: |-
        Params defines the set of IBC transfer parameters.
        NOTE: To prevent a single token from being transferred, set the
        TransfersEnabled parameter to true and then set the bank module's SendEnabled
        parameter for the denomination to false.
    ibc.applications.transfer.v1.QueryDenomHashResponse:
      type: object
      properties:
        hash:
          type: string
          description: hash (in hex format) of the denomination trace information.
      description: |-
        QueryDenomHashResponse is the response type for the Query/DenomHash RPC
        method.
    ibc.applications.transfer.v1.QueryDenomTraceResponse:
      type: object
      properties:
        denom_trace:
          type: object
          properties:
            path:
              type: string
              description: |-
                path defines the chain of port/channel identifiers used for tracing the
                source of the fungible token.
            base_denom:
              type: string
              description: base denomination of the relayed fungible token.
          description: |-
            DenomTrace contains the base denomination for ICS20 fungible tokens and the
            source tracing information path.
      description: |-
        QueryDenomTraceResponse is the response type for the Query/DenomTrace RPC
        method.
    ibc.applications.transfer.v1.QueryDenomTracesResponse:
      type: object
      properties:
        denom_traces:
          type: array
          description: denom_traces returns all denominations trace information.
          items:
            type: object
            properties:
              path:
                type: string
                description: |-
                  path defines the chain of port/channel identifiers used for tracing the
                  source of the fungible token.
              base_denom:
                type: string
                description: base denomination of the relayed fungible token.
            description: |-
              DenomTrace contains the base denomination for ICS20 fungible tokens and the
              source tracing information path.
        pagination:
          type: object
          properties:
            next_key:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
      description: |-
        QueryConnectionsResponse is the response type for the Query/DenomTraces RPC
        method.
    ibc.applications.transfer.v1.QueryEscrowAddressResponse:
      type: object
      properties:
        escrow_address:
          title: the escrow account address
          type: string
      description: QueryEscrowAddressResponse is the response type of the EscrowAddress
        RPC method.
    ibc.applications.transfer.v1.QueryParamsResponse:
      type: object
      properties:
        params:
          type: object
          properties:
            send_enabled:
              type: boolean
              description: |-
                send_enabled enables or disables all cross-chain token transfers from this
                chain.
            receive_enabled:
              type: boolean
              description: |-
                receive_enabled enables or disables all cross-chain token transfers to this
                chain.
          description: params defines the parameters of the module.
      description: QueryParamsResponse is the response type for the Query/Params RPC
        method.
    ibc.applications.transfer.v1.QueryTotalEscrowForDenomResponse:
      type: object
      properties:
        amount:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
      description: QueryTotalEscrowForDenomResponse is the response type for TotalEscrowForDenom
        RPC method.
    ibc.applications.fee.v1.Fee:
      title: "Fee defines the ICS29 receive, acknowledgement and timeout fees"
      type: object
      properties:
        recv_fee:
          title: the packet receive fee
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
        ack_fee:
          title: the packet acknowledgement fee
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
        timeout_fee:
          title: the packet timeout fee
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
    ibc.applications.fee.v1.FeeEnabledChannel:
      title: FeeEnabledChannel contains the PortID & ChannelID for a fee enabled channel
      type: object
      properties:
        port_id:
          title: unique port identifier
          type: string
        channel_id:
          title: unique channel identifier
          type: string
    ibc.applications.fee.v1.IdentifiedPacketFees:
      title: IdentifiedPacketFees contains a list of type PacketFee and associated
        PacketId
      type: object
      properties:
        packet_id:
          title: "unique packet identifier comprised of the channel ID, port ID and\
            \ sequence"
          type: object
          properties:
            port_id:
              title: channel port identifier
              type: string
            channel_id:
              title: channel unique identifier
              type: string
            sequence:
              title: packet sequence
              type: string
              format: uint64
        packet_fees:
          title: list of packet fees
          type: array
          items:
            title: "PacketFee contains ICS29 relayer fees, refund address and optional\
              \ list of permitted relayers"
            type: object
            properties:
              fee:
                title: "fee encapsulates the recv, ack and timeout fees associated\
                  \ with an IBC packet"
                type: object
                properties:
                  recv_fee:
                    title: the packet receive fee
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: |-
                        Coin defines a token with a denomination and an amount.

                        NOTE: The amount field is an Int which implements the custom method
                        signatures required by gogoproto.
                  ack_fee:
                    title: the packet acknowledgement fee
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: |-
                        Coin defines a token with a denomination and an amount.

                        NOTE: The amount field is an Int which implements the custom method
                        signatures required by gogoproto.
                  timeout_fee:
                    title: the packet timeout fee
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: |-
                        Coin defines a token with a denomination and an amount.

                        NOTE: The amount field is an Int which implements the custom method
                        signatures required by gogoproto.
              refund_address:
                title: the refund address for unspent fees
                type: string
              relayers:
                title: optional list of relayers permitted to receive fees
                type: array
                items:
                  type: string
    ibc.applications.fee.v1.PacketFee:
      title: "PacketFee contains ICS29 relayer fees, refund address and optional list\
        \ of permitted relayers"
      type: object
      properties:
        fee:
          title: "fee encapsulates the recv, ack and timeout fees associated with\
            \ an IBC packet"
          type: object
          properties:
            recv_fee:
              title: the packet receive fee
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
            ack_fee:
              title: the packet acknowledgement fee
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
            timeout_fee:
              title: the packet timeout fee
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
        refund_address:
          title: the refund address for unspent fees
          type: string
        relayers:
          title: optional list of relayers permitted to receive fees
          type: array
          items:
            type: string
    ibc.applications.fee.v1.QueryCounterpartyPayeeResponse:
      title: QueryCounterpartyPayeeResponse defines the response type for the CounterpartyPayee
        rpc
      type: object
      properties:
        counterparty_payee:
          title: the counterparty payee address used to compensate forward relaying
          type: string
    ibc.applications.fee.v1.QueryFeeEnabledChannelResponse:
      title: QueryFeeEnabledChannelResponse defines the response type for the FeeEnabledChannel
        rpc
      type: object
      properties:
        fee_enabled:
          title: boolean flag representing the fee enabled channel status
          type: boolean
    ibc.applications.fee.v1.QueryFeeEnabledChannelsResponse:
      title: QueryFeeEnabledChannelsResponse defines the response type for the FeeEnabledChannels
        rpc
      type: object
      properties:
        fee_enabled_channels:
          title: list of fee enabled channels
          type: array
          items:
            title: FeeEnabledChannel contains the PortID & ChannelID for a fee enabled
              channel
            type: object
            properties:
              port_id:
                title: unique port identifier
                type: string
              channel_id:
                title: unique channel identifier
                type: string
    ibc.applications.fee.v1.QueryIncentivizedPacketResponse:
      title: QueryIncentivizedPacketsResponse defines the response type for the IncentivizedPacket
        rpc
      type: object
      properties:
        incentivized_packet:
          title: IdentifiedPacketFees contains a list of type PacketFee and associated
            PacketId
          type: object
          properties:
            packet_id:
              title: "unique packet identifier comprised of the channel ID, port ID\
                \ and sequence"
              type: object
              properties:
                port_id:
                  title: channel port identifier
                  type: string
                channel_id:
                  title: channel unique identifier
                  type: string
                sequence:
                  title: packet sequence
                  type: string
                  format: uint64
            packet_fees:
              title: list of packet fees
              type: array
              items:
                title: "PacketFee contains ICS29 relayer fees, refund address and\
                  \ optional list of permitted relayers"
                type: object
                properties:
                  fee:
                    title: "fee encapsulates the recv, ack and timeout fees associated\
                      \ with an IBC packet"
                    type: object
                    properties:
                      recv_fee:
                        title: the packet receive fee
                        type: array
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: |-
                            Coin defines a token with a denomination and an amount.

                            NOTE: The amount field is an Int which implements the custom method
                            signatures required by gogoproto.
                      ack_fee:
                        title: the packet acknowledgement fee
                        type: array
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: |-
                            Coin defines a token with a denomination and an amount.

                            NOTE: The amount field is an Int which implements the custom method
                            signatures required by gogoproto.
                      timeout_fee:
                        title: the packet timeout fee
                        type: array
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: |-
                            Coin defines a token with a denomination and an amount.

                            NOTE: The amount field is an Int which implements the custom method
                            signatures required by gogoproto.
                  refund_address:
                    title: the refund address for unspent fees
                    type: string
                  relayers:
                    title: optional list of relayers permitted to receive fees
                    type: array
                    items:
                      type: string
    ibc.applications.fee.v1.QueryIncentivizedPacketsForChannelResponse:
      title: QueryIncentivizedPacketsResponse defines the response type for the incentivized
        packets RPC
      type: object
      properties:
        incentivized_packets:
          title: Map of all incentivized_packets
          type: array
          items:
            title: IdentifiedPacketFees contains a list of type PacketFee and associated
              PacketId
            type: object
            properties:
              packet_id:
                title: "unique packet identifier comprised of the channel ID, port\
                  \ ID and sequence"
                type: object
                properties:
                  port_id:
                    title: channel port identifier
                    type: string
                  channel_id:
                    title: channel unique identifier
                    type: string
                  sequence:
                    title: packet sequence
                    type: string
                    format: uint64
              packet_fees:
                title: list of packet fees
                type: array
                items:
                  title: "PacketFee contains ICS29 relayer fees, refund address and\
                    \ optional list of permitted relayers"
                  type: object
                  properties:
                    fee:
                      title: "fee encapsulates the recv, ack and timeout fees associated\
                        \ with an IBC packet"
                      type: object
                      properties:
                        recv_fee:
                          title: the packet receive fee
                          type: array
                          items:
                            type: object
                            properties:
                              denom:
                                type: string
                              amount:
                                type: string
                            description: |-
                              Coin defines a token with a denomination and an amount.

                              NOTE: The amount field is an Int which implements the custom method
                              signatures required by gogoproto.
                        ack_fee:
                          title: the packet acknowledgement fee
                          type: array
                          items:
                            type: object
                            properties:
                              denom:
                                type: string
                              amount:
                                type: string
                            description: |-
                              Coin defines a token with a denomination and an amount.

                              NOTE: The amount field is an Int which implements the custom method
                              signatures required by gogoproto.
                        timeout_fee:
                          title: the packet timeout fee
                          type: array
                          items:
                            type: object
                            properties:
                              denom:
                                type: string
                              amount:
                                type: string
                            description: |-
                              Coin defines a token with a denomination and an amount.

                              NOTE: The amount field is an Int which implements the custom method
                              signatures required by gogoproto.
                    refund_address:
                      title: the refund address for unspent fees
                      type: string
                    relayers:
                      title: optional list of relayers permitted to receive fees
                      type: array
                      items:
                        type: string
    ibc.applications.fee.v1.QueryIncentivizedPacketsResponse:
      title: QueryIncentivizedPacketsResponse defines the response type for the IncentivizedPackets
        rpc
      type: object
      properties:
        incentivized_packets:
          title: list of identified fees for incentivized packets
          type: array
          items:
            title: IdentifiedPacketFees contains a list of type PacketFee and associated
              PacketId
            type: object
            properties:
              packet_id:
                title: "unique packet identifier comprised of the channel ID, port\
                  \ ID and sequence"
                type: object
                properties:
                  port_id:
                    title: channel port identifier
                    type: string
                  channel_id:
                    title: channel unique identifier
                    type: string
                  sequence:
                    title: packet sequence
                    type: string
                    format: uint64
              packet_fees:
                title: list of packet fees
                type: array
                items:
                  title: "PacketFee contains ICS29 relayer fees, refund address and\
                    \ optional list of permitted relayers"
                  type: object
                  properties:
                    fee:
                      title: "fee encapsulates the recv, ack and timeout fees associated\
                        \ with an IBC packet"
                      type: object
                      properties:
                        recv_fee:
                          title: the packet receive fee
                          type: array
                          items:
                            type: object
                            properties:
                              denom:
                                type: string
                              amount:
                                type: string
                            description: |-
                              Coin defines a token with a denomination and an amount.

                              NOTE: The amount field is an Int which implements the custom method
                              signatures required by gogoproto.
                        ack_fee:
                          title: the packet acknowledgement fee
                          type: array
                          items:
                            type: object
                            properties:
                              denom:
                                type: string
                              amount:
                                type: string
                            description: |-
                              Coin defines a token with a denomination and an amount.

                              NOTE: The amount field is an Int which implements the custom method
                              signatures required by gogoproto.
                        timeout_fee:
                          title: the packet timeout fee
                          type: array
                          items:
                            type: object
                            properties:
                              denom:
                                type: string
                              amount:
                                type: string
                            description: |-
                              Coin defines a token with a denomination and an amount.

                              NOTE: The amount field is an Int which implements the custom method
                              signatures required by gogoproto.
                    refund_address:
                      title: the refund address for unspent fees
                      type: string
                    relayers:
                      title: optional list of relayers permitted to receive fees
                      type: array
                      items:
                        type: string
    ibc.applications.fee.v1.QueryPayeeResponse:
      title: QueryPayeeResponse defines the response type for the Payee rpc
      type: object
      properties:
        payee_address:
          title: the payee address to which packet fees are paid out
          type: string
    ibc.applications.fee.v1.QueryTotalAckFeesResponse:
      title: QueryTotalAckFeesResponse defines the response type for the TotalAckFees
        rpc
      type: object
      properties:
        ack_fees:
          title: the total packet acknowledgement fees
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
    ibc.applications.fee.v1.QueryTotalRecvFeesResponse:
      title: QueryTotalRecvFeesResponse defines the response type for the TotalRecvFees
        rpc
      type: object
      properties:
        recv_fees:
          title: the total packet receive fees
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
    ibc.applications.fee.v1.QueryTotalTimeoutFeesResponse:
      title: QueryTotalTimeoutFeesResponse defines the response type for the TotalTimeoutFees
        rpc
      type: object
      properties:
        timeout_fees:
          title: the total packet timeout fees
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
    ibc.core.channel.v1.PacketId:
      title: |-
        PacketId is an identifer for a unique Packet
        Source chains refer to packets by source port/channel
        Destination chains refer to packets by destination port/channel
      type: object
      properties:
        port_id:
          title: channel port identifier
          type: string
        channel_id:
          title: channel unique identifier
          type: string
        sequence:
          title: packet sequence
          type: string
          format: uint64
    router.v1.Params:
      type: object
      properties:
        fee_percentage:
          type: string
      description: Params defines the set of IBC router parameters.
    router.v1.QueryParamsResponse:
      type: object
      properties:
        params:
          type: object
          properties:
            fee_percentage:
              type: string
          description: params defines the parameters of the module.
      description: QueryParamsResponse is the response type for the Query/Params RPC
        method.
    pob.builder.v1.Params:
      type: object
      properties:
        max_bundle_size:
          type: integer
          description: |-
            max_bundle_size is the maximum number of transactions that can be bundled
            in a single bundle.
          format: int64
        escrow_account_address:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          description: |-
            escrow_account_address is the address of the account that will receive a
            portion of the bid proceeds.
          format: byte
        reserve_fee:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: reserve_fee specifies the bid floor for the auction.
        min_bid_increment:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            min_bid_increment specifies the minimum amount that the next bid must be
            greater than the previous bid.
        front_running_protection:
          type: boolean
          description: |-
            front_running_protection specifies whether front running and sandwich
            attack protection is enabled.
        proposer_fee:
          type: string
          description: |-
            proposer_fee defines the portion of the winning bid that goes to the block
            proposer that proposed the block.
      description: Params defines the parameters of the x/builder module.
    pob.builder.v1.QueryParamsResponse:
      type: object
      properties:
        params:
          type: object
          properties:
            max_bundle_size:
              type: integer
              description: |-
                max_bundle_size is the maximum number of transactions that can be bundled
                in a single bundle.
              format: int64
            escrow_account_address:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                escrow_account_address is the address of the account that will receive a
                portion of the bid proceeds.
              format: byte
            reserve_fee:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: reserve_fee specifies the bid floor for the auction.
            min_bid_increment:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: |-
                min_bid_increment specifies the minimum amount that the next bid must be
                greater than the previous bid.
            front_running_protection:
              type: boolean
              description: |-
                front_running_protection specifies whether front running and sandwich
                attack protection is enabled.
            proposer_fee:
              type: string
              description: |-
                proposer_fee defines the portion of the winning bid that goes to the block
                proposer that proposed the block.
          description: params defines the parameters of the module.
      description: QueryParamsResponse is the response type for the Query/Params RPC
        method.
    juno.feeshare.v1.FeeShare:
      title: |-
        FeeShare defines an instance that organizes fee distribution conditions for
        the owner of a given smart contract
      type: object
      properties:
        contract_address:
          title: |-
            contract_address is the bech32 address of a registered contract in string
            form
          type: string
        deployer_address:
          type: string
          description: |-
            deployer_address is the bech32 address of message sender. It must be the
            same as the contracts admin address.
        withdrawer_address:
          type: string
          description: |-
            withdrawer_address is the bech32 address of account receiving the
            transaction fees.
    juno.feeshare.v1.Params:
      title: Params defines the feeshare module params
      type: object
      properties:
        enable_fee_share:
          title: enable_feeshare defines a parameter to enable the feeshare module
          type: boolean
        developer_shares:
          title: |-
            developer_shares defines the proportion of the transaction fees to be
            distributed to the registered contract owner
          type: string
        allowed_denoms:
          type: array
          description: |-
            allowed_denoms defines the list of denoms that are allowed to be paid to
            the contract withdraw addresses. If said denom is not in the list, the fees
            will ONLY be sent to the community pool.
            If this list is empty, all denoms are allowed.
          items:
            type: string
    juno.feeshare.v1.QueryDeployerFeeSharesResponse:
      type: object
      properties:
        contract_addresses:
          title: |-
            contract_addresses is the slice of registered contract addresses for a
            deployer
          type: array
          items:
            type: string
        pagination:
          type: object
          properties:
            next_key:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
      description: |-
        QueryDeployerFeeSharesResponse is the response type for the
        Query/DeployerFeeShares RPC method.
    juno.feeshare.v1.QueryFeeShareResponse:
      type: object
      properties:
        feeshare:
          title: |-
            FeeShare defines an instance that organizes fee distribution conditions for
            the owner of a given smart contract
          type: object
          properties:
            contract_address:
              title: |-
                contract_address is the bech32 address of a registered contract in string
                form
              type: string
            deployer_address:
              type: string
              description: |-
                deployer_address is the bech32 address of message sender. It must be the
                same as the contracts admin address.
            withdrawer_address:
              type: string
              description: |-
                withdrawer_address is the bech32 address of account receiving the
                transaction fees.
      description: QueryFeeShareResponse is the response type for the Query/FeeShare
        RPC method.
    juno.feeshare.v1.QueryFeeSharesResponse:
      type: object
      properties:
        feeshare:
          title: FeeShare is a slice of all stored Reveneue
          type: array
          items:
            title: |-
              FeeShare defines an instance that organizes fee distribution conditions for
              the owner of a given smart contract
            type: object
            properties:
              contract_address:
                title: |-
                  contract_address is the bech32 address of a registered contract in string
                  form
                type: string
              deployer_address:
                type: string
                description: |-
                  deployer_address is the bech32 address of message sender. It must be the
                  same as the contracts admin address.
              withdrawer_address:
                type: string
                description: |-
                  withdrawer_address is the bech32 address of account receiving the
                  transaction fees.
        pagination:
          type: object
          properties:
            next_key:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
      description: |-
        QueryFeeSharesResponse is the response type for the Query/FeeShares RPC
        method.
    juno.feeshare.v1.QueryParamsResponse:
      type: object
      properties:
        params:
          title: params is the returned FeeShare parameter
          type: object
          properties:
            enable_fee_share:
              title: enable_feeshare defines a parameter to enable the feeshare module
              type: boolean
            developer_shares:
              title: |-
                developer_shares defines the proportion of the transaction fees to be
                distributed to the registered contract owner
              type: string
            allowed_denoms:
              type: array
              description: |-
                allowed_denoms defines the list of denoms that are allowed to be paid to
                the contract withdraw addresses. If said denom is not in the list, the fees
                will ONLY be sent to the community pool.
                If this list is empty, all denoms are allowed.
              items:
                type: string
      description: QueryParamsResponse is the response type for the Query/Params RPC
        method.
    juno.feeshare.v1.QueryWithdrawerFeeSharesResponse:
      type: object
      properties:
        contract_addresses:
          title: |-
            contract_addresses is the slice of registered contract addresses for a
            withdrawer
          type: array
          items:
            type: string
        pagination:
          type: object
          properties:
            next_key:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              description: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently. It will be empty if
                there are no more results.
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
      description: |-
        QueryWithdrawerFeeSharesResponse is the response type for the
        Query/WithdrawerFeeShares RPC method.
    icq.v1.Params:
      type: object
      properties:
        host_enabled:
          type: boolean
          description: host_enabled enables or disables the host submodule.
        allow_queries:
          type: array
          description: allow_queries defines a list of query paths allowed to be queried
            on a host chain.
          items:
            type: string
      description: Params defines the set of on-chain interchain query parameters.
    icq.v1.QueryParamsResponse:
      type: object
      properties:
        params:
          type: object
          properties:
            host_enabled:
              type: boolean
              description: host_enabled enables or disables the host submodule.
            allow_queries:
              type: array
              description: allow_queries defines a list of query paths allowed to
                be queried on a host chain.
              items:
                type: string
          description: params defines the parameters of the module.
      description: QueryParamsResponse is the response type for the Query/Params RPC
        method.
x-original-swagger-version: "2.0"
